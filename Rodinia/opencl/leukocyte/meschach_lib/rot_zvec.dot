digraph "CFG for 'rot_zvec' function" {
	label="CFG for 'rot_zvec' function";

	Node0x60000012e120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{6:\l|  %7 = alloca %struct.complex, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca double, align 8\l  %12 = alloca ptr, align 8\l  %13 = alloca %struct.complex, align 8\l  %14 = alloca %struct.complex, align 8\l  store [2 x double] %4, ptr %7, align 8\l  store ptr %0, ptr %8, align 8\l  store i32 %1, ptr %9, align 4\l  store i32 %2, ptr %10, align 4\l  store double %3, ptr %11, align 8\l  store ptr %5, ptr %12, align 8\l  %15 = load ptr, ptr %8, align 8\l  %16 = icmp eq ptr %15, null\l  br i1 %16, label %17, label %19\l|{<s0>T|<s1>F}}"];
	Node0x60000012e120:s0 -> Node0x60000012e170[tooltip="6 -> 17\nProbability 37.50%" ];
	Node0x60000012e120:s1 -> Node0x60000012e1c0[tooltip="6 -> 19\nProbability 62.50%" ];
	Node0x60000012e170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{17:\l|  %18 = call i32 @ev_err(ptr noundef @.str, i32 noundef 8, i32 noundef 88,\l... ptr noundef @.str.1, i32 noundef 0)\l  br label %19\l}"];
	Node0x60000012e170 -> Node0x60000012e1c0[tooltip="17 -> 19\nProbability 100.00%" ];
	Node0x60000012e1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{19:\l|  %20 = load i32, ptr %9, align 4\l  %21 = icmp slt i32 %20, 0\l  br i1 %21, label %37, label %22\l|{<s0>T|<s1>F}}"];
	Node0x60000012e1c0:s0 -> Node0x60000012e300[tooltip="19 -> 37\nProbability 37.50%" ];
	Node0x60000012e1c0:s1 -> Node0x60000012e210[tooltip="19 -> 22\nProbability 62.50%" ];
	Node0x60000012e210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{22:\l|  %23 = load i32, ptr %9, align 4\l  %24 = load ptr, ptr %8, align 8\l  %25 = getelementptr inbounds %struct.ZVEC, ptr %24, i32 0, i32 0\l  %26 = load i32, ptr %25, align 8\l  %27 = icmp uge i32 %23, %26\l  br i1 %27, label %37, label %28\l|{<s0>T|<s1>F}}"];
	Node0x60000012e210:s0 -> Node0x60000012e300[tooltip="22 -> 37\nProbability 50.00%" ];
	Node0x60000012e210:s1 -> Node0x60000012e260[tooltip="22 -> 28\nProbability 50.00%" ];
	Node0x60000012e260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{28:\l|  %29 = load i32, ptr %10, align 4\l  %30 = icmp slt i32 %29, 0\l  br i1 %30, label %37, label %31\l|{<s0>T|<s1>F}}"];
	Node0x60000012e260:s0 -> Node0x60000012e300[tooltip="28 -> 37\nProbability 37.50%" ];
	Node0x60000012e260:s1 -> Node0x60000012e2b0[tooltip="28 -> 31\nProbability 62.50%" ];
	Node0x60000012e2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{31:\l|  %32 = load i32, ptr %10, align 4\l  %33 = load ptr, ptr %8, align 8\l  %34 = getelementptr inbounds %struct.ZVEC, ptr %33, i32 0, i32 0\l  %35 = load i32, ptr %34, align 8\l  %36 = icmp uge i32 %32, %35\l  br i1 %36, label %37, label %39\l|{<s0>T|<s1>F}}"];
	Node0x60000012e2b0:s0 -> Node0x60000012e300[tooltip="31 -> 37\nProbability 50.00%" ];
	Node0x60000012e2b0:s1 -> Node0x60000012e350[tooltip="31 -> 39\nProbability 50.00%" ];
	Node0x60000012e300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{37:\l|  %38 = call i32 @ev_err(ptr noundef @.str, i32 noundef 10, i32 noundef 90,\l... ptr noundef @.str.1, i32 noundef 0)\l  br label %39\l}"];
	Node0x60000012e300 -> Node0x60000012e350[tooltip="37 -> 39\nProbability 100.00%" ];
	Node0x60000012e350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{39:\l|  %40 = load ptr, ptr %8, align 8\l  %41 = load ptr, ptr %12, align 8\l  %42 = icmp ne ptr %40, %41\l  br i1 %42, label %43, label %47\l|{<s0>T|<s1>F}}"];
	Node0x60000012e350:s0 -> Node0x60000012e3a0[tooltip="39 -> 43\nProbability 62.50%" ];
	Node0x60000012e350:s1 -> Node0x60000012e3f0[tooltip="39 -> 47\nProbability 37.50%" ];
	Node0x60000012e3a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{43:\l|  %44 = load ptr, ptr %8, align 8\l  %45 = load ptr, ptr %12, align 8\l  %46 = call ptr @_zv_copy(ptr noundef %44, ptr noundef %45, i32 noundef 0)\l  store ptr %46, ptr %12, align 8\l  br label %47\l}"];
	Node0x60000012e3a0 -> Node0x60000012e3f0[tooltip="43 -> 47\nProbability 100.00%" ];
	Node0x60000012e3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{47:\l|  %48 = load double, ptr %11, align 8\l  %49 = load ptr, ptr %12, align 8\l  %50 = getelementptr inbounds %struct.ZVEC, ptr %49, i32 0, i32 2\l  %51 = load ptr, ptr %50, align 8\l  %52 = load i32, ptr %9, align 4\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds %struct.complex, ptr %51, i64 %53\l  %55 = getelementptr inbounds %struct.complex, ptr %54, i32 0, i32 0\l  %56 = load double, ptr %55, align 8\l  %57 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 0\l  %58 = load double, ptr %57, align 8\l  %59 = load ptr, ptr %12, align 8\l  %60 = getelementptr inbounds %struct.ZVEC, ptr %59, i32 0, i32 2\l  %61 = load ptr, ptr %60, align 8\l  %62 = load i32, ptr %10, align 4\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds %struct.complex, ptr %61, i64 %63\l  %65 = getelementptr inbounds %struct.complex, ptr %64, i32 0, i32 0\l  %66 = load double, ptr %65, align 8\l  %67 = fmul double %58, %66\l  %68 = fneg double %67\l  %69 = call double @llvm.fmuladd.f64(double %48, double %56, double %68)\l  %70 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 1\l  %71 = load double, ptr %70, align 8\l  %72 = load ptr, ptr %12, align 8\l  %73 = getelementptr inbounds %struct.ZVEC, ptr %72, i32 0, i32 2\l  %74 = load ptr, ptr %73, align 8\l  %75 = load i32, ptr %10, align 4\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds %struct.complex, ptr %74, i64 %76\l  %78 = getelementptr inbounds %struct.complex, ptr %77, i32 0, i32 1\l  %79 = load double, ptr %78, align 8\l  %80 = call double @llvm.fmuladd.f64(double %71, double %79, double %69)\l  %81 = getelementptr inbounds %struct.complex, ptr %13, i32 0, i32 0\l  store double %80, ptr %81, align 8\l  %82 = load double, ptr %11, align 8\l  %83 = load ptr, ptr %12, align 8\l  %84 = getelementptr inbounds %struct.ZVEC, ptr %83, i32 0, i32 2\l  %85 = load ptr, ptr %84, align 8\l  %86 = load i32, ptr %9, align 4\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds %struct.complex, ptr %85, i64 %87\l  %89 = getelementptr inbounds %struct.complex, ptr %88, i32 0, i32 1\l  %90 = load double, ptr %89, align 8\l  %91 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 0\l  %92 = load double, ptr %91, align 8\l  %93 = load ptr, ptr %12, align 8\l  %94 = getelementptr inbounds %struct.ZVEC, ptr %93, i32 0, i32 2\l  %95 = load ptr, ptr %94, align 8\l  %96 = load i32, ptr %10, align 4\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds %struct.complex, ptr %95, i64 %97\l  %99 = getelementptr inbounds %struct.complex, ptr %98, i32 0, i32 1\l  %100 = load double, ptr %99, align 8\l  %101 = fmul double %92, %100\l  %102 = fneg double %101\l  %103 = call double @llvm.fmuladd.f64(double %82, double %90, double %102)\l  %104 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 1\l  %105 = load double, ptr %104, align 8\l  %106 = load ptr, ptr %12, align 8\l  %107 = getelementptr inbounds %struct.ZVEC, ptr %106, i32 0, i32 2\l  %108 = load ptr, ptr %107, align 8\l  %109 = load i32, ptr %10, align 4\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds %struct.complex, ptr %108, i64 %110\l  %112 = getelementptr inbounds %struct.complex, ptr %111, i32 0, i32 0\l  %113 = load double, ptr %112, align 8\l  %114 = fneg double %105\l  %115 = call double @llvm.fmuladd.f64(double %114, double %113, double %103)\l  %116 = getelementptr inbounds %struct.complex, ptr %13, i32 0, i32 1\l  store double %115, ptr %116, align 8\l  %117 = load double, ptr %11, align 8\l  %118 = load ptr, ptr %12, align 8\l  %119 = getelementptr inbounds %struct.ZVEC, ptr %118, i32 0, i32 2\l  %120 = load ptr, ptr %119, align 8\l  %121 = load i32, ptr %10, align 4\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds %struct.complex, ptr %120, i64 %122\l  %124 = getelementptr inbounds %struct.complex, ptr %123, i32 0, i32 0\l  %125 = load double, ptr %124, align 8\l  %126 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 0\l  %127 = load double, ptr %126, align 8\l  %128 = load ptr, ptr %12, align 8\l  %129 = getelementptr inbounds %struct.ZVEC, ptr %128, i32 0, i32 2\l  %130 = load ptr, ptr %129, align 8\l  %131 = load i32, ptr %9, align 4\l  %132 = sext i32 %131 to i64\l  %133 = getelementptr inbounds %struct.complex, ptr %130, i64 %132\l  %134 = getelementptr inbounds %struct.complex, ptr %133, i32 0, i32 0\l  %135 = load double, ptr %134, align 8\l  %136 = fmul double %127, %135\l  %137 = call double @llvm.fmuladd.f64(double %117, double %125, double %136)\l  %138 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 1\l  %139 = load double, ptr %138, align 8\l  %140 = load ptr, ptr %12, align 8\l  %141 = getelementptr inbounds %struct.ZVEC, ptr %140, i32 0, i32 2\l  %142 = load ptr, ptr %141, align 8\l  %143 = load i32, ptr %9, align 4\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds %struct.complex, ptr %142, i64 %144\l  %146 = getelementptr inbounds %struct.complex, ptr %145, i32 0, i32 1\l  %147 = load double, ptr %146, align 8\l  %148 = call double @llvm.fmuladd.f64(double %139, double %147, double %137)\l  %149 = getelementptr inbounds %struct.complex, ptr %14, i32 0, i32 0\l  store double %148, ptr %149, align 8\l  %150 = load double, ptr %11, align 8\l  %151 = load ptr, ptr %12, align 8\l  %152 = getelementptr inbounds %struct.ZVEC, ptr %151, i32 0, i32 2\l  %153 = load ptr, ptr %152, align 8\l  %154 = load i32, ptr %10, align 4\l  %155 = sext i32 %154 to i64\l  %156 = getelementptr inbounds %struct.complex, ptr %153, i64 %155\l  %157 = getelementptr inbounds %struct.complex, ptr %156, i32 0, i32 1\l  %158 = load double, ptr %157, align 8\l  %159 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 0\l  %160 = load double, ptr %159, align 8\l  %161 = load ptr, ptr %12, align 8\l  %162 = getelementptr inbounds %struct.ZVEC, ptr %161, i32 0, i32 2\l  %163 = load ptr, ptr %162, align 8\l  %164 = load i32, ptr %9, align 4\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds %struct.complex, ptr %163, i64 %165\l  %167 = getelementptr inbounds %struct.complex, ptr %166, i32 0, i32 1\l  %168 = load double, ptr %167, align 8\l  %169 = fmul double %160, %168\l  %170 = call double @llvm.fmuladd.f64(double %150, double %158, double %169)\l  %171 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 1\l  %172 = load double, ptr %171, align 8\l  %173 = load ptr, ptr %12, align 8\l  %174 = getelementptr inbounds %struct.ZVEC, ptr %173, i32 0, i32 2\l  %175 = load ptr, ptr %174, align 8\l  %176 = load i32, ptr %9, align 4\l  %177 = sext i32 %176 to i64\l  %178 = getelementptr inbounds %struct.complex, ptr %175, i64 %177\l  %179 = getelementptr inbounds %struct.complex, ptr %178, i32 0, i32 0\l  %180 = load double, ptr %179, align 8\l  %181 = fneg double %172\l  %182 = call double @llvm.fmuladd.f64(double %181, double %180, double %170)\l  %183 = getelementptr inbounds %struct.complex, ptr %14, i32 0, i32 1\l  store double %182, ptr %183, align 8\l  %184 = load ptr, ptr %12, align 8\l  %185 = getelementptr inbounds %struct.ZVEC, ptr %184, i32 0, i32 2\l  %186 = load ptr, ptr %185, align 8\l  %187 = load i32, ptr %9, align 4\l  %188 = sext i32 %187 to i64\l  %189 = getelementptr inbounds %struct.complex, ptr %186, i64 %188\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %189, ptr align 8 %13, i64 16,\l... i1 false)\l  %190 = load ptr, ptr %12, align 8\l  %191 = getelementptr inbounds %struct.ZVEC, ptr %190, i32 0, i32 2\l  %192 = load ptr, ptr %191, align 8\l  %193 = load i32, ptr %10, align 4\l  %194 = sext i32 %193 to i64\l  %195 = getelementptr inbounds %struct.complex, ptr %192, i64 %194\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %195, ptr align 8 %14, i64 16,\l... i1 false)\l  %196 = load ptr, ptr %12, align 8\l  ret ptr %196\l}"];
}
