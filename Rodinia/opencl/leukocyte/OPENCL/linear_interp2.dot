digraph "CFG for 'linear_interp2' function" {
	label="CFG for 'linear_interp2' function";

	Node0x600002c165d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca double, align 8\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  %11 = alloca double, align 8\l  %12 = alloca double, align 8\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store ptr %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %16 = load ptr, ptr %5, align 8\l  %17 = getelementptr inbounds %struct.VEC, ptr %16, i32 0, i32 0\l  %18 = load i32, ptr %17, align 8\l  %19 = call ptr @m_get(i32 noundef 1, i32 noundef %18)\l  store ptr %19, ptr %7, align 8\l  store i32 0, ptr %15, align 4\l  br label %20\l}"];
	Node0x600002c165d0 -> Node0x600002c16620[tooltip="3 -> 20\nProbability 100.00%" ];
	Node0x600002c16620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{20:\l|  %21 = load i32, ptr %15, align 4\l  %22 = load ptr, ptr %5, align 8\l  %23 = getelementptr inbounds %struct.VEC, ptr %22, i32 0, i32 0\l  %24 = load i32, ptr %23, align 8\l  %25 = icmp ult i32 %21, %24\l  br i1 %25, label %26, label %133\l|{<s0>T|<s1>F}}"];
	Node0x600002c16620:s0 -> Node0x600002c16670[tooltip="20 -> 26\nProbability 96.88%" ];
	Node0x600002c16620:s1 -> Node0x600002c16710[tooltip="20 -> 133\nProbability 3.12%" ];
	Node0x600002c16670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{26:\l|  %27 = load ptr, ptr %5, align 8\l  %28 = getelementptr inbounds %struct.VEC, ptr %27, i32 0, i32 2\l  %29 = load ptr, ptr %28, align 8\l  %30 = load i32, ptr %15, align 4\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds double, ptr %29, i64 %31\l  %33 = load double, ptr %32, align 8\l  store double %33, ptr %8, align 8\l  %34 = load ptr, ptr %6, align 8\l  %35 = getelementptr inbounds %struct.VEC, ptr %34, i32 0, i32 2\l  %36 = load ptr, ptr %35, align 8\l  %37 = load i32, ptr %15, align 4\l  %38 = sext i32 %37 to i64\l  %39 = getelementptr inbounds double, ptr %36, i64 %38\l  %40 = load double, ptr %39, align 8\l  store double %40, ptr %9, align 8\l  %41 = load double, ptr %8, align 8\l  %42 = fptosi double %41 to i32\l  store i32 %42, ptr %13, align 4\l  %43 = load double, ptr %9, align 8\l  %44 = fptosi double %43 to i32\l  store i32 %44, ptr %14, align 4\l  %45 = load double, ptr %8, align 8\l  %46 = load i32, ptr %13, align 4\l  %47 = sitofp i32 %46 to double\l  %48 = fsub double %45, %47\l  store double %48, ptr %11, align 8\l  %49 = load double, ptr %9, align 8\l  %50 = load i32, ptr %14, align 4\l  %51 = sitofp i32 %50 to double\l  %52 = fsub double %49, %51\l  store double %52, ptr %12, align 8\l  %53 = load double, ptr %11, align 8\l  %54 = fsub double 1.000000e+00, %53\l  %55 = load double, ptr %12, align 8\l  %56 = fsub double 1.000000e+00, %55\l  %57 = fmul double %54, %56\l  %58 = load ptr, ptr %4, align 8\l  %59 = getelementptr inbounds %struct.MAT, ptr %58, i32 0, i32 5\l  %60 = load ptr, ptr %59, align 8\l  %61 = load i32, ptr %14, align 4\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds ptr, ptr %60, i64 %62\l  %64 = load ptr, ptr %63, align 8\l  %65 = load i32, ptr %13, align 4\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds double, ptr %64, i64 %66\l  %68 = load double, ptr %67, align 8\l  %69 = load double, ptr %11, align 8\l  %70 = load double, ptr %12, align 8\l  %71 = fsub double 1.000000e+00, %70\l  %72 = fmul double %69, %71\l  %73 = load ptr, ptr %4, align 8\l  %74 = getelementptr inbounds %struct.MAT, ptr %73, i32 0, i32 5\l  %75 = load ptr, ptr %74, align 8\l  %76 = load i32, ptr %14, align 4\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds ptr, ptr %75, i64 %77\l  %79 = load ptr, ptr %78, align 8\l  %80 = load i32, ptr %13, align 4\l  %81 = add nsw i32 %80, 1\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds double, ptr %79, i64 %82\l  %84 = load double, ptr %83, align 8\l  %85 = fmul double %72, %84\l  %86 = call double @llvm.fmuladd.f64(double %57, double %68, double %85)\l  %87 = load double, ptr %11, align 8\l  %88 = fsub double 1.000000e+00, %87\l  %89 = load double, ptr %12, align 8\l  %90 = fmul double %88, %89\l  %91 = load ptr, ptr %4, align 8\l  %92 = getelementptr inbounds %struct.MAT, ptr %91, i32 0, i32 5\l  %93 = load ptr, ptr %92, align 8\l  %94 = load i32, ptr %14, align 4\l  %95 = add nsw i32 %94, 1\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds ptr, ptr %93, i64 %96\l  %98 = load ptr, ptr %97, align 8\l  %99 = load i32, ptr %13, align 4\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, ptr %98, i64 %100\l  %102 = load double, ptr %101, align 8\l  %103 = call double @llvm.fmuladd.f64(double %90, double %102, double %86)\l  %104 = load double, ptr %11, align 8\l  %105 = load double, ptr %12, align 8\l  %106 = fmul double %104, %105\l  %107 = load ptr, ptr %4, align 8\l  %108 = getelementptr inbounds %struct.MAT, ptr %107, i32 0, i32 5\l  %109 = load ptr, ptr %108, align 8\l  %110 = load i32, ptr %14, align 4\l  %111 = add nsw i32 %110, 1\l  %112 = sext i32 %111 to i64\l  %113 = getelementptr inbounds ptr, ptr %109, i64 %112\l  %114 = load ptr, ptr %113, align 8\l  %115 = load i32, ptr %13, align 4\l  %116 = add nsw i32 %115, 1\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds double, ptr %114, i64 %117\l  %119 = load double, ptr %118, align 8\l  %120 = call double @llvm.fmuladd.f64(double %106, double %119, double %103)\l  store double %120, ptr %10, align 8\l  %121 = load double, ptr %10, align 8\l  %122 = load ptr, ptr %7, align 8\l  %123 = getelementptr inbounds %struct.MAT, ptr %122, i32 0, i32 5\l  %124 = load ptr, ptr %123, align 8\l  %125 = getelementptr inbounds ptr, ptr %124, i64 0\l  %126 = load ptr, ptr %125, align 8\l  %127 = load i32, ptr %15, align 4\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds double, ptr %126, i64 %128\l  store double %121, ptr %129, align 8\l  br label %130\l}"];
	Node0x600002c16670 -> Node0x600002c166c0[tooltip="26 -> 130\nProbability 100.00%" ];
	Node0x600002c166c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{130:\l|  %131 = load i32, ptr %15, align 4\l  %132 = add nsw i32 %131, 1\l  store i32 %132, ptr %15, align 4\l  br label %20\l}"];
	Node0x600002c166c0 -> Node0x600002c16620[tooltip="130 -> 20\nProbability 100.00%" ];
	Node0x600002c16710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{133:\l|  %134 = load ptr, ptr %7, align 8\l  ret ptr %134\l}"];
}
