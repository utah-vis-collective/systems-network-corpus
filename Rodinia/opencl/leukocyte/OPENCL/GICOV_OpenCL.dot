digraph "CFG for 'GICOV_OpenCL' function" {
	label="CFG for 'GICOV_OpenCL' function";

	Node0x600002e27d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{4:\l|  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca ptr, align 8\l  %13 = alloca ptr, align 8\l  %14 = alloca ptr, align 8\l  %15 = alloca ptr, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca ptr, align 8\l  %18 = alloca ptr, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i64, align 8\l  %22 = alloca i64, align 8\l  store i32 %0, ptr %5, align 4\l  store i32 %1, ptr %6, align 4\l  store ptr %2, ptr %7, align 8\l  store ptr %3, ptr %8, align 8\l  store i32 22, ptr %10, align 4\l  %23 = load i32, ptr %5, align 4\l  %24 = sext i32 %23 to i64\l  %25 = mul i64 4, %24\l  %26 = load i32, ptr %6, align 4\l  %27 = sext i32 %26 to i64\l  %28 = mul i64 %25, %27\l  %29 = trunc i64 %28 to i32\l  store i32 %29, ptr %11, align 4\l  %30 = load ptr, ptr @context, align 8\l  %31 = load i32, ptr %11, align 4\l  %32 = zext i32 %31 to i64\l  %33 = load ptr, ptr %7, align 8\l  %34 = call ptr @clCreateBuffer(ptr noundef %30, i64 noundef 36, i64 noundef\l... %32, ptr noundef %33, ptr noundef %9)\l  store ptr %34, ptr %12, align 8\l  %35 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %35, ptr noundef @.str, i32 noundef 56)\l  %36 = load ptr, ptr @context, align 8\l  %37 = load i32, ptr %11, align 4\l  %38 = zext i32 %37 to i64\l  %39 = load ptr, ptr %8, align 8\l  %40 = call ptr @clCreateBuffer(ptr noundef %36, i64 noundef 36, i64 noundef\l... %38, ptr noundef %39, ptr noundef %9)\l  store ptr %40, ptr %13, align 8\l  %41 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %41, ptr noundef @.str, i32 noundef 58)\l  %42 = load i32, ptr %11, align 4\l  %43 = zext i32 %42 to i64\l  %44 = call ptr @malloc(i64 noundef %43) #7\l  store ptr %44, ptr %14, align 8\l  %45 = load ptr, ptr %14, align 8\l  %46 = load i32, ptr %11, align 4\l  %47 = zext i32 %46 to i64\l  %48 = load ptr, ptr %14, align 8\l  %49 = call i64 @llvm.objectsize.i64.p0(ptr %48, i1 false, i1 true, i1 false)\l  %50 = call ptr @__memset_chk(ptr noundef %45, i32 noundef 0, i64 noundef\l... %47, i64 noundef %49) #8\l  %51 = load ptr, ptr @context, align 8\l  %52 = load i32, ptr %11, align 4\l  %53 = zext i32 %52 to i64\l  %54 = load ptr, ptr %14, align 8\l  %55 = call ptr @clCreateBuffer(ptr noundef %51, i64 noundef 9, i64 noundef\l... %53, ptr noundef %54, ptr noundef %9)\l  store ptr %55, ptr @device_gicov, align 8\l  %56 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %56, ptr noundef @.str, i32 noundef 68)\l  %57 = call ptr @load_kernel_source(ptr noundef @.str.1)\l  store ptr %57, ptr %15, align 8\l  %58 = load ptr, ptr %15, align 8\l  %59 = call i64 @strlen(ptr noundef %58) #8\l  store i64 %59, ptr %16, align 8\l  %60 = load ptr, ptr @context, align 8\l  %61 = call ptr @clCreateProgramWithSource(ptr noundef %60, i32 noundef 1,\l... ptr noundef %15, ptr noundef %16, ptr noundef %9)\l  store ptr %61, ptr %17, align 8\l  %62 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %62, ptr noundef @.str, i32 noundef 76)\l  %63 = load ptr, ptr %17, align 8\l  %64 = call i32 @clBuildProgram(ptr noundef %63, i32 noundef 1, ptr noundef\l... @device, ptr noundef null, ptr noundef null, ptr noundef null)\l  store i32 %64, ptr %9, align 4\l  call void @llvm.memset.p0.i64(ptr align 1 @GICOV_OpenCL.log, i8 0, i64\l... 65536, i1 false)\l  %65 = load ptr, ptr %17, align 8\l  %66 = load ptr, ptr @device, align 8\l  %67 = call i32 @clGetProgramBuildInfo(ptr noundef %65, ptr noundef %66, i32\l... noundef 4483, i64 noundef 65535, ptr noundef @GICOV_OpenCL.log, ptr noundef\l... null)\l  %68 = call ptr @strstr(ptr noundef @GICOV_OpenCL.log, ptr noundef @.str.2) #8\l  %69 = icmp ne ptr %68, null\l  br i1 %69, label %73, label %70\l|{<s0>T|<s1>F}}"];
	Node0x600002e27d90:s0 -> Node0x600002e27e30[tooltip="4 -> 73\nProbability 62.50%" ];
	Node0x600002e27d90:s1 -> Node0x600002e27de0[tooltip="4 -> 70\nProbability 37.50%" ];
	Node0x600002e27de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{70:\l|  %71 = call ptr @strstr(ptr noundef @GICOV_OpenCL.log, ptr noundef @.str.3)\l... #8\l  %72 = icmp ne ptr %71, null\l  br i1 %72, label %73, label %75\l|{<s0>T|<s1>F}}"];
	Node0x600002e27de0:s0 -> Node0x600002e27e30[tooltip="70 -> 73\nProbability 62.50%" ];
	Node0x600002e27de0:s1 -> Node0x600002e27e80[tooltip="70 -> 75\nProbability 37.50%" ];
	Node0x600002e27e30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{73:\l|  %74 = call i32 (ptr, ...) @printf(ptr noundef @.str.4, ptr noundef\l... @GICOV_OpenCL.log)\l  br label %75\l}"];
	Node0x600002e27e30 -> Node0x600002e27e80[tooltip="73 -> 75\nProbability 100.00%" ];
	Node0x600002e27e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{75:\l|  %76 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %76, ptr noundef @.str, i32 noundef 86)\l  %77 = load ptr, ptr %17, align 8\l  %78 = call ptr @clCreateKernel(ptr noundef %77, ptr noundef @.str.5, ptr\l... noundef %9)\l  store ptr %78, ptr %18, align 8\l  %79 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %79, ptr noundef @.str, i32 noundef 90)\l  %80 = load ptr, ptr %17, align 8\l  %81 = call ptr @clCreateKernel(ptr noundef %80, ptr noundef @.str.6, ptr\l... noundef %9)\l  store ptr %81, ptr @dilate_kernel, align 8\l  %82 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %82, ptr noundef @.str, i32 noundef 92)\l  %83 = load i32, ptr %5, align 4\l  %84 = load i32, ptr %10, align 4\l  %85 = mul nsw i32 2, %84\l  %86 = sub nsw i32 %83, %85\l  store i32 %86, ptr %19, align 4\l  %87 = load i32, ptr %6, align 4\l  %88 = load i32, ptr %10, align 4\l  %89 = mul nsw i32 2, %88\l  %90 = sub nsw i32 %87, %89\l  store i32 %90, ptr %20, align 4\l  %91 = load ptr, ptr %18, align 8\l  %92 = call i32 @clSetKernelArg(ptr noundef %91, i32 noundef 0, i64 noundef\l... 4, ptr noundef %5)\l  %93 = load ptr, ptr %18, align 8\l  %94 = call i32 @clSetKernelArg(ptr noundef %93, i32 noundef 1, i64 noundef\l... 8, ptr noundef %12)\l  %95 = load ptr, ptr %18, align 8\l  %96 = call i32 @clSetKernelArg(ptr noundef %95, i32 noundef 2, i64 noundef\l... 8, ptr noundef %13)\l  %97 = load ptr, ptr %18, align 8\l  %98 = call i32 @clSetKernelArg(ptr noundef %97, i32 noundef 3, i64 noundef\l... 8, ptr noundef @c_sin_angle)\l  %99 = load ptr, ptr %18, align 8\l  %100 = call i32 @clSetKernelArg(ptr noundef %99, i32 noundef 4, i64 noundef\l... 8, ptr noundef @c_cos_angle)\l  %101 = load ptr, ptr %18, align 8\l  %102 = call i32 @clSetKernelArg(ptr noundef %101, i32 noundef 5, i64 noundef\l... 8, ptr noundef @c_tX)\l  %103 = load ptr, ptr %18, align 8\l  %104 = call i32 @clSetKernelArg(ptr noundef %103, i32 noundef 6, i64 noundef\l... 8, ptr noundef @c_tY)\l  %105 = load ptr, ptr %18, align 8\l  %106 = call i32 @clSetKernelArg(ptr noundef %105, i32 noundef 7, i64 noundef\l... 8, ptr noundef @device_gicov)\l  %107 = load ptr, ptr %18, align 8\l  %108 = call i32 @clSetKernelArg(ptr noundef %107, i32 noundef 8, i64 noundef\l... 4, ptr noundef %19)\l  %109 = load ptr, ptr %18, align 8\l  %110 = call i32 @clSetKernelArg(ptr noundef %109, i32 noundef 9, i64 noundef\l... 4, ptr noundef %20)\l  store i64 256, ptr %21, align 8\l  %111 = load i32, ptr %20, align 4\l  %112 = load i32, ptr %19, align 4\l  %113 = mul nsw i32 %111, %112\l  %114 = sext i32 %113 to i64\l  store i64 %114, ptr %22, align 8\l  %115 = load i64, ptr %22, align 8\l  %116 = load i64, ptr %21, align 8\l  %117 = urem i64 %115, %116\l  %118 = icmp ugt i64 %117, 0\l  br i1 %118, label %119, label %126\l|{<s0>T|<s1>F}}"];
	Node0x600002e27e80:s0 -> Node0x600002e27ed0[tooltip="75 -> 119\nProbability 50.00%" ];
	Node0x600002e27e80:s1 -> Node0x600002e27f20[tooltip="75 -> 126\nProbability 50.00%" ];
	Node0x600002e27ed0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{119:\l|  %120 = load i64, ptr %22, align 8\l  %121 = load i64, ptr %21, align 8\l  %122 = udiv i64 %120, %121\l  %123 = add i64 %122, 1\l  %124 = load i64, ptr %21, align 8\l  %125 = mul i64 %123, %124\l  store i64 %125, ptr %22, align 8\l  br label %126\l}"];
	Node0x600002e27ed0 -> Node0x600002e27f20[tooltip="119 -> 126\nProbability 100.00%" ];
	Node0x600002e27f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{126:\l|  %127 = load i64, ptr %21, align 8\l  %128 = load i64, ptr %22, align 8\l  %129 = call i32 (ptr, ...) @printf(ptr noundef @.str.7, i64 noundef %127,\l... i64 noundef %128)\l  %130 = load ptr, ptr @command_queue, align 8\l  %131 = load ptr, ptr %18, align 8\l  %132 = call i32 @clEnqueueNDRangeKernel(ptr noundef %130, ptr noundef %131,\l... i32 noundef 1, ptr noundef null, ptr noundef %22, ptr noundef %21, i32\l... noundef 0, ptr noundef null, ptr noundef null)\l  store i32 %132, ptr %9, align 4\l  %133 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %133, ptr noundef @.str, i32 noundef 121)\l  %134 = load ptr, ptr @command_queue, align 8\l  %135 = call i32 @clFinish(ptr noundef %134)\l  store i32 %135, ptr %9, align 4\l  %136 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %136, ptr noundef @.str, i32 noundef 126)\l  %137 = load ptr, ptr @command_queue, align 8\l  %138 = load ptr, ptr @device_gicov, align 8\l  %139 = load i32, ptr %11, align 4\l  %140 = zext i32 %139 to i64\l  %141 = call ptr @clEnqueueMapBuffer(ptr noundef %137, ptr noundef %138, i32\l... noundef 1, i64 noundef 1, i64 noundef 0, i64 noundef %140, i32 noundef 0, ptr\l... noundef null, ptr noundef null, ptr noundef %9)\l  store ptr %141, ptr %14, align 8\l  %142 = load i32, ptr %9, align 4\l  call void @check_error(i32 noundef %142, ptr noundef @.str, i32 noundef 130)\l  %143 = load ptr, ptr %12, align 8\l  %144 = call i32 @clReleaseMemObject(ptr noundef %143)\l  %145 = load ptr, ptr %13, align 8\l  %146 = call i32 @clReleaseMemObject(ptr noundef %145)\l  %147 = load ptr, ptr %14, align 8\l  ret ptr %147\l}"];
}
