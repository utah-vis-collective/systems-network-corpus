digraph "CFG for 'InitProblemOnce' function" {
	label="CFG for 'InitProblemOnce' function";

	Node0x600002e32120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{0:\l|  %1 = alloca [30 x i8], align 1\l  %2 = call i32 (ptr, ...) @printf(ptr noundef @.str.3)\l  %3 = getelementptr inbounds [30 x i8], ptr %1, i64 0, i64 0\l  %4 = call i32 (ptr, ...) @scanf(ptr noundef @.str.4, ptr noundef %3)\l  %5 = getelementptr inbounds [30 x i8], ptr %1, i64 0, i64 0\l  %6 = call i32 (ptr, ...) @printf(ptr noundef @.str.5, ptr noundef %5)\l  %7 = getelementptr inbounds [30 x i8], ptr %1, i64 0, i64 0\l  %8 = call ptr @\"\\01_fopen\"(ptr noundef %7, ptr noundef @.str.6)\l  store ptr %8, ptr @fp, align 8\l  %9 = load ptr, ptr @fp, align 8\l  %10 = call i32 (ptr, ptr, ...) @fscanf(ptr noundef %9, ptr noundef @.str.7,\l... ptr noundef @Size)\l  %11 = load i32, ptr @Size, align 4\l  %12 = load i32, ptr @Size, align 4\l  %13 = call i32 @UsAllocScatterMatrix(i32 noundef %11, i32 noundef %12, i64\l... noundef 4)\l  %14 = sext i32 %13 to i64\l  %15 = inttoptr i64 %14 to ptr\l  store ptr %15, ptr @a, align 8\l  %16 = load ptr, ptr @a, align 8\l  %17 = load i32, ptr @Size, align 4\l  %18 = load i32, ptr @Size, align 4\l  call void @InitMat(ptr noundef %16, i32 noundef %17, i32 noundef %18)\l  %19 = call i32 (ptr, ...) @printf(ptr noundef @.str.8)\l  %20 = load ptr, ptr @a, align 8\l  %21 = load i32, ptr @Size, align 4\l  %22 = load i32, ptr @Size, align 4\l  call void @PrintMat(ptr noundef %20, i32 noundef %21, i32 noundef %22)\l  %23 = load i32, ptr @Size, align 4\l  %24 = sext i32 %23 to i64\l  %25 = mul i64 %24, 4\l  %26 = call i32 @UsAlloc(i64 noundef %25)\l  %27 = sext i32 %26 to i64\l  %28 = inttoptr i64 %27 to ptr\l  store ptr %28, ptr @b, align 8\l  %29 = load ptr, ptr @b, align 8\l  %30 = load i32, ptr @Size, align 4\l  call void @InitAry(ptr noundef %29, i32 noundef %30)\l  %31 = call i32 (ptr, ...) @printf(ptr noundef @.str.9)\l  %32 = load ptr, ptr @b, align 8\l  %33 = load i32, ptr @Size, align 4\l  call void @PrintAry(ptr noundef %32, i32 noundef %33)\l  %34 = load i32, ptr @Size, align 4\l  %35 = load i32, ptr @Size, align 4\l  %36 = call i32 @UsAllocScatterMatrix(i32 noundef %34, i32 noundef %35, i64\l... noundef 4)\l  %37 = sext i32 %36 to i64\l  %38 = inttoptr i64 %37 to ptr\l  store ptr %38, ptr @m, align 8\l  %39 = call i32 @Share(ptr noundef @Size)\l  %40 = call i32 @Share(ptr noundef @a)\l  %41 = call i32 @Share(ptr noundef @b)\l  ret void\l}"];
}
