digraph "CFG for 'BF_ofb64_encrypt' function" {
	label="CFG for 'BF_ofb64_encrypt' function";

	Node0x600002634050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{6:\l|  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca ptr, align 8\l  %12 = alloca ptr, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i32, align 4\l  %17 = alloca i64, align 8\l  %18 = alloca [8 x i8], align 1\l  %19 = alloca ptr, align 8\l  %20 = alloca [2 x i64], align 8\l  %21 = alloca ptr, align 8\l  %22 = alloca i32, align 4\l  store ptr %0, ptr %7, align 8\l  store ptr %1, ptr %8, align 8\l  store i64 %2, ptr %9, align 8\l  store ptr %3, ptr %10, align 8\l  store ptr %4, ptr %11, align 8\l  store ptr %5, ptr %12, align 8\l  %23 = load ptr, ptr %12, align 8\l  %24 = load i32, ptr %23, align 4\l  store i32 %24, ptr %16, align 4\l  %25 = load i64, ptr %9, align 8\l  store i64 %25, ptr %17, align 8\l  store i32 0, ptr %22, align 4\l  %26 = load ptr, ptr %11, align 8\l  store ptr %26, ptr %21, align 8\l  %27 = load ptr, ptr %21, align 8\l  %28 = getelementptr inbounds i8, ptr %27, i32 1\l  store ptr %28, ptr %21, align 8\l  %29 = load i8, ptr %27, align 1\l  %30 = zext i8 %29 to i64\l  %31 = shl i64 %30, 24\l  store i64 %31, ptr %13, align 8\l  %32 = load ptr, ptr %21, align 8\l  %33 = getelementptr inbounds i8, ptr %32, i32 1\l  store ptr %33, ptr %21, align 8\l  %34 = load i8, ptr %32, align 1\l  %35 = zext i8 %34 to i64\l  %36 = shl i64 %35, 16\l  %37 = load i64, ptr %13, align 8\l  %38 = or i64 %37, %36\l  store i64 %38, ptr %13, align 8\l  %39 = load ptr, ptr %21, align 8\l  %40 = getelementptr inbounds i8, ptr %39, i32 1\l  store ptr %40, ptr %21, align 8\l  %41 = load i8, ptr %39, align 1\l  %42 = zext i8 %41 to i64\l  %43 = shl i64 %42, 8\l  %44 = load i64, ptr %13, align 8\l  %45 = or i64 %44, %43\l  store i64 %45, ptr %13, align 8\l  %46 = load ptr, ptr %21, align 8\l  %47 = getelementptr inbounds i8, ptr %46, i32 1\l  store ptr %47, ptr %21, align 8\l  %48 = load i8, ptr %46, align 1\l  %49 = zext i8 %48 to i64\l  %50 = load i64, ptr %13, align 8\l  %51 = or i64 %50, %49\l  store i64 %51, ptr %13, align 8\l  %52 = load ptr, ptr %21, align 8\l  %53 = getelementptr inbounds i8, ptr %52, i32 1\l  store ptr %53, ptr %21, align 8\l  %54 = load i8, ptr %52, align 1\l  %55 = zext i8 %54 to i64\l  %56 = shl i64 %55, 24\l  store i64 %56, ptr %14, align 8\l  %57 = load ptr, ptr %21, align 8\l  %58 = getelementptr inbounds i8, ptr %57, i32 1\l  store ptr %58, ptr %21, align 8\l  %59 = load i8, ptr %57, align 1\l  %60 = zext i8 %59 to i64\l  %61 = shl i64 %60, 16\l  %62 = load i64, ptr %14, align 8\l  %63 = or i64 %62, %61\l  store i64 %63, ptr %14, align 8\l  %64 = load ptr, ptr %21, align 8\l  %65 = getelementptr inbounds i8, ptr %64, i32 1\l  store ptr %65, ptr %21, align 8\l  %66 = load i8, ptr %64, align 1\l  %67 = zext i8 %66 to i64\l  %68 = shl i64 %67, 8\l  %69 = load i64, ptr %14, align 8\l  %70 = or i64 %69, %68\l  store i64 %70, ptr %14, align 8\l  %71 = load ptr, ptr %21, align 8\l  %72 = getelementptr inbounds i8, ptr %71, i32 1\l  store ptr %72, ptr %21, align 8\l  %73 = load i8, ptr %71, align 1\l  %74 = zext i8 %73 to i64\l  %75 = load i64, ptr %14, align 8\l  %76 = or i64 %75, %74\l  store i64 %76, ptr %14, align 8\l  %77 = load i64, ptr %13, align 8\l  %78 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 0\l  store i64 %77, ptr %78, align 8\l  %79 = load i64, ptr %14, align 8\l  %80 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 1\l  store i64 %79, ptr %80, align 8\l  %81 = getelementptr inbounds [8 x i8], ptr %18, i64 0, i64 0\l  store ptr %81, ptr %19, align 8\l  %82 = load i64, ptr %13, align 8\l  %83 = lshr i64 %82, 24\l  %84 = and i64 %83, 255\l  %85 = trunc i64 %84 to i8\l  %86 = load ptr, ptr %19, align 8\l  %87 = getelementptr inbounds i8, ptr %86, i32 1\l  store ptr %87, ptr %19, align 8\l  store i8 %85, ptr %86, align 1\l  %88 = load i64, ptr %13, align 8\l  %89 = lshr i64 %88, 16\l  %90 = and i64 %89, 255\l  %91 = trunc i64 %90 to i8\l  %92 = load ptr, ptr %19, align 8\l  %93 = getelementptr inbounds i8, ptr %92, i32 1\l  store ptr %93, ptr %19, align 8\l  store i8 %91, ptr %92, align 1\l  %94 = load i64, ptr %13, align 8\l  %95 = lshr i64 %94, 8\l  %96 = and i64 %95, 255\l  %97 = trunc i64 %96 to i8\l  %98 = load ptr, ptr %19, align 8\l  %99 = getelementptr inbounds i8, ptr %98, i32 1\l  store ptr %99, ptr %19, align 8\l  store i8 %97, ptr %98, align 1\l  %100 = load i64, ptr %13, align 8\l  %101 = and i64 %100, 255\l  %102 = trunc i64 %101 to i8\l  %103 = load ptr, ptr %19, align 8\l  %104 = getelementptr inbounds i8, ptr %103, i32 1\l  store ptr %104, ptr %19, align 8\l  store i8 %102, ptr %103, align 1\l  %105 = load i64, ptr %14, align 8\l  %106 = lshr i64 %105, 24\l  %107 = and i64 %106, 255\l  %108 = trunc i64 %107 to i8\l  %109 = load ptr, ptr %19, align 8\l  %110 = getelementptr inbounds i8, ptr %109, i32 1\l  store ptr %110, ptr %19, align 8\l  store i8 %108, ptr %109, align 1\l  %111 = load i64, ptr %14, align 8\l  %112 = lshr i64 %111, 16\l  %113 = and i64 %112, 255\l  %114 = trunc i64 %113 to i8\l  %115 = load ptr, ptr %19, align 8\l  %116 = getelementptr inbounds i8, ptr %115, i32 1\l  store ptr %116, ptr %19, align 8\l  store i8 %114, ptr %115, align 1\l  %117 = load i64, ptr %14, align 8\l  %118 = lshr i64 %117, 8\l  %119 = and i64 %118, 255\l  %120 = trunc i64 %119 to i8\l  %121 = load ptr, ptr %19, align 8\l  %122 = getelementptr inbounds i8, ptr %121, i32 1\l  store ptr %122, ptr %19, align 8\l  store i8 %120, ptr %121, align 1\l  %123 = load i64, ptr %14, align 8\l  %124 = and i64 %123, 255\l  %125 = trunc i64 %124 to i8\l  %126 = load ptr, ptr %19, align 8\l  %127 = getelementptr inbounds i8, ptr %126, i32 1\l  store ptr %127, ptr %19, align 8\l  store i8 %125, ptr %126, align 1\l  br label %128\l}"];
	Node0x600002634050 -> Node0x6000026340f0[tooltip="6 -> 128\nProbability 100.00%" ];
	Node0x6000026340f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{128:\l|  %129 = load i64, ptr %17, align 8\l  %130 = add nsw i64 %129, -1\l  store i64 %130, ptr %17, align 8\l  %131 = icmp ne i64 %129, 0\l  br i1 %131, label %132, label %208\l|{<s0>T|<s1>F}}"];
	Node0x6000026340f0:s0 -> Node0x600002634140[tooltip="128 -> 132\nProbability 96.88%" ];
	Node0x6000026340f0:s1 -> Node0x600002634230[tooltip="128 -> 208\nProbability 3.12%" ];
	Node0x600002634140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{132:\l|  %133 = load i32, ptr %16, align 4\l  %134 = icmp eq i32 %133, 0\l  br i1 %134, label %135, label %191\l|{<s0>T|<s1>F}}"];
	Node0x600002634140:s0 -> Node0x600002634190[tooltip="132 -> 135\nProbability 37.50%" ];
	Node0x600002634140:s1 -> Node0x6000026341e0[tooltip="132 -> 191\nProbability 62.50%" ];
	Node0x600002634190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{135:\l|  %136 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 0\l  %137 = load ptr, ptr %10, align 8\l  call void @BF_encrypt(ptr noundef %136, ptr noundef %137, i32 noundef 1)\l  %138 = getelementptr inbounds [8 x i8], ptr %18, i64 0, i64 0\l  store ptr %138, ptr %19, align 8\l  %139 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 0\l  %140 = load i64, ptr %139, align 8\l  store i64 %140, ptr %15, align 8\l  %141 = load i64, ptr %15, align 8\l  %142 = lshr i64 %141, 24\l  %143 = and i64 %142, 255\l  %144 = trunc i64 %143 to i8\l  %145 = load ptr, ptr %19, align 8\l  %146 = getelementptr inbounds i8, ptr %145, i32 1\l  store ptr %146, ptr %19, align 8\l  store i8 %144, ptr %145, align 1\l  %147 = load i64, ptr %15, align 8\l  %148 = lshr i64 %147, 16\l  %149 = and i64 %148, 255\l  %150 = trunc i64 %149 to i8\l  %151 = load ptr, ptr %19, align 8\l  %152 = getelementptr inbounds i8, ptr %151, i32 1\l  store ptr %152, ptr %19, align 8\l  store i8 %150, ptr %151, align 1\l  %153 = load i64, ptr %15, align 8\l  %154 = lshr i64 %153, 8\l  %155 = and i64 %154, 255\l  %156 = trunc i64 %155 to i8\l  %157 = load ptr, ptr %19, align 8\l  %158 = getelementptr inbounds i8, ptr %157, i32 1\l  store ptr %158, ptr %19, align 8\l  store i8 %156, ptr %157, align 1\l  %159 = load i64, ptr %15, align 8\l  %160 = and i64 %159, 255\l  %161 = trunc i64 %160 to i8\l  %162 = load ptr, ptr %19, align 8\l  %163 = getelementptr inbounds i8, ptr %162, i32 1\l  store ptr %163, ptr %19, align 8\l  store i8 %161, ptr %162, align 1\l  %164 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 1\l  %165 = load i64, ptr %164, align 8\l  store i64 %165, ptr %15, align 8\l  %166 = load i64, ptr %15, align 8\l  %167 = lshr i64 %166, 24\l  %168 = and i64 %167, 255\l  %169 = trunc i64 %168 to i8\l  %170 = load ptr, ptr %19, align 8\l  %171 = getelementptr inbounds i8, ptr %170, i32 1\l  store ptr %171, ptr %19, align 8\l  store i8 %169, ptr %170, align 1\l  %172 = load i64, ptr %15, align 8\l  %173 = lshr i64 %172, 16\l  %174 = and i64 %173, 255\l  %175 = trunc i64 %174 to i8\l  %176 = load ptr, ptr %19, align 8\l  %177 = getelementptr inbounds i8, ptr %176, i32 1\l  store ptr %177, ptr %19, align 8\l  store i8 %175, ptr %176, align 1\l  %178 = load i64, ptr %15, align 8\l  %179 = lshr i64 %178, 8\l  %180 = and i64 %179, 255\l  %181 = trunc i64 %180 to i8\l  %182 = load ptr, ptr %19, align 8\l  %183 = getelementptr inbounds i8, ptr %182, i32 1\l  store ptr %183, ptr %19, align 8\l  store i8 %181, ptr %182, align 1\l  %184 = load i64, ptr %15, align 8\l  %185 = and i64 %184, 255\l  %186 = trunc i64 %185 to i8\l  %187 = load ptr, ptr %19, align 8\l  %188 = getelementptr inbounds i8, ptr %187, i32 1\l  store ptr %188, ptr %19, align 8\l  store i8 %186, ptr %187, align 1\l  %189 = load i32, ptr %22, align 4\l  %190 = add nsw i32 %189, 1\l  store i32 %190, ptr %22, align 4\l  br label %191\l}"];
	Node0x600002634190 -> Node0x6000026341e0[tooltip="135 -> 191\nProbability 100.00%" ];
	Node0x6000026341e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{191:\l|  %192 = load ptr, ptr %7, align 8\l  %193 = getelementptr inbounds i8, ptr %192, i32 1\l  store ptr %193, ptr %7, align 8\l  %194 = load i8, ptr %192, align 1\l  %195 = zext i8 %194 to i32\l  %196 = load i32, ptr %16, align 4\l  %197 = sext i32 %196 to i64\l  %198 = getelementptr inbounds [8 x i8], ptr %18, i64 0, i64 %197\l  %199 = load i8, ptr %198, align 1\l  %200 = zext i8 %199 to i32\l  %201 = xor i32 %195, %200\l  %202 = trunc i32 %201 to i8\l  %203 = load ptr, ptr %8, align 8\l  %204 = getelementptr inbounds i8, ptr %203, i32 1\l  store ptr %204, ptr %8, align 8\l  store i8 %202, ptr %203, align 1\l  %205 = load i32, ptr %16, align 4\l  %206 = add nsw i32 %205, 1\l  %207 = and i32 %206, 7\l  store i32 %207, ptr %16, align 4\l  br label %128\l}"];
	Node0x6000026341e0 -> Node0x6000026340f0[tooltip="191 -> 128\nProbability 100.00%" ];
	Node0x600002634230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{208:\l|  %209 = load i32, ptr %22, align 4\l  %210 = icmp ne i32 %209, 0\l  br i1 %210, label %211, label %263\l|{<s0>T|<s1>F}}"];
	Node0x600002634230:s0 -> Node0x600002634280[tooltip="208 -> 211\nProbability 62.50%" ];
	Node0x600002634230:s1 -> Node0x6000026342d0[tooltip="208 -> 263\nProbability 37.50%" ];
	Node0x600002634280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{211:\l|  %212 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 0\l  %213 = load i64, ptr %212, align 8\l  store i64 %213, ptr %13, align 8\l  %214 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 1\l  %215 = load i64, ptr %214, align 8\l  store i64 %215, ptr %14, align 8\l  %216 = load ptr, ptr %11, align 8\l  store ptr %216, ptr %21, align 8\l  %217 = load i64, ptr %13, align 8\l  %218 = lshr i64 %217, 24\l  %219 = and i64 %218, 255\l  %220 = trunc i64 %219 to i8\l  %221 = load ptr, ptr %21, align 8\l  %222 = getelementptr inbounds i8, ptr %221, i32 1\l  store ptr %222, ptr %21, align 8\l  store i8 %220, ptr %221, align 1\l  %223 = load i64, ptr %13, align 8\l  %224 = lshr i64 %223, 16\l  %225 = and i64 %224, 255\l  %226 = trunc i64 %225 to i8\l  %227 = load ptr, ptr %21, align 8\l  %228 = getelementptr inbounds i8, ptr %227, i32 1\l  store ptr %228, ptr %21, align 8\l  store i8 %226, ptr %227, align 1\l  %229 = load i64, ptr %13, align 8\l  %230 = lshr i64 %229, 8\l  %231 = and i64 %230, 255\l  %232 = trunc i64 %231 to i8\l  %233 = load ptr, ptr %21, align 8\l  %234 = getelementptr inbounds i8, ptr %233, i32 1\l  store ptr %234, ptr %21, align 8\l  store i8 %232, ptr %233, align 1\l  %235 = load i64, ptr %13, align 8\l  %236 = and i64 %235, 255\l  %237 = trunc i64 %236 to i8\l  %238 = load ptr, ptr %21, align 8\l  %239 = getelementptr inbounds i8, ptr %238, i32 1\l  store ptr %239, ptr %21, align 8\l  store i8 %237, ptr %238, align 1\l  %240 = load i64, ptr %14, align 8\l  %241 = lshr i64 %240, 24\l  %242 = and i64 %241, 255\l  %243 = trunc i64 %242 to i8\l  %244 = load ptr, ptr %21, align 8\l  %245 = getelementptr inbounds i8, ptr %244, i32 1\l  store ptr %245, ptr %21, align 8\l  store i8 %243, ptr %244, align 1\l  %246 = load i64, ptr %14, align 8\l  %247 = lshr i64 %246, 16\l  %248 = and i64 %247, 255\l  %249 = trunc i64 %248 to i8\l  %250 = load ptr, ptr %21, align 8\l  %251 = getelementptr inbounds i8, ptr %250, i32 1\l  store ptr %251, ptr %21, align 8\l  store i8 %249, ptr %250, align 1\l  %252 = load i64, ptr %14, align 8\l  %253 = lshr i64 %252, 8\l  %254 = and i64 %253, 255\l  %255 = trunc i64 %254 to i8\l  %256 = load ptr, ptr %21, align 8\l  %257 = getelementptr inbounds i8, ptr %256, i32 1\l  store ptr %257, ptr %21, align 8\l  store i8 %255, ptr %256, align 1\l  %258 = load i64, ptr %14, align 8\l  %259 = and i64 %258, 255\l  %260 = trunc i64 %259 to i8\l  %261 = load ptr, ptr %21, align 8\l  %262 = getelementptr inbounds i8, ptr %261, i32 1\l  store ptr %262, ptr %21, align 8\l  store i8 %260, ptr %261, align 1\l  br label %263\l}"];
	Node0x600002634280 -> Node0x6000026342d0[tooltip="211 -> 263\nProbability 100.00%" ];
	Node0x6000026342d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{263:\l|  %264 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 1\l  store i64 0, ptr %264, align 8\l  %265 = getelementptr inbounds [2 x i64], ptr %20, i64 0, i64 0\l  store i64 0, ptr %265, align 8\l  store i64 0, ptr %14, align 8\l  store i64 0, ptr %13, align 8\l  store i64 0, ptr %15, align 8\l  %266 = load i32, ptr %16, align 4\l  %267 = load ptr, ptr %12, align 8\l  store i32 %266, ptr %267, align 4\l  ret void\l}"];
}
