digraph "CFG for 'p_quo_digit' function" {
	label="CFG for 'p_quo_digit' function";

	Node0x6000015b54a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca ptr, align 8\l  %3 = alloca i16, align 2\l  %4 = alloca i16, align 2\l  %5 = alloca i16, align 2\l  %6 = alloca i16, align 2\l  %7 = alloca i16, align 2\l  %8 = alloca i16, align 2\l  %9 = alloca i16, align 2\l  %10 = alloca i16, align 2\l  %11 = alloca i16, align 2\l  %12 = alloca i16, align 2\l  %13 = alloca i16, align 2\l  %14 = alloca i16, align 2\l  %15 = alloca i16, align 2\l  %16 = alloca i16, align 2\l  %17 = alloca i16, align 2\l  %18 = alloca i16, align 2\l  %19 = alloca i16, align 2\l  %20 = alloca i16, align 2\l  %21 = alloca i16, align 2\l  %22 = alloca i16, align 2\l  %23 = alloca i16, align 2\l  %24 = alloca i16, align 2\l  %25 = alloca i16, align 2\l  %26 = alloca i16, align 2\l  %27 = alloca i16, align 2\l  %28 = alloca i16, align 2\l  %29 = alloca i16, align 2\l  %30 = alloca i16, align 2\l  %31 = alloca i16, align 2\l  %32 = alloca i16, align 2\l  %33 = alloca i16, align 2\l  %34 = alloca i16, align 2\l  %35 = alloca i16, align 2\l  %36 = alloca i16, align 2\l  %37 = alloca i16, align 2\l  %38 = alloca i16, align 2\l  %39 = alloca i16, align 2\l  %40 = alloca i16, align 2\l  %41 = alloca i16, align 2\l  %42 = alloca i16, align 2\l  %43 = alloca i16, align 2\l  %44 = alloca i16, align 2\l  %45 = alloca i16, align 2\l  %46 = alloca i16, align 2\l  %47 = alloca i16, align 2\l  %48 = alloca i16, align 2\l  %49 = alloca i16, align 2\l  %50 = alloca i16, align 2\l  %51 = alloca i16, align 2\l  %52 = alloca i16, align 2\l  %53 = alloca i16, align 2\l  %54 = alloca i16, align 2\l  %55 = alloca i16, align 2\l  %56 = alloca i16, align 2\l  %57 = alloca i16, align 2\l  %58 = alloca i16, align 2\l  %59 = alloca i16, align 2\l  %60 = alloca i16, align 2\l  %61 = alloca i16, align 2\l  %62 = alloca i16, align 2\l  %63 = alloca i16, align 2\l  %64 = alloca i16, align 2\l  %65 = alloca i16, align 2\l  %66 = alloca i16, align 2\l  %67 = alloca i16, align 2\l  %68 = alloca i16, align 2\l  %69 = alloca i16, align 2\l  %70 = alloca i16, align 2\l  %71 = alloca i16, align 2\l  %72 = alloca i16, align 2\l  %73 = alloca i16, align 2\l  %74 = alloca i16, align 2\l  %75 = alloca i16, align 2\l  store ptr %0, ptr %2, align 8\l  %76 = load ptr, ptr %2, align 8\l  %77 = getelementptr inbounds i16, ptr %76, i64 -2\l  %78 = load i16, ptr %77, align 2\l  %79 = zext i16 %78 to i64\l  %80 = xor i64 %79, 65535\l  %81 = trunc i64 %80 to i16\l  store i16 %81, ptr %16, align 2\l  %82 = load i16, ptr @reciph, align 2\l  store i16 %82, ptr %17, align 2\l  %83 = load i16, ptr %16, align 2\l  %84 = zext i16 %83 to i64\l  %85 = and i64 %84, 255\l  %86 = trunc i64 %85 to i16\l  store i16 %86, ptr %18, align 2\l  %87 = load i16, ptr %16, align 2\l  %88 = zext i16 %87 to i32\l  %89 = ashr i32 %88, 8\l  %90 = trunc i32 %89 to i16\l  store i16 %90, ptr %19, align 2\l  %91 = load i16, ptr %17, align 2\l  %92 = zext i16 %91 to i64\l  %93 = and i64 %92, 255\l  %94 = trunc i64 %93 to i16\l  store i16 %94, ptr %20, align 2\l  %95 = load i16, ptr %17, align 2\l  %96 = zext i16 %95 to i32\l  %97 = ashr i32 %96, 8\l  %98 = trunc i32 %97 to i16\l  store i16 %98, ptr %21, align 2\l  %99 = load i16, ptr %18, align 2\l  %100 = zext i16 %99 to i32\l  %101 = load i16, ptr %20, align 2\l  %102 = zext i16 %101 to i32\l  %103 = mul nsw i32 %100, %102\l  %104 = trunc i32 %103 to i16\l  store i16 %104, ptr %22, align 2\l  %105 = load i16, ptr %19, align 2\l  %106 = zext i16 %105 to i32\l  %107 = load i16, ptr %20, align 2\l  %108 = zext i16 %107 to i32\l  %109 = mul nsw i32 %106, %108\l  %110 = trunc i32 %109 to i16\l  store i16 %110, ptr %23, align 2\l  %111 = load i16, ptr %18, align 2\l  %112 = zext i16 %111 to i32\l  %113 = load i16, ptr %21, align 2\l  %114 = zext i16 %113 to i32\l  %115 = mul nsw i32 %112, %114\l  %116 = trunc i32 %115 to i16\l  store i16 %116, ptr %24, align 2\l  %117 = load i16, ptr %19, align 2\l  %118 = zext i16 %117 to i32\l  %119 = load i16, ptr %21, align 2\l  %120 = zext i16 %119 to i32\l  %121 = mul nsw i32 %118, %120\l  %122 = trunc i32 %121 to i16\l  store i16 %122, ptr %25, align 2\l  %123 = load i16, ptr %23, align 2\l  %124 = zext i16 %123 to i32\l  %125 = load i16, ptr %24, align 2\l  %126 = zext i16 %125 to i32\l  %127 = add nsw i32 %124, %126\l  %128 = trunc i32 %127 to i16\l  store i16 %128, ptr %26, align 2\l  %129 = load i16, ptr %26, align 2\l  %130 = zext i16 %129 to i32\l  %131 = load i16, ptr %23, align 2\l  %132 = zext i16 %131 to i32\l  %133 = icmp slt i32 %130, %132\l  %134 = zext i1 %133 to i32\l  %135 = trunc i32 %134 to i16\l  %136 = zext i16 %135 to i32\l  %137 = shl i32 %136, 8\l  %138 = load i16, ptr %25, align 2\l  %139 = zext i16 %138 to i32\l  %140 = add nsw i32 %139, %137\l  %141 = trunc i32 %140 to i16\l  store i16 %141, ptr %25, align 2\l  %142 = load i16, ptr %22, align 2\l  %143 = zext i16 %142 to i32\l  %144 = load i16, ptr %26, align 2\l  %145 = zext i16 %144 to i32\l  %146 = shl i32 %145, 8\l  %147 = add nsw i32 %143, %146\l  %148 = trunc i32 %147 to i16\l  store i16 %148, ptr %27, align 2\l  %149 = load i16, ptr %27, align 2\l  %150 = zext i16 %149 to i32\l  %151 = load i16, ptr %22, align 2\l  %152 = zext i16 %151 to i32\l  %153 = icmp slt i32 %150, %152\l  %154 = zext i1 %153 to i32\l  %155 = load i16, ptr %26, align 2\l  %156 = zext i16 %155 to i32\l  %157 = ashr i32 %156, 8\l  %158 = add nsw i32 %154, %157\l  %159 = load i16, ptr %25, align 2\l  %160 = zext i16 %159 to i32\l  %161 = add nsw i32 %160, %158\l  %162 = trunc i32 %161 to i16\l  store i16 %162, ptr %25, align 2\l  %163 = load i16, ptr %27, align 2\l  store i16 %163, ptr %7, align 2\l  %164 = load i16, ptr %25, align 2\l  store i16 %164, ptr %8, align 2\l  %165 = load i16, ptr @reciph, align 2\l  %166 = zext i16 %165 to i32\l  %167 = load i16, ptr %7, align 2\l  %168 = zext i16 %167 to i32\l  %169 = add nsw i32 %168, %166\l  %170 = trunc i32 %169 to i16\l  store i16 %170, ptr %7, align 2\l  %171 = load i16, ptr %7, align 2\l  %172 = zext i16 %171 to i32\l  %173 = load i16, ptr @reciph, align 2\l  %174 = zext i16 %173 to i32\l  %175 = icmp slt i32 %172, %174\l  %176 = zext i1 %175 to i32\l  %177 = load i16, ptr %8, align 2\l  %178 = zext i16 %177 to i32\l  %179 = add nsw i32 %178, %176\l  %180 = trunc i32 %179 to i16\l  store i16 %180, ptr %8, align 2\l  %181 = load ptr, ptr %2, align 8\l  %182 = getelementptr inbounds i16, ptr %181, i64 -1\l  %183 = load i16, ptr %182, align 2\l  %184 = zext i16 %183 to i64\l  %185 = xor i64 %184, 65535\l  %186 = trunc i64 %185 to i16\l  store i16 %186, ptr %28, align 2\l  %187 = load i16, ptr @recipl, align 2\l  store i16 %187, ptr %29, align 2\l  %188 = load i16, ptr %28, align 2\l  %189 = zext i16 %188 to i64\l  %190 = and i64 %189, 255\l  %191 = trunc i64 %190 to i16\l  store i16 %191, ptr %30, align 2\l  %192 = load i16, ptr %28, align 2\l  %193 = zext i16 %192 to i32\l  %194 = ashr i32 %193, 8\l  %195 = trunc i32 %194 to i16\l  store i16 %195, ptr %31, align 2\l  %196 = load i16, ptr %29, align 2\l  %197 = zext i16 %196 to i64\l  %198 = and i64 %197, 255\l  %199 = trunc i64 %198 to i16\l  store i16 %199, ptr %32, align 2\l  %200 = load i16, ptr %29, align 2\l  %201 = zext i16 %200 to i32\l  %202 = ashr i32 %201, 8\l  %203 = trunc i32 %202 to i16\l  store i16 %203, ptr %33, align 2\l  %204 = load i16, ptr %30, align 2\l  %205 = zext i16 %204 to i32\l  %206 = load i16, ptr %32, align 2\l  %207 = zext i16 %206 to i32\l  %208 = mul nsw i32 %205, %207\l  %209 = trunc i32 %208 to i16\l  store i16 %209, ptr %34, align 2\l  %210 = load i16, ptr %31, align 2\l  %211 = zext i16 %210 to i32\l  %212 = load i16, ptr %32, align 2\l  %213 = zext i16 %212 to i32\l  %214 = mul nsw i32 %211, %213\l  %215 = trunc i32 %214 to i16\l  store i16 %215, ptr %35, align 2\l  %216 = load i16, ptr %30, align 2\l  %217 = zext i16 %216 to i32\l  %218 = load i16, ptr %33, align 2\l  %219 = zext i16 %218 to i32\l  %220 = mul nsw i32 %217, %219\l  %221 = trunc i32 %220 to i16\l  store i16 %221, ptr %36, align 2\l  %222 = load i16, ptr %31, align 2\l  %223 = zext i16 %222 to i32\l  %224 = load i16, ptr %33, align 2\l  %225 = zext i16 %224 to i32\l  %226 = mul nsw i32 %223, %225\l  %227 = trunc i32 %226 to i16\l  store i16 %227, ptr %37, align 2\l  %228 = load i16, ptr %35, align 2\l  %229 = zext i16 %228 to i32\l  %230 = load i16, ptr %36, align 2\l  %231 = zext i16 %230 to i32\l  %232 = add nsw i32 %229, %231\l  %233 = trunc i32 %232 to i16\l  store i16 %233, ptr %38, align 2\l  %234 = load i16, ptr %38, align 2\l  %235 = zext i16 %234 to i32\l  %236 = load i16, ptr %35, align 2\l  %237 = zext i16 %236 to i32\l  %238 = icmp slt i32 %235, %237\l  %239 = zext i1 %238 to i32\l  %240 = trunc i32 %239 to i16\l  %241 = zext i16 %240 to i32\l  %242 = shl i32 %241, 8\l  %243 = load i16, ptr %37, align 2\l  %244 = zext i16 %243 to i32\l  %245 = add nsw i32 %244, %242\l  %246 = trunc i32 %245 to i16\l  store i16 %246, ptr %37, align 2\l  %247 = load i16, ptr %34, align 2\l  %248 = zext i16 %247 to i32\l  %249 = load i16, ptr %38, align 2\l  %250 = zext i16 %249 to i32\l  %251 = shl i32 %250, 8\l  %252 = add nsw i32 %248, %251\l  %253 = trunc i32 %252 to i16\l  store i16 %253, ptr %39, align 2\l  %254 = load i16, ptr %39, align 2\l  %255 = zext i16 %254 to i32\l  %256 = load i16, ptr %34, align 2\l  %257 = zext i16 %256 to i32\l  %258 = icmp slt i32 %255, %257\l  %259 = zext i1 %258 to i32\l  %260 = load i16, ptr %38, align 2\l  %261 = zext i16 %260 to i32\l  %262 = ashr i32 %261, 8\l  %263 = add nsw i32 %259, %262\l  %264 = load i16, ptr %37, align 2\l  %265 = zext i16 %264 to i32\l  %266 = add nsw i32 %265, %263\l  %267 = trunc i32 %266 to i16\l  store i16 %267, ptr %37, align 2\l  %268 = load i16, ptr %39, align 2\l  store i16 %268, ptr %9, align 2\l  %269 = load i16, ptr %37, align 2\l  store i16 %269, ptr %10, align 2\l  %270 = load i16, ptr %10, align 2\l  %271 = zext i16 %270 to i32\l  %272 = add nsw i32 %271, 1\l  %273 = trunc i32 %272 to i16\l  store i16 %273, ptr %10, align 2\l  %274 = load i16, ptr %7, align 2\l  %275 = zext i16 %274 to i32\l  %276 = ashr i32 %275, 1\l  %277 = load i16, ptr %8, align 2\l  %278 = zext i16 %277 to i32\l  %279 = shl i32 %278, 15\l  %280 = add nsw i32 %276, %279\l  %281 = trunc i32 %280 to i16\l  store i16 %281, ptr %7, align 2\l  %282 = load i16, ptr %8, align 2\l  %283 = zext i16 %282 to i32\l  %284 = ashr i32 %283, 1\l  %285 = trunc i32 %284 to i16\l  store i16 %285, ptr %8, align 2\l  %286 = load i16, ptr %9, align 2\l  %287 = zext i16 %286 to i32\l  %288 = ashr i32 %287, 1\l  %289 = load i16, ptr %10, align 2\l  %290 = zext i16 %289 to i32\l  %291 = shl i32 %290, 15\l  %292 = add nsw i32 %288, %291\l  %293 = trunc i32 %292 to i16\l  store i16 %293, ptr %9, align 2\l  %294 = load i16, ptr %10, align 2\l  %295 = zext i16 %294 to i32\l  %296 = ashr i32 %295, 1\l  %297 = trunc i32 %296 to i16\l  store i16 %297, ptr %10, align 2\l  %298 = load i16, ptr %7, align 2\l  %299 = zext i16 %298 to i32\l  %300 = load i16, ptr %9, align 2\l  %301 = zext i16 %300 to i32\l  %302 = add nsw i32 %299, %301\l  %303 = trunc i32 %302 to i16\l  store i16 %303, ptr %5, align 2\l  %304 = load i16, ptr %8, align 2\l  %305 = zext i16 %304 to i32\l  %306 = load i16, ptr %10, align 2\l  %307 = zext i16 %306 to i32\l  %308 = add nsw i32 %305, %307\l  %309 = load i16, ptr %5, align 2\l  %310 = zext i16 %309 to i32\l  %311 = load i16, ptr %7, align 2\l  %312 = zext i16 %311 to i32\l  %313 = icmp slt i32 %310, %312\l  %314 = zext i1 %313 to i32\l  %315 = add nsw i32 %308, %314\l  %316 = trunc i32 %315 to i16\l  store i16 %316, ptr %6, align 2\l  %317 = load i16, ptr %5, align 2\l  %318 = add i16 %317, 1\l  store i16 %318, ptr %5, align 2\l  %319 = load i16, ptr %5, align 2\l  %320 = zext i16 %319 to i32\l  %321 = icmp slt i32 %320, 1\l  %322 = zext i1 %321 to i32\l  %323 = load i16, ptr %6, align 2\l  %324 = zext i16 %323 to i32\l  %325 = add nsw i32 %324, %322\l  %326 = trunc i32 %325 to i16\l  store i16 %326, ptr %6, align 2\l  %327 = load ptr, ptr %2, align 8\l  %328 = getelementptr inbounds i16, ptr %327, i64 -1\l  %329 = load i16, ptr %328, align 2\l  %330 = zext i16 %329 to i64\l  %331 = xor i64 %330, 65535\l  %332 = trunc i64 %331 to i16\l  store i16 %332, ptr %40, align 2\l  %333 = load i16, ptr @reciph, align 2\l  store i16 %333, ptr %41, align 2\l  %334 = load i16, ptr %40, align 2\l  %335 = zext i16 %334 to i64\l  %336 = and i64 %335, 255\l  %337 = trunc i64 %336 to i16\l  store i16 %337, ptr %42, align 2\l  %338 = load i16, ptr %40, align 2\l  %339 = zext i16 %338 to i32\l  %340 = ashr i32 %339, 8\l  %341 = trunc i32 %340 to i16\l  store i16 %341, ptr %43, align 2\l  %342 = load i16, ptr %41, align 2\l  %343 = zext i16 %342 to i64\l  %344 = and i64 %343, 255\l  %345 = trunc i64 %344 to i16\l  store i16 %345, ptr %44, align 2\l  %346 = load i16, ptr %41, align 2\l  %347 = zext i16 %346 to i32\l  %348 = ashr i32 %347, 8\l  %349 = trunc i32 %348 to i16\l  store i16 %349, ptr %45, align 2\l  %350 = load i16, ptr %42, align 2\l  %351 = zext i16 %350 to i32\l  %352 = load i16, ptr %44, align 2\l  %353 = zext i16 %352 to i32\l  %354 = mul nsw i32 %351, %353\l  %355 = trunc i32 %354 to i16\l  store i16 %355, ptr %46, align 2\l  %356 = load i16, ptr %43, align 2\l  %357 = zext i16 %356 to i32\l  %358 = load i16, ptr %44, align 2\l  %359 = zext i16 %358 to i32\l  %360 = mul nsw i32 %357, %359\l  %361 = trunc i32 %360 to i16\l  store i16 %361, ptr %47, align 2\l  %362 = load i16, ptr %42, align 2\l  %363 = zext i16 %362 to i32\l  %364 = load i16, ptr %45, align 2\l  %365 = zext i16 %364 to i32\l  %366 = mul nsw i32 %363, %365\l  %367 = trunc i32 %366 to i16\l  store i16 %367, ptr %48, align 2\l  %368 = load i16, ptr %43, align 2\l  %369 = zext i16 %368 to i32\l  %370 = load i16, ptr %45, align 2\l  %371 = zext i16 %370 to i32\l  %372 = mul nsw i32 %369, %371\l  %373 = trunc i32 %372 to i16\l  store i16 %373, ptr %49, align 2\l  %374 = load i16, ptr %47, align 2\l  %375 = zext i16 %374 to i32\l  %376 = load i16, ptr %48, align 2\l  %377 = zext i16 %376 to i32\l  %378 = add nsw i32 %375, %377\l  %379 = trunc i32 %378 to i16\l  store i16 %379, ptr %50, align 2\l  %380 = load i16, ptr %50, align 2\l  %381 = zext i16 %380 to i32\l  %382 = load i16, ptr %47, align 2\l  %383 = zext i16 %382 to i32\l  %384 = icmp slt i32 %381, %383\l  %385 = zext i1 %384 to i32\l  %386 = trunc i32 %385 to i16\l  %387 = zext i16 %386 to i32\l  %388 = shl i32 %387, 8\l  %389 = load i16, ptr %49, align 2\l  %390 = zext i16 %389 to i32\l  %391 = add nsw i32 %390, %388\l  %392 = trunc i32 %391 to i16\l  store i16 %392, ptr %49, align 2\l  %393 = load i16, ptr %46, align 2\l  %394 = zext i16 %393 to i32\l  %395 = load i16, ptr %50, align 2\l  %396 = zext i16 %395 to i32\l  %397 = shl i32 %396, 8\l  %398 = add nsw i32 %394, %397\l  %399 = trunc i32 %398 to i16\l  store i16 %399, ptr %51, align 2\l  %400 = load i16, ptr %51, align 2\l  %401 = zext i16 %400 to i32\l  %402 = load i16, ptr %46, align 2\l  %403 = zext i16 %402 to i32\l  %404 = icmp slt i32 %401, %403\l  %405 = zext i1 %404 to i32\l  %406 = load i16, ptr %50, align 2\l  %407 = zext i16 %406 to i32\l  %408 = ashr i32 %407, 8\l  %409 = add nsw i32 %405, %408\l  %410 = load i16, ptr %49, align 2\l  %411 = zext i16 %410 to i32\l  %412 = add nsw i32 %411, %409\l  %413 = trunc i32 %412 to i16\l  store i16 %413, ptr %49, align 2\l  %414 = load i16, ptr %51, align 2\l  store i16 %414, ptr %12, align 2\l  %415 = load i16, ptr %49, align 2\l  store i16 %415, ptr %11, align 2\l  %416 = load ptr, ptr %2, align 8\l  %417 = getelementptr inbounds i16, ptr %416, i64 0\l  %418 = load i16, ptr %417, align 2\l  %419 = zext i16 %418 to i64\l  %420 = xor i64 %419, 65535\l  %421 = trunc i64 %420 to i16\l  store i16 %421, ptr %52, align 2\l  %422 = load i16, ptr @recipl, align 2\l  store i16 %422, ptr %53, align 2\l  %423 = load i16, ptr %52, align 2\l  %424 = zext i16 %423 to i64\l  %425 = and i64 %424, 255\l  %426 = trunc i64 %425 to i16\l  store i16 %426, ptr %54, align 2\l  %427 = load i16, ptr %52, align 2\l  %428 = zext i16 %427 to i32\l  %429 = ashr i32 %428, 8\l  %430 = trunc i32 %429 to i16\l  store i16 %430, ptr %55, align 2\l  %431 = load i16, ptr %53, align 2\l  %432 = zext i16 %431 to i64\l  %433 = and i64 %432, 255\l  %434 = trunc i64 %433 to i16\l  store i16 %434, ptr %56, align 2\l  %435 = load i16, ptr %53, align 2\l  %436 = zext i16 %435 to i32\l  %437 = ashr i32 %436, 8\l  %438 = trunc i32 %437 to i16\l  store i16 %438, ptr %57, align 2\l  %439 = load i16, ptr %54, align 2\l  %440 = zext i16 %439 to i32\l  %441 = load i16, ptr %56, align 2\l  %442 = zext i16 %441 to i32\l  %443 = mul nsw i32 %440, %442\l  %444 = trunc i32 %443 to i16\l  store i16 %444, ptr %58, align 2\l  %445 = load i16, ptr %55, align 2\l  %446 = zext i16 %445 to i32\l  %447 = load i16, ptr %56, align 2\l  %448 = zext i16 %447 to i32\l  %449 = mul nsw i32 %446, %448\l  %450 = trunc i32 %449 to i16\l  store i16 %450, ptr %59, align 2\l  %451 = load i16, ptr %54, align 2\l  %452 = zext i16 %451 to i32\l  %453 = load i16, ptr %57, align 2\l  %454 = zext i16 %453 to i32\l  %455 = mul nsw i32 %452, %454\l  %456 = trunc i32 %455 to i16\l  store i16 %456, ptr %60, align 2\l  %457 = load i16, ptr %55, align 2\l  %458 = zext i16 %457 to i32\l  %459 = load i16, ptr %57, align 2\l  %460 = zext i16 %459 to i32\l  %461 = mul nsw i32 %458, %460\l  %462 = trunc i32 %461 to i16\l  store i16 %462, ptr %61, align 2\l  %463 = load i16, ptr %59, align 2\l  %464 = zext i16 %463 to i32\l  %465 = load i16, ptr %60, align 2\l  %466 = zext i16 %465 to i32\l  %467 = add nsw i32 %464, %466\l  %468 = trunc i32 %467 to i16\l  store i16 %468, ptr %62, align 2\l  %469 = load i16, ptr %62, align 2\l  %470 = zext i16 %469 to i32\l  %471 = load i16, ptr %59, align 2\l  %472 = zext i16 %471 to i32\l  %473 = icmp slt i32 %470, %472\l  %474 = zext i1 %473 to i32\l  %475 = trunc i32 %474 to i16\l  %476 = zext i16 %475 to i32\l  %477 = shl i32 %476, 8\l  %478 = load i16, ptr %61, align 2\l  %479 = zext i16 %478 to i32\l  %480 = add nsw i32 %479, %477\l  %481 = trunc i32 %480 to i16\l  store i16 %481, ptr %61, align 2\l  %482 = load i16, ptr %58, align 2\l  %483 = zext i16 %482 to i32\l  %484 = load i16, ptr %62, align 2\l  %485 = zext i16 %484 to i32\l  %486 = shl i32 %485, 8\l  %487 = add nsw i32 %483, %486\l  %488 = trunc i32 %487 to i16\l  store i16 %488, ptr %63, align 2\l  %489 = load i16, ptr %63, align 2\l  %490 = zext i16 %489 to i32\l  %491 = load i16, ptr %58, align 2\l  %492 = zext i16 %491 to i32\l  %493 = icmp slt i32 %490, %492\l  %494 = zext i1 %493 to i32\l  %495 = load i16, ptr %62, align 2\l  %496 = zext i16 %495 to i32\l  %497 = ashr i32 %496, 8\l  %498 = add nsw i32 %494, %497\l  %499 = load i16, ptr %61, align 2\l  %500 = zext i16 %499 to i32\l  %501 = add nsw i32 %500, %498\l  %502 = trunc i32 %501 to i16\l  store i16 %502, ptr %61, align 2\l  %503 = load i16, ptr %63, align 2\l  store i16 %503, ptr %14, align 2\l  %504 = load i16, ptr %61, align 2\l  store i16 %504, ptr %13, align 2\l  %505 = load i16, ptr %12, align 2\l  %506 = zext i16 %505 to i32\l  %507 = ashr i32 %506, 1\l  %508 = load i16, ptr %11, align 2\l  %509 = zext i16 %508 to i32\l  %510 = shl i32 %509, 15\l  %511 = add nsw i32 %507, %510\l  %512 = trunc i32 %511 to i16\l  store i16 %512, ptr %12, align 2\l  %513 = load i16, ptr %11, align 2\l  %514 = zext i16 %513 to i32\l  %515 = ashr i32 %514, 1\l  %516 = trunc i32 %515 to i16\l  store i16 %516, ptr %11, align 2\l  %517 = load i16, ptr %14, align 2\l  %518 = zext i16 %517 to i32\l  %519 = ashr i32 %518, 1\l  %520 = load i16, ptr %13, align 2\l  %521 = zext i16 %520 to i32\l  %522 = shl i32 %521, 15\l  %523 = add nsw i32 %519, %522\l  %524 = trunc i32 %523 to i16\l  store i16 %524, ptr %14, align 2\l  %525 = load i16, ptr %13, align 2\l  %526 = zext i16 %525 to i32\l  %527 = ashr i32 %526, 1\l  %528 = trunc i32 %527 to i16\l  store i16 %528, ptr %13, align 2\l  %529 = load i16, ptr %6, align 2\l  %530 = zext i16 %529 to i32\l  %531 = add nsw i32 %530, 1\l  %532 = trunc i32 %531 to i16\l  store i16 %532, ptr %3, align 2\l  %533 = load i16, ptr %3, align 2\l  %534 = zext i16 %533 to i32\l  %535 = icmp slt i32 %534, 1\l  %536 = zext i1 %535 to i32\l  %537 = trunc i32 %536 to i16\l  store i16 %537, ptr %4, align 2\l  %538 = load i16, ptr %12, align 2\l  %539 = zext i16 %538 to i32\l  %540 = load i16, ptr %3, align 2\l  %541 = zext i16 %540 to i32\l  %542 = add nsw i32 %541, %539\l  %543 = trunc i32 %542 to i16\l  store i16 %543, ptr %3, align 2\l  %544 = load i16, ptr %11, align 2\l  %545 = zext i16 %544 to i32\l  %546 = load i16, ptr %3, align 2\l  %547 = zext i16 %546 to i32\l  %548 = load i16, ptr %12, align 2\l  %549 = zext i16 %548 to i32\l  %550 = icmp slt i32 %547, %549\l  %551 = zext i1 %550 to i32\l  %552 = add nsw i32 %545, %551\l  %553 = load i16, ptr %4, align 2\l  %554 = zext i16 %553 to i32\l  %555 = add nsw i32 %554, %552\l  %556 = trunc i32 %555 to i16\l  store i16 %556, ptr %4, align 2\l  %557 = load i16, ptr %14, align 2\l  %558 = zext i16 %557 to i32\l  %559 = load i16, ptr %3, align 2\l  %560 = zext i16 %559 to i32\l  %561 = add nsw i32 %560, %558\l  %562 = trunc i32 %561 to i16\l  store i16 %562, ptr %3, align 2\l  %563 = load i16, ptr %13, align 2\l  %564 = zext i16 %563 to i32\l  %565 = load i16, ptr %3, align 2\l  %566 = zext i16 %565 to i32\l  %567 = load i16, ptr %14, align 2\l  %568 = zext i16 %567 to i32\l  %569 = icmp slt i32 %566, %568\l  %570 = zext i1 %569 to i32\l  %571 = add nsw i32 %564, %570\l  %572 = load i16, ptr %4, align 2\l  %573 = zext i16 %572 to i32\l  %574 = add nsw i32 %573, %571\l  %575 = trunc i32 %574 to i16\l  store i16 %575, ptr %4, align 2\l  %576 = load ptr, ptr %2, align 8\l  %577 = getelementptr inbounds i16, ptr %576, i64 0\l  %578 = load i16, ptr %577, align 2\l  %579 = zext i16 %578 to i64\l  %580 = xor i64 %579, 65535\l  %581 = trunc i64 %580 to i16\l  store i16 %581, ptr %64, align 2\l  %582 = load i16, ptr @reciph, align 2\l  store i16 %582, ptr %65, align 2\l  %583 = load i16, ptr %64, align 2\l  %584 = zext i16 %583 to i64\l  %585 = and i64 %584, 255\l  %586 = trunc i64 %585 to i16\l  store i16 %586, ptr %66, align 2\l  %587 = load i16, ptr %64, align 2\l  %588 = zext i16 %587 to i32\l  %589 = ashr i32 %588, 8\l  %590 = trunc i32 %589 to i16\l  store i16 %590, ptr %67, align 2\l  %591 = load i16, ptr %65, align 2\l  %592 = zext i16 %591 to i64\l  %593 = and i64 %592, 255\l  %594 = trunc i64 %593 to i16\l  store i16 %594, ptr %68, align 2\l  %595 = load i16, ptr %65, align 2\l  %596 = zext i16 %595 to i32\l  %597 = ashr i32 %596, 8\l  %598 = trunc i32 %597 to i16\l  store i16 %598, ptr %69, align 2\l  %599 = load i16, ptr %66, align 2\l  %600 = zext i16 %599 to i32\l  %601 = load i16, ptr %68, align 2\l  %602 = zext i16 %601 to i32\l  %603 = mul nsw i32 %600, %602\l  %604 = trunc i32 %603 to i16\l  store i16 %604, ptr %70, align 2\l  %605 = load i16, ptr %67, align 2\l  %606 = zext i16 %605 to i32\l  %607 = load i16, ptr %68, align 2\l  %608 = zext i16 %607 to i32\l  %609 = mul nsw i32 %606, %608\l  %610 = trunc i32 %609 to i16\l  store i16 %610, ptr %71, align 2\l  %611 = load i16, ptr %66, align 2\l  %612 = zext i16 %611 to i32\l  %613 = load i16, ptr %69, align 2\l  %614 = zext i16 %613 to i32\l  %615 = mul nsw i32 %612, %614\l  %616 = trunc i32 %615 to i16\l  store i16 %616, ptr %72, align 2\l  %617 = load i16, ptr %67, align 2\l  %618 = zext i16 %617 to i32\l  %619 = load i16, ptr %69, align 2\l  %620 = zext i16 %619 to i32\l  %621 = mul nsw i32 %618, %620\l  %622 = trunc i32 %621 to i16\l  store i16 %622, ptr %73, align 2\l  %623 = load i16, ptr %71, align 2\l  %624 = zext i16 %623 to i32\l  %625 = load i16, ptr %72, align 2\l  %626 = zext i16 %625 to i32\l  %627 = add nsw i32 %624, %626\l  %628 = trunc i32 %627 to i16\l  store i16 %628, ptr %74, align 2\l  %629 = load i16, ptr %74, align 2\l  %630 = zext i16 %629 to i32\l  %631 = load i16, ptr %71, align 2\l  %632 = zext i16 %631 to i32\l  %633 = icmp slt i32 %630, %632\l  %634 = zext i1 %633 to i32\l  %635 = trunc i32 %634 to i16\l  %636 = zext i16 %635 to i32\l  %637 = shl i32 %636, 8\l  %638 = load i16, ptr %73, align 2\l  %639 = zext i16 %638 to i32\l  %640 = add nsw i32 %639, %637\l  %641 = trunc i32 %640 to i16\l  store i16 %641, ptr %73, align 2\l  %642 = load i16, ptr %70, align 2\l  %643 = zext i16 %642 to i32\l  %644 = load i16, ptr %74, align 2\l  %645 = zext i16 %644 to i32\l  %646 = shl i32 %645, 8\l  %647 = add nsw i32 %643, %646\l  %648 = trunc i32 %647 to i16\l  store i16 %648, ptr %75, align 2\l  %649 = load i16, ptr %75, align 2\l  %650 = zext i16 %649 to i32\l  %651 = load i16, ptr %70, align 2\l  %652 = zext i16 %651 to i32\l  %653 = icmp slt i32 %650, %652\l  %654 = zext i1 %653 to i32\l  %655 = load i16, ptr %74, align 2\l  %656 = zext i16 %655 to i32\l  %657 = ashr i32 %656, 8\l  %658 = add nsw i32 %654, %657\l  %659 = load i16, ptr %73, align 2\l  %660 = zext i16 %659 to i32\l  %661 = add nsw i32 %660, %658\l  %662 = trunc i32 %661 to i16\l  store i16 %662, ptr %73, align 2\l  %663 = load i16, ptr %75, align 2\l  store i16 %663, ptr %7, align 2\l  %664 = load i16, ptr %73, align 2\l  store i16 %664, ptr %8, align 2\l  %665 = load i16, ptr %8, align 2\l  %666 = zext i16 %665 to i32\l  %667 = shl i32 %666, 1\l  %668 = load i16, ptr %7, align 2\l  %669 = zext i16 %668 to i32\l  %670 = ashr i32 %669, 15\l  %671 = add nsw i32 %667, %670\l  %672 = trunc i32 %671 to i16\l  store i16 %672, ptr %8, align 2\l  %673 = load i16, ptr %7, align 2\l  %674 = zext i16 %673 to i32\l  %675 = shl i32 %674, 1\l  %676 = trunc i32 %675 to i16\l  store i16 %676, ptr %7, align 2\l  %677 = load i16, ptr %3, align 2\l  %678 = zext i16 %677 to i32\l  %679 = ashr i32 %678, 14\l  %680 = load i16, ptr %4, align 2\l  %681 = zext i16 %680 to i32\l  %682 = shl i32 %681, 2\l  %683 = add nsw i32 %679, %682\l  %684 = trunc i32 %683 to i16\l  store i16 %684, ptr %3, align 2\l  %685 = load i16, ptr %4, align 2\l  %686 = zext i16 %685 to i32\l  %687 = ashr i32 %686, 14\l  %688 = trunc i32 %687 to i16\l  store i16 %688, ptr %4, align 2\l  %689 = load i16, ptr %7, align 2\l  %690 = zext i16 %689 to i32\l  %691 = load i16, ptr %3, align 2\l  %692 = zext i16 %691 to i32\l  %693 = add nsw i32 %692, %690\l  %694 = trunc i32 %693 to i16\l  store i16 %694, ptr %3, align 2\l  %695 = load i16, ptr %3, align 2\l  %696 = zext i16 %695 to i32\l  %697 = load i16, ptr %7, align 2\l  %698 = zext i16 %697 to i32\l  %699 = icmp slt i32 %696, %698\l  %700 = zext i1 %699 to i32\l  %701 = load i16, ptr %8, align 2\l  %702 = zext i16 %701 to i32\l  %703 = add nsw i32 %700, %702\l  %704 = load i16, ptr %4, align 2\l  %705 = zext i16 %704 to i32\l  %706 = add nsw i32 %705, %703\l  %707 = trunc i32 %706 to i16\l  store i16 %707, ptr %4, align 2\l  %708 = load i32, ptr @mshift, align 4\l  %709 = sext i32 %708 to i64\l  %710 = icmp ne i64 %709, 16\l  br i1 %710, label %711, label %730\l|{<s0>T|<s1>F}}"];
	Node0x6000015b54a0:s0 -> Node0x6000015b54f0[tooltip="1 -> 711\nProbability 50.00%" ];
	Node0x6000015b54a0:s1 -> Node0x6000015b5540[tooltip="1 -> 730\nProbability 50.00%" ];
	Node0x6000015b54f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{711:\l|  %712 = load i16, ptr %3, align 2\l  %713 = zext i16 %712 to i32\l  %714 = load i32, ptr @mshift, align 4\l  %715 = ashr i32 %713, %714\l  %716 = load i16, ptr %4, align 2\l  %717 = zext i16 %716 to i32\l  %718 = load i32, ptr @mshift, align 4\l  %719 = sext i32 %718 to i64\l  %720 = sub i64 16, %719\l  %721 = trunc i64 %720 to i32\l  %722 = shl i32 %717, %721\l  %723 = add nsw i32 %715, %722\l  %724 = trunc i32 %723 to i16\l  store i16 %724, ptr %3, align 2\l  %725 = load i32, ptr @mshift, align 4\l  %726 = load i16, ptr %4, align 2\l  %727 = zext i16 %726 to i32\l  %728 = ashr i32 %727, %725\l  %729 = trunc i32 %728 to i16\l  store i16 %729, ptr %4, align 2\l  br label %732\l}"];
	Node0x6000015b54f0 -> Node0x6000015b5590[tooltip="711 -> 732\nProbability 100.00%" ];
	Node0x6000015b5540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{730:\l|  %731 = load i16, ptr %4, align 2\l  store i16 %731, ptr %3, align 2\l  store i16 0, ptr %4, align 2\l  br label %732\l}"];
	Node0x6000015b5540 -> Node0x6000015b5590[tooltip="730 -> 732\nProbability 100.00%" ];
	Node0x6000015b5590 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{732:\l|  %733 = load i16, ptr %4, align 2\l  %734 = zext i16 %733 to i32\l  %735 = icmp ne i32 %734, 0\l  br i1 %735, label %736, label %737\l|{<s0>T|<s1>F}}"];
	Node0x6000015b5590:s0 -> Node0x6000015b55e0[tooltip="732 -> 736\nProbability 62.50%" ];
	Node0x6000015b5590:s1 -> Node0x6000015b5630[tooltip="732 -> 737\nProbability 37.50%" ];
	Node0x6000015b55e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{736:\l|  br label %740\l}"];
	Node0x6000015b55e0 -> Node0x6000015b5680[tooltip="736 -> 740\nProbability 100.00%" ];
	Node0x6000015b5630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{737:\l|  %738 = load i16, ptr %3, align 2\l  %739 = zext i16 %738 to i64\l  br label %740\l}"];
	Node0x6000015b5630 -> Node0x6000015b5680[tooltip="737 -> 740\nProbability 100.00%" ];
	Node0x6000015b5680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{740:\l|  %741 = phi i64 [ 65535, %736 ], [ %739, %737 ]\l  %742 = trunc i64 %741 to i16\l  store i16 %742, ptr %15, align 2\l  %743 = load i16, ptr %15, align 2\l  ret i16 %743\l}"];
}
