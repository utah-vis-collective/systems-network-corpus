digraph "CFG for 'gx_strip_copy_rop_unaligned' function" {
	label="CFG for 'gx_strip_copy_rop_unaligned' function";

	Node0x600001f04460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{15:\l|  %16 = alloca i32, align 4\l  %17 = alloca ptr, align 8\l  %18 = alloca ptr, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i64, align 8\l  %22 = alloca ptr, align 8\l  %23 = alloca ptr, align 8\l  %24 = alloca ptr, align 8\l  %25 = alloca i32, align 4\l  %26 = alloca i32, align 4\l  %27 = alloca i32, align 4\l  %28 = alloca i32, align 4\l  %29 = alloca i32, align 4\l  %30 = alloca i32, align 4\l  %31 = alloca i32, align 4\l  %32 = alloca ptr, align 8\l  %33 = alloca i32, align 4\l  %34 = alloca i32, align 4\l  %35 = alloca i32, align 4\l  %36 = alloca ptr, align 8\l  %37 = alloca i32, align 4\l  %38 = alloca i32, align 4\l  %39 = alloca i32, align 4\l  %40 = alloca i32, align 4\l  store ptr %0, ptr %17, align 8\l  store ptr %1, ptr %18, align 8\l  store i32 %2, ptr %19, align 4\l  store i32 %3, ptr %20, align 4\l  store i64 %4, ptr %21, align 8\l  store ptr %5, ptr %22, align 8\l  store ptr %6, ptr %23, align 8\l  store ptr %7, ptr %24, align 8\l  store i32 %8, ptr %25, align 4\l  store i32 %9, ptr %26, align 4\l  store i32 %10, ptr %27, align 4\l  store i32 %11, ptr %28, align 4\l  store i32 %12, ptr %29, align 4\l  store i32 %13, ptr %30, align 4\l  store i32 %14, ptr %31, align 4\l  %41 = load ptr, ptr %17, align 8\l  %42 = getelementptr inbounds %struct.gx_device_s, ptr %41, i32 0, i32 21\l  %43 = getelementptr inbounds %struct.gx_device_procs_s, ptr %42, i32 0, i32\l... 35\l  %44 = load ptr, ptr %43, align 8\l  store ptr %44, ptr %32, align 8\l  %45 = load ptr, ptr %22, align 8\l  %46 = icmp eq ptr %45, null\l  br i1 %46, label %47, label %52\l|{<s0>T|<s1>F}}"];
	Node0x600001f04460:s0 -> Node0x600001f044b0[tooltip="15 -> 47\nProbability 37.50%" ];
	Node0x600001f04460:s1 -> Node0x600001f04500[tooltip="15 -> 52\nProbability 62.50%" ];
	Node0x600001f044b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{47:\l|  %48 = load ptr, ptr %17, align 8\l  %49 = getelementptr inbounds %struct.gx_device_s, ptr %48, i32 0, i32 7\l  %50 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %49, i32 0,\l... i32 1\l  %51 = load i32, ptr %50, align 4\l  br label %53\l}"];
	Node0x600001f044b0 -> Node0x600001f04550[tooltip="47 -> 53\nProbability 100.00%" ];
	Node0x600001f04500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{52:\l|  br label %53\l}"];
	Node0x600001f04500 -> Node0x600001f04550[tooltip="52 -> 53\nProbability 100.00%" ];
	Node0x600001f04550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{53:\l|  %54 = phi i32 [ %51, %47 ], [ 1, %52 ]\l  store i32 %54, ptr %33, align 4\l  %55 = load i32, ptr %20, align 4\l  %56 = and i32 %55, 3\l  store i32 %56, ptr %34, align 4\l  %57 = load ptr, ptr %18, align 8\l  %58 = icmp ne ptr %57, null\l  br i1 %58, label %59, label %85\l|{<s0>T|<s1>F}}"];
	Node0x600001f04550:s0 -> Node0x600001f045a0[tooltip="53 -> 59\nProbability 62.50%" ];
	Node0x600001f04550:s1 -> Node0x600001f04690[tooltip="53 -> 85\nProbability 37.50%" ];
	Node0x600001f045a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{59:\l|  %60 = load ptr, ptr %18, align 8\l  %61 = ptrtoint ptr %60 to i64\l  %62 = sub i64 %61, 0\l  %63 = trunc i64 %62 to i32\l  %64 = and i32 %63, 3\l  store i32 %64, ptr %35, align 4\l  %65 = load i32, ptr %33, align 4\l  %66 = icmp eq i32 %65, 24\l  br i1 %66, label %67, label %73\l|{<s0>T|<s1>F}}"];
	Node0x600001f045a0:s0 -> Node0x600001f045f0[tooltip="59 -> 67\nProbability 50.00%" ];
	Node0x600001f045a0:s1 -> Node0x600001f04640[tooltip="59 -> 73\nProbability 50.00%" ];
	Node0x600001f045f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{67:\l|  %68 = load i32, ptr %35, align 4\l  %69 = urem i32 %68, 3\l  %70 = mul i32 %69, 8\l  %71 = load i32, ptr %35, align 4\l  %72 = add i32 %71, %70\l  store i32 %72, ptr %35, align 4\l  br label %73\l}"];
	Node0x600001f045f0 -> Node0x600001f04640[tooltip="67 -> 73\nProbability 100.00%" ];
	Node0x600001f04640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{73:\l|  %74 = load i32, ptr %35, align 4\l  %75 = load ptr, ptr %18, align 8\l  %76 = zext i32 %74 to i64\l  %77 = sub i64 0, %76\l  %78 = getelementptr inbounds i8, ptr %75, i64 %77\l  store ptr %78, ptr %18, align 8\l  %79 = load i32, ptr %35, align 4\l  %80 = shl i32 %79, 3\l  %81 = load i32, ptr %33, align 4\l  %82 = udiv i32 %80, %81\l  %83 = load i32, ptr %19, align 4\l  %84 = add i32 %83, %82\l  store i32 %84, ptr %19, align 4\l  br label %85\l}"];
	Node0x600001f04640 -> Node0x600001f04690[tooltip="73 -> 85\nProbability 100.00%" ];
	Node0x600001f04690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{85:\l|  %86 = load i32, ptr %34, align 4\l  %87 = icmp ne i32 %86, 0\l  br i1 %87, label %88, label %102\l|{<s0>T|<s1>F}}"];
	Node0x600001f04690:s0 -> Node0x600001f046e0[tooltip="85 -> 88\nProbability 62.50%" ];
	Node0x600001f04690:s1 -> Node0x600001f047d0[tooltip="85 -> 102\nProbability 37.50%" ];
	Node0x600001f046e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{88:\l|  %89 = load ptr, ptr %18, align 8\l  %90 = icmp eq ptr %89, null\l  br i1 %90, label %102, label %91\l|{<s0>T|<s1>F}}"];
	Node0x600001f046e0:s0 -> Node0x600001f047d0[tooltip="88 -> 102\nProbability 37.50%" ];
	Node0x600001f046e0:s1 -> Node0x600001f04730[tooltip="88 -> 91\nProbability 62.50%" ];
	Node0x600001f04730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{91:\l|  %92 = load ptr, ptr %22, align 8\l  %93 = icmp ne ptr %92, null\l  br i1 %93, label %94, label %120\l|{<s0>T|<s1>F}}"];
	Node0x600001f04730:s0 -> Node0x600001f04780[tooltip="91 -> 94\nProbability 62.50%" ];
	Node0x600001f04730:s1 -> Node0x600001f04820[tooltip="91 -> 120\nProbability 37.50%" ];
	Node0x600001f04780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{94:\l|  %95 = load ptr, ptr %22, align 8\l  %96 = getelementptr inbounds i64, ptr %95, i64 0\l  %97 = load i64, ptr %96, align 8\l  %98 = load ptr, ptr %22, align 8\l  %99 = getelementptr inbounds i64, ptr %98, i64 1\l  %100 = load i64, ptr %99, align 8\l  %101 = icmp eq i64 %97, %100\l  br i1 %101, label %102, label %120\l|{<s0>T|<s1>F}}"];
	Node0x600001f04780:s0 -> Node0x600001f047d0[tooltip="94 -> 102\nProbability 50.00%" ];
	Node0x600001f04780:s1 -> Node0x600001f04820[tooltip="94 -> 120\nProbability 50.00%" ];
	Node0x600001f047d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{102:\l|  %103 = load ptr, ptr %32, align 8\l  %104 = load ptr, ptr %17, align 8\l  %105 = load ptr, ptr %18, align 8\l  %106 = load i32, ptr %19, align 4\l  %107 = load i32, ptr %20, align 4\l  %108 = load i64, ptr %21, align 8\l  %109 = load ptr, ptr %22, align 8\l  %110 = load ptr, ptr %23, align 8\l  %111 = load ptr, ptr %24, align 8\l  %112 = load i32, ptr %25, align 4\l  %113 = load i32, ptr %26, align 4\l  %114 = load i32, ptr %27, align 4\l  %115 = load i32, ptr %28, align 4\l  %116 = load i32, ptr %29, align 4\l  %117 = load i32, ptr %30, align 4\l  %118 = load i32, ptr %31, align 4\l  %119 = call i32 %103(ptr noundef %104, ptr noundef %105, i32 noundef %106,\l... i32 noundef %107, i64 noundef %108, ptr noundef %109, ptr noundef %110, ptr\l... noundef %111, i32 noundef %112, i32 noundef %113, i32 noundef %114, i32\l... noundef %115, i32 noundef %116, i32 noundef %117, i32 noundef %118)\l  store i32 %119, ptr %16, align 4\l  br label %168\l}"];
	Node0x600001f047d0 -> Node0x600001f04a50[tooltip="102 -> 168\nProbability 100.00%" ];
	Node0x600001f04820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{120:\l|  %121 = load ptr, ptr %18, align 8\l  store ptr %121, ptr %36, align 8\l  %122 = load i32, ptr %19, align 4\l  store i32 %122, ptr %37, align 4\l  %123 = load i32, ptr %34, align 4\l  %124 = shl i32 %123, 3\l  %125 = load i32, ptr %33, align 4\l  %126 = sdiv i32 %124, %125\l  store i32 %126, ptr %38, align 4\l  store i32 0, ptr %39, align 4\l  store i32 0, ptr %40, align 4\l  br label %127\l}"];
	Node0x600001f04820 -> Node0x600001f04870[tooltip="120 -> 127\nProbability 100.00%" ];
	Node0x600001f04870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{127:\l|  %128 = load i32, ptr %40, align 4\l  %129 = load i32, ptr %28, align 4\l  %130 = icmp slt i32 %128, %129\l  br i1 %130, label %131, label %134\l|{<s0>T|<s1>F}}"];
	Node0x600001f04870:s0 -> Node0x600001f048c0[tooltip="127 -> 131\nProbability 50.00%" ];
	Node0x600001f04870:s1 -> Node0x600001f04910[tooltip="127 -> 134\nProbability 50.00%" ];
	Node0x600001f048c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{131:\l|  %132 = load i32, ptr %39, align 4\l  %133 = icmp sge i32 %132, 0\l  br label %134\l}"];
	Node0x600001f048c0 -> Node0x600001f04910[tooltip="131 -> 134\nProbability 100.00%" ];
	Node0x600001f04910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{134:\l|  %135 = phi i1 [ false, %127 ], [ %133, %131 ]\l  br i1 %135, label %136, label %166\l|{<s0>T|<s1>F}}"];
	Node0x600001f04910:s0 -> Node0x600001f04960[tooltip="134 -> 136\nProbability 96.88%" ];
	Node0x600001f04910:s1 -> Node0x600001f04a00[tooltip="134 -> 166\nProbability 3.12%" ];
	Node0x600001f04960 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{136:\l|  %137 = load ptr, ptr %32, align 8\l  %138 = load ptr, ptr %17, align 8\l  %139 = load ptr, ptr %36, align 8\l  %140 = load i32, ptr %37, align 4\l  %141 = load i32, ptr %20, align 4\l  %142 = load ptr, ptr %22, align 8\l  %143 = load ptr, ptr %23, align 8\l  %144 = load ptr, ptr %24, align 8\l  %145 = load i32, ptr %25, align 4\l  %146 = load i32, ptr %26, align 4\l  %147 = load i32, ptr %40, align 4\l  %148 = add nsw i32 %146, %147\l  %149 = load i32, ptr %27, align 4\l  %150 = load i32, ptr %29, align 4\l  %151 = load i32, ptr %30, align 4\l  %152 = load i32, ptr %31, align 4\l  %153 = call i32 %137(ptr noundef %138, ptr noundef %139, i32 noundef %140,\l... i32 noundef %141, i64 noundef 0, ptr noundef %142, ptr noundef %143, ptr\l... noundef %144, i32 noundef %145, i32 noundef %148, i32 noundef %149, i32\l... noundef 1, i32 noundef %150, i32 noundef %151, i32 noundef %152)\l  store i32 %153, ptr %39, align 4\l  br label %154\l}"];
	Node0x600001f04960 -> Node0x600001f049b0[tooltip="136 -> 154\nProbability 100.00%" ];
	Node0x600001f049b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{154:\l|  %155 = load i32, ptr %40, align 4\l  %156 = add nsw i32 %155, 1\l  store i32 %156, ptr %40, align 4\l  %157 = load i32, ptr %20, align 4\l  %158 = load i32, ptr %34, align 4\l  %159 = sub i32 %157, %158\l  %160 = load ptr, ptr %36, align 8\l  %161 = zext i32 %159 to i64\l  %162 = getelementptr inbounds i8, ptr %160, i64 %161\l  store ptr %162, ptr %36, align 8\l  %163 = load i32, ptr %38, align 4\l  %164 = load i32, ptr %37, align 4\l  %165 = add nsw i32 %164, %163\l  store i32 %165, ptr %37, align 4\l  br label %127\l}"];
	Node0x600001f049b0 -> Node0x600001f04870[tooltip="154 -> 127\nProbability 100.00%" ];
	Node0x600001f04a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{166:\l|  %167 = load i32, ptr %39, align 4\l  store i32 %167, ptr %16, align 4\l  br label %168\l}"];
	Node0x600001f04a00 -> Node0x600001f04a50[tooltip="166 -> 168\nProbability 100.00%" ];
	Node0x600001f04a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{168:\l|  %169 = load i32, ptr %16, align 4\l  ret i32 %169\l}"];
}
