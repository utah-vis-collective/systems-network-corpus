digraph "CFG for 'gx_device_adjust_resolution' function" {
	label="CFG for 'gx_device_adjust_resolution' function";

	Node0x600001eee940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{4:\l|  %5 = alloca ptr, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  %11 = alloca double, align 8\l  store ptr %0, ptr %5, align 8\l  store i32 %1, ptr %6, align 4\l  store i32 %2, ptr %7, align 4\l  store i32 %3, ptr %8, align 4\l  %12 = load i32, ptr %6, align 4\l  %13 = sitofp i32 %12 to double\l  %14 = load ptr, ptr %5, align 8\l  %15 = getelementptr inbounds %struct.gx_device_s, ptr %14, i32 0, i32 8\l  %16 = load i32, ptr %15, align 8\l  %17 = sitofp i32 %16 to double\l  %18 = fdiv double %13, %17\l  store double %18, ptr %9, align 8\l  %19 = load i32, ptr %7, align 4\l  %20 = sitofp i32 %19 to double\l  %21 = load ptr, ptr %5, align 8\l  %22 = getelementptr inbounds %struct.gx_device_s, ptr %21, i32 0, i32 9\l  %23 = load i32, ptr %22, align 4\l  %24 = sitofp i32 %23 to double\l  %25 = fdiv double %20, %24\l  store double %25, ptr %10, align 8\l  %26 = load i32, ptr %8, align 4\l  %27 = icmp ne i32 %26, 0\l  br i1 %27, label %28, label %38\l|{<s0>T|<s1>F}}"];
	Node0x600001eee940:s0 -> Node0x600001eee990[tooltip="4 -> 28\nProbability 62.50%" ];
	Node0x600001eee940:s1 -> Node0x600001eeead0[tooltip="4 -> 38\nProbability 37.50%" ];
	Node0x600001eee990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{28:\l|  %29 = load double, ptr %9, align 8\l  %30 = load double, ptr %10, align 8\l  %31 = fcmp olt double %29, %30\l  br i1 %31, label %32, label %34\l|{<s0>T|<s1>F}}"];
	Node0x600001eee990:s0 -> Node0x600001eee9e0[tooltip="28 -> 32\nProbability 50.00%" ];
	Node0x600001eee990:s1 -> Node0x600001eeea30[tooltip="28 -> 34\nProbability 50.00%" ];
	Node0x600001eee9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{32:\l|  %33 = load double, ptr %9, align 8\l  br label %36\l}"];
	Node0x600001eee9e0 -> Node0x600001eeea80[tooltip="32 -> 36\nProbability 100.00%" ];
	Node0x600001eeea30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{34:\l|  %35 = load double, ptr %10, align 8\l  br label %36\l}"];
	Node0x600001eeea30 -> Node0x600001eeea80[tooltip="34 -> 36\nProbability 100.00%" ];
	Node0x600001eeea80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{36:\l|  %37 = phi double [ %33, %32 ], [ %35, %34 ]\l  br label %48\l}"];
	Node0x600001eeea80 -> Node0x600001eeec10[tooltip="36 -> 48\nProbability 100.00%" ];
	Node0x600001eeead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{38:\l|  %39 = load double, ptr %9, align 8\l  %40 = load double, ptr %10, align 8\l  %41 = fcmp ogt double %39, %40\l  br i1 %41, label %42, label %44\l|{<s0>T|<s1>F}}"];
	Node0x600001eeead0:s0 -> Node0x600001eeeb20[tooltip="38 -> 42\nProbability 50.00%" ];
	Node0x600001eeead0:s1 -> Node0x600001eeeb70[tooltip="38 -> 44\nProbability 50.00%" ];
	Node0x600001eeeb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{42:\l|  %43 = load double, ptr %9, align 8\l  br label %46\l}"];
	Node0x600001eeeb20 -> Node0x600001eeebc0[tooltip="42 -> 46\nProbability 100.00%" ];
	Node0x600001eeeb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{44:\l|  %45 = load double, ptr %10, align 8\l  br label %46\l}"];
	Node0x600001eeeb70 -> Node0x600001eeebc0[tooltip="44 -> 46\nProbability 100.00%" ];
	Node0x600001eeebc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{46:\l|  %47 = phi double [ %43, %42 ], [ %45, %44 ]\l  br label %48\l}"];
	Node0x600001eeebc0 -> Node0x600001eeec10[tooltip="46 -> 48\nProbability 100.00%" ];
	Node0x600001eeec10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{48:\l|  %49 = phi double [ %37, %36 ], [ %47, %46 ]\l  store double %49, ptr %11, align 8\l  %50 = load double, ptr %11, align 8\l  %51 = load ptr, ptr %5, align 8\l  %52 = getelementptr inbounds %struct.gx_device_s, ptr %51, i32 0, i32 13\l  %53 = getelementptr inbounds [2 x float], ptr %52, i64 0, i64 0\l  %54 = load float, ptr %53, align 4\l  %55 = fpext float %54 to double\l  %56 = fmul double %55, %50\l  %57 = fptrunc double %56 to float\l  store float %57, ptr %53, align 4\l  %58 = load double, ptr %11, align 8\l  %59 = load ptr, ptr %5, align 8\l  %60 = getelementptr inbounds %struct.gx_device_s, ptr %59, i32 0, i32 13\l  %61 = getelementptr inbounds [2 x float], ptr %60, i64 0, i64 1\l  %62 = load float, ptr %61, align 4\l  %63 = fpext float %62 to double\l  %64 = fmul double %63, %58\l  %65 = fptrunc double %64 to float\l  store float %65, ptr %61, align 4\l  %66 = load ptr, ptr %5, align 8\l  %67 = load i32, ptr %6, align 4\l  %68 = load i32, ptr %7, align 4\l  call void @gx_device_set_width_height(ptr noundef %66, i32 noundef %67, i32\l... noundef %68)\l  ret i32 0\l}"];
}
