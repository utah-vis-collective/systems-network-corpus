digraph "CFG for 'stc_map_color_rgb' function" {
	label="CFG for 'stc_map_color_rgb' function";

	Node0x6000016b6710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i64, align 8\l  store ptr %0, ptr %4, align 8\l  store i64 %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %10 = load ptr, ptr %4, align 8\l  store ptr %10, ptr %7, align 8\l  %11 = load ptr, ptr %7, align 8\l  %12 = getelementptr inbounds %struct.stcolor_device_s, ptr %11, i32 0, i32 7\l  %13 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %12, i32 0,\l... i32 1\l  %14 = load i32, ptr %13, align 4\l  %15 = icmp eq i32 %14, 24\l  br i1 %15, label %16, label %17\l|{<s0>T|<s1>F}}"];
	Node0x6000016b6710:s0 -> Node0x6000016b6760[tooltip="3 -> 16\nProbability 50.00%" ];
	Node0x6000016b6710:s1 -> Node0x6000016b67b0[tooltip="3 -> 17\nProbability 50.00%" ];
	Node0x6000016b6760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{16:\l|  br label %22\l}"];
	Node0x6000016b6760 -> Node0x6000016b6800[tooltip="16 -> 22\nProbability 100.00%" ];
	Node0x6000016b67b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{17:\l|  %18 = load ptr, ptr %7, align 8\l  %19 = getelementptr inbounds %struct.stcolor_device_s, ptr %18, i32 0, i32 36\l  %20 = getelementptr inbounds %struct.stc_s, ptr %19, i32 0, i32 1\l  %21 = load i32, ptr %20, align 8\l  br label %22\l}"];
	Node0x6000016b67b0 -> Node0x6000016b6800[tooltip="17 -> 22\nProbability 100.00%" ];
	Node0x6000016b6800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{22:\l|  %23 = phi i32 [ 8, %16 ], [ %21, %17 ]\l  store i32 %23, ptr %8, align 4\l  %24 = load ptr, ptr %7, align 8\l  %25 = getelementptr inbounds %struct.stcolor_device_s, ptr %24, i32 0, i32 36\l  %26 = getelementptr inbounds %struct.stc_s, ptr %25, i32 0, i32 1\l  %27 = load i32, ptr %26, align 8\l  %28 = zext i32 %27 to i64\l  %29 = shl i64 1, %28\l  %30 = sub i64 %29, 1\l  store i64 %30, ptr %9, align 8\l  %31 = load ptr, ptr %7, align 8\l  %32 = load i64, ptr %5, align 8\l  %33 = load i32, ptr %8, align 4\l  %34 = shl i32 %33, 1\l  %35 = zext i32 %34 to i64\l  %36 = lshr i64 %32, %35\l  %37 = load i64, ptr %9, align 8\l  %38 = and i64 %36, %37\l  %39 = call zeroext i16 @stc_expand(ptr noundef %31, i32 noundef 0, i64\l... noundef %38)\l  %40 = load ptr, ptr %6, align 8\l  %41 = getelementptr inbounds i16, ptr %40, i64 0\l  store i16 %39, ptr %41, align 2\l  %42 = load ptr, ptr %7, align 8\l  %43 = load i64, ptr %5, align 8\l  %44 = load i32, ptr %8, align 4\l  %45 = zext i32 %44 to i64\l  %46 = lshr i64 %43, %45\l  %47 = load i64, ptr %9, align 8\l  %48 = and i64 %46, %47\l  %49 = call zeroext i16 @stc_expand(ptr noundef %42, i32 noundef 1, i64\l... noundef %48)\l  %50 = load ptr, ptr %6, align 8\l  %51 = getelementptr inbounds i16, ptr %50, i64 1\l  store i16 %49, ptr %51, align 2\l  %52 = load ptr, ptr %7, align 8\l  %53 = load i64, ptr %5, align 8\l  %54 = load i64, ptr %9, align 8\l  %55 = and i64 %53, %54\l  %56 = call zeroext i16 @stc_expand(ptr noundef %52, i32 noundef 2, i64\l... noundef %55)\l  %57 = load ptr, ptr %6, align 8\l  %58 = getelementptr inbounds i16, ptr %57, i64 2\l  store i16 %56, ptr %58, align 2\l  ret i32 0\l}"];
}
