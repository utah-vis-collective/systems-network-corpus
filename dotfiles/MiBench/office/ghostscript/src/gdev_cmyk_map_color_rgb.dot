digraph "CFG for 'gdev_cmyk_map_color_rgb' function" {
	label="CFG for 'gdev_cmyk_map_color_rgb' function";

	Node0x6000015030c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca i16, align 2\l  %8 = alloca i64, align 8\l  %9 = alloca i64, align 8\l  %10 = alloca i64, align 8\l  %11 = alloca i64, align 8\l  %12 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store i64 %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %13 = load ptr, ptr %4, align 8\l  %14 = getelementptr inbounds %struct.gx_device_s, ptr %13, i32 0, i32 7\l  %15 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %14, i32 0,\l... i32 1\l  %16 = load i32, ptr %15, align 4\l  switch i32 %16, label %54 [\l    i32 1, label %17\l    i32 8, label %28\l  ]\l|{<s0>def|<s1>1|<s2>8}}"];
	Node0x6000015030c0:s0 -> Node0x600001503840[tooltip="3 -> 54\nProbability 33.33%" ];
	Node0x6000015030c0:s1 -> Node0x600001503700[tooltip="3 -> 17\nProbability 33.33%" ];
	Node0x6000015030c0:s2 -> Node0x600001503750[tooltip="3 -> 28\nProbability 33.33%" ];
	Node0x600001503700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{17:\l|  %18 = load i64, ptr %5, align 8\l  %19 = sub i64 1, %18\l  %20 = mul i64 65535, %19\l  %21 = trunc i64 %20 to i16\l  %22 = load ptr, ptr %6, align 8\l  %23 = getelementptr inbounds i16, ptr %22, i64 2\l  store i16 %21, ptr %23, align 2\l  %24 = load ptr, ptr %6, align 8\l  %25 = getelementptr inbounds i16, ptr %24, i64 1\l  store i16 %21, ptr %25, align 2\l  %26 = load ptr, ptr %6, align 8\l  %27 = getelementptr inbounds i16, ptr %26, i64 0\l  store i16 %21, ptr %27, align 2\l  br label %148\l}"];
	Node0x600001503700 -> Node0x600001503890[tooltip="17 -> 148\nProbability 100.00%" ];
	Node0x600001503750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{28:\l|  %29 = load ptr, ptr %4, align 8\l  %30 = getelementptr inbounds %struct.gx_device_s, ptr %29, i32 0, i32 7\l  %31 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %30, i32 0,\l... i32 0\l  %32 = load i32, ptr %31, align 8\l  %33 = icmp eq i32 %32, 1\l  br i1 %33, label %34, label %53\l|{<s0>T|<s1>F}}"];
	Node0x600001503750:s0 -> Node0x6000015037a0[tooltip="28 -> 34\nProbability 50.00%" ];
	Node0x600001503750:s1 -> Node0x6000015037f0[tooltip="28 -> 53\nProbability 50.00%" ];
	Node0x6000015037a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{34:\l|  %35 = load i64, ptr %5, align 8\l  %36 = trunc i64 %35 to i16\l  %37 = zext i16 %36 to i32\l  %38 = xor i32 %37, 255\l  %39 = trunc i32 %38 to i16\l  store i16 %39, ptr %7, align 2\l  %40 = load i16, ptr %7, align 2\l  %41 = zext i16 %40 to i32\l  %42 = shl i32 %41, 8\l  %43 = load i16, ptr %7, align 2\l  %44 = zext i16 %43 to i32\l  %45 = add nsw i32 %42, %44\l  %46 = trunc i32 %45 to i16\l  %47 = load ptr, ptr %6, align 8\l  %48 = getelementptr inbounds i16, ptr %47, i64 2\l  store i16 %46, ptr %48, align 2\l  %49 = load ptr, ptr %6, align 8\l  %50 = getelementptr inbounds i16, ptr %49, i64 1\l  store i16 %46, ptr %50, align 2\l  %51 = load ptr, ptr %6, align 8\l  %52 = getelementptr inbounds i16, ptr %51, i64 0\l  store i16 %46, ptr %52, align 2\l  br label %148\l}"];
	Node0x6000015037a0 -> Node0x600001503890[tooltip="34 -> 148\nProbability 100.00%" ];
	Node0x6000015037f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{53:\l|  br label %54\l}"];
	Node0x6000015037f0 -> Node0x600001503840[tooltip="53 -> 54\nProbability 100.00%" ];
	Node0x600001503840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{54:\l|  %55 = load ptr, ptr %4, align 8\l  %56 = getelementptr inbounds %struct.gx_device_s, ptr %55, i32 0, i32 7\l  %57 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %56, i32 0,\l... i32 1\l  %58 = load i32, ptr %57, align 4\l  store i32 %58, ptr %12, align 4\l  %59 = load i64, ptr %5, align 8\l  %60 = load i32, ptr %12, align 4\l  %61 = ashr i32 %60, 2\l  %62 = mul nsw i32 3, %61\l  %63 = zext i32 %62 to i64\l  %64 = lshr i64 %59, %63\l  %65 = load i32, ptr %12, align 4\l  %66 = ashr i32 %65, 2\l  %67 = shl i32 1, %66\l  %68 = sub nsw i32 %67, 1\l  %69 = sext i32 %68 to i64\l  %70 = and i64 %64, %69\l  %71 = load i32, ptr %12, align 4\l  %72 = ashr i32 %71, 2\l  %73 = sext i32 %72 to i64\l  %74 = sub i64 16, %73\l  %75 = shl i64 %70, %74\l  store i64 %75, ptr %11, align 8\l  %76 = load i64, ptr %5, align 8\l  %77 = load i32, ptr %12, align 4\l  %78 = ashr i32 %77, 2\l  %79 = mul nsw i32 2, %78\l  %80 = zext i32 %79 to i64\l  %81 = lshr i64 %76, %80\l  %82 = load i32, ptr %12, align 4\l  %83 = ashr i32 %82, 2\l  %84 = shl i32 1, %83\l  %85 = sub nsw i32 %84, 1\l  %86 = sext i32 %85 to i64\l  %87 = and i64 %81, %86\l  %88 = load i32, ptr %12, align 4\l  %89 = ashr i32 %88, 2\l  %90 = sext i32 %89 to i64\l  %91 = sub i64 16, %90\l  %92 = shl i64 %87, %91\l  store i64 %92, ptr %8, align 8\l  %93 = load i64, ptr %5, align 8\l  %94 = load i32, ptr %12, align 4\l  %95 = ashr i32 %94, 2\l  %96 = zext i32 %95 to i64\l  %97 = lshr i64 %93, %96\l  %98 = load i32, ptr %12, align 4\l  %99 = ashr i32 %98, 2\l  %100 = shl i32 1, %99\l  %101 = sub nsw i32 %100, 1\l  %102 = sext i32 %101 to i64\l  %103 = and i64 %97, %102\l  %104 = load i32, ptr %12, align 4\l  %105 = ashr i32 %104, 2\l  %106 = sext i32 %105 to i64\l  %107 = sub i64 16, %106\l  %108 = shl i64 %103, %107\l  store i64 %108, ptr %9, align 8\l  %109 = load i64, ptr %5, align 8\l  %110 = load i32, ptr %12, align 4\l  %111 = ashr i32 %110, 2\l  %112 = shl i32 1, %111\l  %113 = sub nsw i32 %112, 1\l  %114 = sext i32 %113 to i64\l  %115 = and i64 %109, %114\l  %116 = load i32, ptr %12, align 4\l  %117 = ashr i32 %116, 2\l  %118 = sext i32 %117 to i64\l  %119 = sub i64 16, %118\l  %120 = shl i64 %115, %119\l  store i64 %120, ptr %10, align 8\l  %121 = load i64, ptr %8, align 8\l  %122 = sub i64 65535, %121\l  %123 = load i64, ptr %11, align 8\l  %124 = sub i64 65535, %123\l  %125 = mul i64 %122, %124\l  %126 = udiv i64 %125, 65535\l  %127 = trunc i64 %126 to i16\l  %128 = load ptr, ptr %6, align 8\l  %129 = getelementptr inbounds i16, ptr %128, i64 0\l  store i16 %127, ptr %129, align 2\l  %130 = load i64, ptr %9, align 8\l  %131 = sub i64 65535, %130\l  %132 = load i64, ptr %11, align 8\l  %133 = sub i64 65535, %132\l  %134 = mul i64 %131, %133\l  %135 = udiv i64 %134, 65535\l  %136 = trunc i64 %135 to i16\l  %137 = load ptr, ptr %6, align 8\l  %138 = getelementptr inbounds i16, ptr %137, i64 1\l  store i16 %136, ptr %138, align 2\l  %139 = load i64, ptr %10, align 8\l  %140 = sub i64 65535, %139\l  %141 = load i64, ptr %11, align 8\l  %142 = sub i64 65535, %141\l  %143 = mul i64 %140, %142\l  %144 = udiv i64 %143, 65535\l  %145 = trunc i64 %144 to i16\l  %146 = load ptr, ptr %6, align 8\l  %147 = getelementptr inbounds i16, ptr %146, i64 2\l  store i16 %145, ptr %147, align 2\l  br label %148\l}"];
	Node0x600001503840 -> Node0x600001503890[tooltip="54 -> 148\nProbability 100.00%" ];
	Node0x600001503890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{148:\l|  ret i32 0\l}"];
}
