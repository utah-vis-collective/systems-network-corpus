digraph "CFG for 'png_write_chunk' function" {
	label="CFG for 'png_write_chunk' function";

	Node0x6000023b25d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{4:\l|  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca i64, align 8\l  store ptr %0, ptr %5, align 8\l  store ptr %1, ptr %6, align 8\l  store ptr %2, ptr %7, align 8\l  store i64 %3, ptr %8, align 8\l  %9 = load ptr, ptr %5, align 8\l  %10 = load i64, ptr %8, align 8\l  call void @png_write_uint_32(ptr noundef %9, i64 noundef %10)\l  %11 = load ptr, ptr %5, align 8\l  %12 = load ptr, ptr %6, align 8\l  call void @png_write_data(ptr noundef %11, ptr noundef %12, i64 noundef 4)\l  %13 = load ptr, ptr %5, align 8\l  call void @png_reset_crc(ptr noundef %13)\l  %14 = load ptr, ptr %5, align 8\l  %15 = load ptr, ptr %6, align 8\l  call void @png_calculate_crc(ptr noundef %14, ptr noundef %15, i64 noundef 4)\l  %16 = load i64, ptr %8, align 8\l  %17 = icmp ne i64 %16, 0\l  br i1 %17, label %18, label %25\l|{<s0>T|<s1>F}}"];
	Node0x6000023b25d0:s0 -> Node0x6000023b2620[tooltip="4 -> 18\nProbability 62.50%" ];
	Node0x6000023b25d0:s1 -> Node0x6000023b2670[tooltip="4 -> 25\nProbability 37.50%" ];
	Node0x6000023b2620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{18:\l|  %19 = load ptr, ptr %5, align 8\l  %20 = load ptr, ptr %7, align 8\l  %21 = load i64, ptr %8, align 8\l  call void @png_calculate_crc(ptr noundef %19, ptr noundef %20, i64 noundef\l... %21)\l  %22 = load ptr, ptr %5, align 8\l  %23 = load ptr, ptr %7, align 8\l  %24 = load i64, ptr %8, align 8\l  call void @png_write_data(ptr noundef %22, ptr noundef %23, i64 noundef %24)\l  br label %25\l}"];
	Node0x6000023b2620 -> Node0x6000023b2670[tooltip="18 -> 25\nProbability 100.00%" ];
	Node0x6000023b2670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{25:\l|  %26 = load ptr, ptr %5, align 8\l  %27 = load ptr, ptr %5, align 8\l  %28 = getelementptr inbounds %struct.png_struct_def, ptr %27, i32 0, i32 35\l  %29 = load i64, ptr %28, align 8\l  %30 = xor i64 %29, -1\l  call void @png_write_uint_32(ptr noundef %26, i64 noundef %30)\l  ret void\l}"];
}
