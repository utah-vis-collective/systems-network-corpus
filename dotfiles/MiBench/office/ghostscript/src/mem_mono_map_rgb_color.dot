digraph "CFG for 'mem_mono_map_rgb_color' function" {
	label="CFG for 'mem_mono_map_rgb_color' function";

	Node0x6000014fa170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{4:\l|  %5 = alloca ptr, align 8\l  %6 = alloca i16, align 2\l  %7 = alloca i16, align 2\l  %8 = alloca i16, align 2\l  store ptr %0, ptr %5, align 8\l  store i16 %1, ptr %6, align 2\l  store i16 %2, ptr %7, align 2\l  store i16 %3, ptr %8, align 2\l  %9 = load ptr, ptr %5, align 8\l  %10 = load i16, ptr %6, align 2\l  %11 = load i16, ptr %7, align 2\l  %12 = load i16, ptr %8, align 2\l  %13 = call i64 @gx_default_w_b_map_rgb_color(ptr noundef %9, i16 noundef\l... zeroext %10, i16 noundef zeroext %11, i16 noundef zeroext %12)\l  %14 = load ptr, ptr %5, align 8\l  %15 = getelementptr inbounds %struct.gx_device_memory_s, ptr %14, i32 0, i32\l... 29\l  %16 = getelementptr inbounds %struct.gs_const_string_s, ptr %15, i32 0, i32 0\l  %17 = load ptr, ptr %16, align 8\l  %18 = getelementptr inbounds i8, ptr %17, i64 0\l  %19 = load i8, ptr %18, align 1\l  %20 = zext i8 %19 to i64\l  %21 = xor i64 %13, %20\l  %22 = and i64 %21, 1\l  ret i64 %22\l}"];
}
