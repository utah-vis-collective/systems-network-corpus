digraph "CFG for 'fullsize_smooth_downsample' function" {
	label="CFG for 'fullsize_smooth_downsample' function";

	Node0x600002336bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{4:\l|  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca ptr, align 8\l  %13 = alloca ptr, align 8\l  %14 = alloca ptr, align 8\l  %15 = alloca ptr, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i32, align 4\l  %21 = alloca i32, align 4\l  %22 = alloca i32, align 4\l  store ptr %0, ptr %5, align 8\l  store ptr %1, ptr %6, align 8\l  store ptr %2, ptr %7, align 8\l  store ptr %3, ptr %8, align 8\l  %23 = load ptr, ptr %6, align 8\l  %24 = getelementptr inbounds %struct.jpeg_component_info, ptr %23, i32 0,\l... i32 7\l  %25 = load i32, ptr %24, align 4\l  %26 = mul i32 %25, 8\l  store i32 %26, ptr %11, align 4\l  %27 = load ptr, ptr %7, align 8\l  %28 = getelementptr inbounds ptr, ptr %27, i64 -1\l  %29 = load ptr, ptr %5, align 8\l  %30 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %29, i32 0,\l... i32 39\l  %31 = load i32, ptr %30, align 4\l  %32 = add nsw i32 %31, 2\l  %33 = load ptr, ptr %5, align 8\l  %34 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %33, i32 0,\l... i32 6\l  %35 = load i32, ptr %34, align 8\l  %36 = load i32, ptr %11, align 4\l  call void @expand_right_edge(ptr noundef %28, i32 noundef %32, i32 noundef\l... %35, i32 noundef %36)\l  %37 = load ptr, ptr %5, align 8\l  %38 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %37, i32 0,\l... i32 27\l  %39 = load i32, ptr %38, align 8\l  %40 = sext i32 %39 to i64\l  %41 = mul nsw i64 %40, 512\l  %42 = sub nsw i64 65536, %41\l  store i64 %42, ptr %18, align 8\l  %43 = load ptr, ptr %5, align 8\l  %44 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %43, i32 0,\l... i32 27\l  %45 = load i32, ptr %44, align 8\l  %46 = mul nsw i32 %45, 64\l  %47 = sext i32 %46 to i64\l  store i64 %47, ptr %19, align 8\l  store i32 0, ptr %9, align 4\l  br label %48\l}"];
	Node0x600002336bc0 -> Node0x600002336c10[tooltip="4 -> 48\nProbability 100.00%" ];
	Node0x600002336c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{48:\l|  %49 = load i32, ptr %9, align 4\l  %50 = load ptr, ptr %6, align 8\l  %51 = getelementptr inbounds %struct.jpeg_component_info, ptr %50, i32 0,\l... i32 3\l  %52 = load i32, ptr %51, align 4\l  %53 = icmp slt i32 %49, %52\l  br i1 %53, label %54, label %215\l|{<s0>T|<s1>F}}"];
	Node0x600002336c10:s0 -> Node0x600002336c60[tooltip="48 -> 54\nProbability 96.88%" ];
	Node0x600002336c10:s1 -> Node0x600002336e40[tooltip="48 -> 215\nProbability 3.12%" ];
	Node0x600002336c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{54:\l|  %55 = load ptr, ptr %8, align 8\l  %56 = load i32, ptr %9, align 4\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds ptr, ptr %55, i64 %57\l  %59 = load ptr, ptr %58, align 8\l  store ptr %59, ptr %15, align 8\l  %60 = load ptr, ptr %7, align 8\l  %61 = load i32, ptr %9, align 4\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds ptr, ptr %60, i64 %62\l  %64 = load ptr, ptr %63, align 8\l  store ptr %64, ptr %12, align 8\l  %65 = load ptr, ptr %7, align 8\l  %66 = load i32, ptr %9, align 4\l  %67 = sub nsw i32 %66, 1\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds ptr, ptr %65, i64 %68\l  %70 = load ptr, ptr %69, align 8\l  store ptr %70, ptr %13, align 8\l  %71 = load ptr, ptr %7, align 8\l  %72 = load i32, ptr %9, align 4\l  %73 = add nsw i32 %72, 1\l  %74 = sext i32 %73 to i64\l  %75 = getelementptr inbounds ptr, ptr %71, i64 %74\l  %76 = load ptr, ptr %75, align 8\l  store ptr %76, ptr %14, align 8\l  %77 = load ptr, ptr %13, align 8\l  %78 = getelementptr inbounds i8, ptr %77, i32 1\l  store ptr %78, ptr %13, align 8\l  %79 = load i8, ptr %77, align 1\l  %80 = zext i8 %79 to i32\l  %81 = load ptr, ptr %14, align 8\l  %82 = getelementptr inbounds i8, ptr %81, i32 1\l  store ptr %82, ptr %14, align 8\l  %83 = load i8, ptr %81, align 1\l  %84 = zext i8 %83 to i32\l  %85 = add nsw i32 %80, %84\l  %86 = load ptr, ptr %12, align 8\l  %87 = load i8, ptr %86, align 1\l  %88 = zext i8 %87 to i32\l  %89 = add nsw i32 %85, %88\l  store i32 %89, ptr %20, align 4\l  %90 = load ptr, ptr %12, align 8\l  %91 = getelementptr inbounds i8, ptr %90, i32 1\l  store ptr %91, ptr %12, align 8\l  %92 = load i8, ptr %90, align 1\l  %93 = zext i8 %92 to i32\l  %94 = sext i32 %93 to i64\l  store i64 %94, ptr %16, align 8\l  %95 = load ptr, ptr %13, align 8\l  %96 = load i8, ptr %95, align 1\l  %97 = zext i8 %96 to i32\l  %98 = load ptr, ptr %14, align 8\l  %99 = load i8, ptr %98, align 1\l  %100 = zext i8 %99 to i32\l  %101 = add nsw i32 %97, %100\l  %102 = load ptr, ptr %12, align 8\l  %103 = load i8, ptr %102, align 1\l  %104 = zext i8 %103 to i32\l  %105 = add nsw i32 %101, %104\l  store i32 %105, ptr %22, align 4\l  %106 = load i32, ptr %20, align 4\l  %107 = sext i32 %106 to i64\l  %108 = load i32, ptr %20, align 4\l  %109 = sext i32 %108 to i64\l  %110 = load i64, ptr %16, align 8\l  %111 = sub nsw i64 %109, %110\l  %112 = add nsw i64 %107, %111\l  %113 = load i32, ptr %22, align 4\l  %114 = sext i32 %113 to i64\l  %115 = add nsw i64 %112, %114\l  store i64 %115, ptr %17, align 8\l  %116 = load i64, ptr %16, align 8\l  %117 = load i64, ptr %18, align 8\l  %118 = mul nsw i64 %116, %117\l  %119 = load i64, ptr %17, align 8\l  %120 = load i64, ptr %19, align 8\l  %121 = mul nsw i64 %119, %120\l  %122 = add nsw i64 %118, %121\l  store i64 %122, ptr %16, align 8\l  %123 = load i64, ptr %16, align 8\l  %124 = add nsw i64 %123, 32768\l  %125 = ashr i64 %124, 16\l  %126 = trunc i64 %125 to i8\l  %127 = load ptr, ptr %15, align 8\l  %128 = getelementptr inbounds i8, ptr %127, i32 1\l  store ptr %128, ptr %15, align 8\l  store i8 %126, ptr %127, align 1\l  %129 = load i32, ptr %20, align 4\l  store i32 %129, ptr %21, align 4\l  %130 = load i32, ptr %22, align 4\l  store i32 %130, ptr %20, align 4\l  %131 = load i32, ptr %11, align 4\l  %132 = sub i32 %131, 2\l  store i32 %132, ptr %10, align 4\l  br label %133\l}"];
	Node0x600002336c60 -> Node0x600002336cb0[tooltip="54 -> 133\nProbability 100.00%" ];
	Node0x600002336cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{133:\l|  %134 = load i32, ptr %10, align 4\l  %135 = icmp ugt i32 %134, 0\l  br i1 %135, label %136, label %185\l|{<s0>T|<s1>F}}"];
	Node0x600002336cb0:s0 -> Node0x600002336d00[tooltip="133 -> 136\nProbability 96.88%" ];
	Node0x600002336cb0:s1 -> Node0x600002336da0[tooltip="133 -> 185\nProbability 3.12%" ];
	Node0x600002336d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{136:\l|  %137 = load ptr, ptr %12, align 8\l  %138 = getelementptr inbounds i8, ptr %137, i32 1\l  store ptr %138, ptr %12, align 8\l  %139 = load i8, ptr %137, align 1\l  %140 = zext i8 %139 to i32\l  %141 = sext i32 %140 to i64\l  store i64 %141, ptr %16, align 8\l  %142 = load ptr, ptr %13, align 8\l  %143 = getelementptr inbounds i8, ptr %142, i32 1\l  store ptr %143, ptr %13, align 8\l  %144 = load ptr, ptr %14, align 8\l  %145 = getelementptr inbounds i8, ptr %144, i32 1\l  store ptr %145, ptr %14, align 8\l  %146 = load ptr, ptr %13, align 8\l  %147 = load i8, ptr %146, align 1\l  %148 = zext i8 %147 to i32\l  %149 = load ptr, ptr %14, align 8\l  %150 = load i8, ptr %149, align 1\l  %151 = zext i8 %150 to i32\l  %152 = add nsw i32 %148, %151\l  %153 = load ptr, ptr %12, align 8\l  %154 = load i8, ptr %153, align 1\l  %155 = zext i8 %154 to i32\l  %156 = add nsw i32 %152, %155\l  store i32 %156, ptr %22, align 4\l  %157 = load i32, ptr %21, align 4\l  %158 = sext i32 %157 to i64\l  %159 = load i32, ptr %20, align 4\l  %160 = sext i32 %159 to i64\l  %161 = load i64, ptr %16, align 8\l  %162 = sub nsw i64 %160, %161\l  %163 = add nsw i64 %158, %162\l  %164 = load i32, ptr %22, align 4\l  %165 = sext i32 %164 to i64\l  %166 = add nsw i64 %163, %165\l  store i64 %166, ptr %17, align 8\l  %167 = load i64, ptr %16, align 8\l  %168 = load i64, ptr %18, align 8\l  %169 = mul nsw i64 %167, %168\l  %170 = load i64, ptr %17, align 8\l  %171 = load i64, ptr %19, align 8\l  %172 = mul nsw i64 %170, %171\l  %173 = add nsw i64 %169, %172\l  store i64 %173, ptr %16, align 8\l  %174 = load i64, ptr %16, align 8\l  %175 = add nsw i64 %174, 32768\l  %176 = ashr i64 %175, 16\l  %177 = trunc i64 %176 to i8\l  %178 = load ptr, ptr %15, align 8\l  %179 = getelementptr inbounds i8, ptr %178, i32 1\l  store ptr %179, ptr %15, align 8\l  store i8 %177, ptr %178, align 1\l  %180 = load i32, ptr %20, align 4\l  store i32 %180, ptr %21, align 4\l  %181 = load i32, ptr %22, align 4\l  store i32 %181, ptr %20, align 4\l  br label %182\l}"];
	Node0x600002336d00 -> Node0x600002336d50[tooltip="136 -> 182\nProbability 100.00%" ];
	Node0x600002336d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{182:\l|  %183 = load i32, ptr %10, align 4\l  %184 = add i32 %183, -1\l  store i32 %184, ptr %10, align 4\l  br label %133\l}"];
	Node0x600002336d50 -> Node0x600002336cb0[tooltip="182 -> 133\nProbability 100.00%" ];
	Node0x600002336da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{185:\l|  %186 = load ptr, ptr %12, align 8\l  %187 = load i8, ptr %186, align 1\l  %188 = zext i8 %187 to i32\l  %189 = sext i32 %188 to i64\l  store i64 %189, ptr %16, align 8\l  %190 = load i32, ptr %21, align 4\l  %191 = sext i32 %190 to i64\l  %192 = load i32, ptr %20, align 4\l  %193 = sext i32 %192 to i64\l  %194 = load i64, ptr %16, align 8\l  %195 = sub nsw i64 %193, %194\l  %196 = add nsw i64 %191, %195\l  %197 = load i32, ptr %20, align 4\l  %198 = sext i32 %197 to i64\l  %199 = add nsw i64 %196, %198\l  store i64 %199, ptr %17, align 8\l  %200 = load i64, ptr %16, align 8\l  %201 = load i64, ptr %18, align 8\l  %202 = mul nsw i64 %200, %201\l  %203 = load i64, ptr %17, align 8\l  %204 = load i64, ptr %19, align 8\l  %205 = mul nsw i64 %203, %204\l  %206 = add nsw i64 %202, %205\l  store i64 %206, ptr %16, align 8\l  %207 = load i64, ptr %16, align 8\l  %208 = add nsw i64 %207, 32768\l  %209 = ashr i64 %208, 16\l  %210 = trunc i64 %209 to i8\l  %211 = load ptr, ptr %15, align 8\l  store i8 %210, ptr %211, align 1\l  br label %212\l}"];
	Node0x600002336da0 -> Node0x600002336df0[tooltip="185 -> 212\nProbability 100.00%" ];
	Node0x600002336df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{212:\l|  %213 = load i32, ptr %9, align 4\l  %214 = add nsw i32 %213, 1\l  store i32 %214, ptr %9, align 4\l  br label %48\l}"];
	Node0x600002336df0 -> Node0x600002336c10[tooltip="212 -> 48\nProbability 100.00%" ];
	Node0x600002336e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{215:\l|  ret void\l}"];
}
