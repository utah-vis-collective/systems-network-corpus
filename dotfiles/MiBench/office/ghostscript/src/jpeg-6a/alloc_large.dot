digraph "CFG for 'alloc_large' function" {
	label="CFG for 'alloc_large' function";

	Node0x6000039b6f30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca i64, align 8\l  store ptr %0, ptr %4, align 8\l  store i32 %1, ptr %5, align 4\l  store i64 %2, ptr %6, align 8\l  %10 = load ptr, ptr %4, align 8\l  %11 = getelementptr inbounds %struct.jpeg_common_struct, ptr %10, i32 0, i32\l... 1\l  %12 = load ptr, ptr %11, align 8\l  store ptr %12, ptr %7, align 8\l  %13 = load i64, ptr %6, align 8\l  %14 = icmp ugt i64 %13, 999999976\l  br i1 %14, label %15, label %17\l|{<s0>T|<s1>F}}"];
	Node0x6000039b6f30:s0 -> Node0x6000039b6f80[tooltip="3 -> 15\nProbability 50.00%" ];
	Node0x6000039b6f30:s1 -> Node0x6000039b6fd0[tooltip="3 -> 17\nProbability 50.00%" ];
	Node0x6000039b6f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{15:\l|  %16 = load ptr, ptr %4, align 8\l  call void @out_of_memory(ptr noundef %16, i32 noundef 3)\l  br label %17\l}"];
	Node0x6000039b6f80 -> Node0x6000039b6fd0[tooltip="15 -> 17\nProbability 100.00%" ];
	Node0x6000039b6fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{17:\l|  %18 = load i64, ptr %6, align 8\l  %19 = urem i64 %18, 8\l  store i64 %19, ptr %9, align 8\l  %20 = load i64, ptr %9, align 8\l  %21 = icmp ugt i64 %20, 0\l  br i1 %21, label %22, label %27\l|{<s0>T|<s1>F}}"];
	Node0x6000039b6fd0:s0 -> Node0x6000039b7020[tooltip="17 -> 22\nProbability 50.00%" ];
	Node0x6000039b6fd0:s1 -> Node0x6000039b7070[tooltip="17 -> 27\nProbability 50.00%" ];
	Node0x6000039b7020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{22:\l|  %23 = load i64, ptr %9, align 8\l  %24 = sub i64 8, %23\l  %25 = load i64, ptr %6, align 8\l  %26 = add i64 %25, %24\l  store i64 %26, ptr %6, align 8\l  br label %27\l}"];
	Node0x6000039b7020 -> Node0x6000039b7070[tooltip="22 -> 27\nProbability 100.00%" ];
	Node0x6000039b7070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{27:\l|  %28 = load i32, ptr %5, align 4\l  %29 = icmp slt i32 %28, 0\l  br i1 %29, label %33, label %30\l|{<s0>T|<s1>F}}"];
	Node0x6000039b7070:s0 -> Node0x6000039b7110[tooltip="27 -> 33\nProbability 37.50%" ];
	Node0x6000039b7070:s1 -> Node0x6000039b70c0[tooltip="27 -> 30\nProbability 62.50%" ];
	Node0x6000039b70c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{30:\l|  %31 = load i32, ptr %5, align 4\l  %32 = icmp sge i32 %31, 2\l  br i1 %32, label %33, label %50\l|{<s0>T|<s1>F}}"];
	Node0x6000039b70c0:s0 -> Node0x6000039b7110[tooltip="30 -> 33\nProbability 50.00%" ];
	Node0x6000039b70c0:s1 -> Node0x6000039b7160[tooltip="30 -> 50\nProbability 50.00%" ];
	Node0x6000039b7110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{33:\l|  %34 = load ptr, ptr %4, align 8\l  %35 = getelementptr inbounds %struct.jpeg_common_struct, ptr %34, i32 0, i32\l... 0\l  %36 = load ptr, ptr %35, align 8\l  %37 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %36, i32 0, i32 5\l  store i32 12, ptr %37, align 8\l  %38 = load i32, ptr %5, align 4\l  %39 = load ptr, ptr %4, align 8\l  %40 = getelementptr inbounds %struct.jpeg_common_struct, ptr %39, i32 0, i32\l... 0\l  %41 = load ptr, ptr %40, align 8\l  %42 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %41, i32 0, i32 6\l  %43 = getelementptr inbounds [8 x i32], ptr %42, i64 0, i64 0\l  store i32 %38, ptr %43, align 4\l  %44 = load ptr, ptr %4, align 8\l  %45 = getelementptr inbounds %struct.jpeg_common_struct, ptr %44, i32 0, i32\l... 0\l  %46 = load ptr, ptr %45, align 8\l  %47 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %46, i32 0, i32 0\l  %48 = load ptr, ptr %47, align 8\l  %49 = load ptr, ptr %4, align 8\l  call void %48(ptr noundef %49)\l  br label %50\l}"];
	Node0x6000039b7110 -> Node0x6000039b7160[tooltip="33 -> 50\nProbability 100.00%" ];
	Node0x6000039b7160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{50:\l|  %51 = load ptr, ptr %4, align 8\l  %52 = load i64, ptr %6, align 8\l  %53 = add i64 %52, 24\l  %54 = call ptr @jpeg_get_large(ptr noundef %51, i64 noundef %53)\l  store ptr %54, ptr %8, align 8\l  %55 = load ptr, ptr %8, align 8\l  %56 = icmp eq ptr %55, null\l  br i1 %56, label %57, label %59\l|{<s0>T|<s1>F}}"];
	Node0x6000039b7160:s0 -> Node0x6000039b71b0[tooltip="50 -> 57\nProbability 37.50%" ];
	Node0x6000039b7160:s1 -> Node0x6000039b7200[tooltip="50 -> 59\nProbability 62.50%" ];
	Node0x6000039b71b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{57:\l|  %58 = load ptr, ptr %4, align 8\l  call void @out_of_memory(ptr noundef %58, i32 noundef 4)\l  br label %59\l}"];
	Node0x6000039b71b0 -> Node0x6000039b7200[tooltip="57 -> 59\nProbability 100.00%" ];
	Node0x6000039b7200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{59:\l|  %60 = load i64, ptr %6, align 8\l  %61 = add i64 %60, 24\l  %62 = load ptr, ptr %7, align 8\l  %63 = getelementptr inbounds %struct.my_memory_mgr, ptr %62, i32 0, i32 5\l  %64 = load i64, ptr %63, align 8\l  %65 = add i64 %64, %61\l  store i64 %65, ptr %63, align 8\l  %66 = load ptr, ptr %7, align 8\l  %67 = getelementptr inbounds %struct.my_memory_mgr, ptr %66, i32 0, i32 2\l  %68 = load i32, ptr %5, align 4\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds [2 x ptr], ptr %67, i64 0, i64 %69\l  %71 = load ptr, ptr %70, align 8\l  %72 = load ptr, ptr %8, align 8\l  %73 = getelementptr inbounds %struct.anon.0, ptr %72, i32 0, i32 0\l  store ptr %71, ptr %73, align 8\l  %74 = load i64, ptr %6, align 8\l  %75 = load ptr, ptr %8, align 8\l  %76 = getelementptr inbounds %struct.anon.0, ptr %75, i32 0, i32 1\l  store i64 %74, ptr %76, align 8\l  %77 = load ptr, ptr %8, align 8\l  %78 = getelementptr inbounds %struct.anon.0, ptr %77, i32 0, i32 2\l  store i64 0, ptr %78, align 8\l  %79 = load ptr, ptr %8, align 8\l  %80 = load ptr, ptr %7, align 8\l  %81 = getelementptr inbounds %struct.my_memory_mgr, ptr %80, i32 0, i32 2\l  %82 = load i32, ptr %5, align 4\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds [2 x ptr], ptr %81, i64 0, i64 %83\l  store ptr %79, ptr %84, align 8\l  %85 = load ptr, ptr %8, align 8\l  %86 = getelementptr inbounds %union.large_pool_struct, ptr %85, i64 1\l  ret ptr %86\l}"];
}
