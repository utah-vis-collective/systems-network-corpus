digraph "CFG for 'jpeg_huff_decode' function" {
	label="CFG for 'jpeg_huff_decode' function";

	Node0x6000012c3340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{5:\l|  %6 = alloca i32, align 4\l  %7 = alloca ptr, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca ptr, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i64, align 8\l  store ptr %0, ptr %7, align 8\l  store i64 %1, ptr %8, align 8\l  store i32 %2, ptr %9, align 4\l  store ptr %3, ptr %10, align 8\l  store i32 %4, ptr %11, align 4\l  %14 = load i32, ptr %11, align 4\l  store i32 %14, ptr %12, align 4\l  %15 = load i32, ptr %9, align 4\l  %16 = load i32, ptr %12, align 4\l  %17 = icmp slt i32 %15, %16\l  br i1 %17, label %18, label %33\l|{<s0>T|<s1>F}}"];
	Node0x6000012c3340:s0 -> Node0x6000012c3390[tooltip="5 -> 18\nProbability 50.00%" ];
	Node0x6000012c3340:s1 -> Node0x6000012c3480[tooltip="5 -> 33\nProbability 50.00%" ];
	Node0x6000012c3390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{18:\l|  %19 = load ptr, ptr %7, align 8\l  %20 = load i64, ptr %8, align 8\l  %21 = load i32, ptr %9, align 4\l  %22 = load i32, ptr %12, align 4\l  %23 = call i32 @jpeg_fill_bit_buffer(ptr noundef %19, i64 noundef %20, i32\l... noundef %21, i32 noundef %22)\l  %24 = icmp ne i32 %23, 0\l  br i1 %24, label %26, label %25\l|{<s0>T|<s1>F}}"];
	Node0x6000012c3390:s0 -> Node0x6000012c3430[tooltip="18 -> 26\nProbability 62.50%" ];
	Node0x6000012c3390:s1 -> Node0x6000012c33e0[tooltip="18 -> 25\nProbability 37.50%" ];
	Node0x6000012c33e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{25:\l|  store i32 -1, ptr %6, align 4\l  br label %138\l}"];
	Node0x6000012c33e0 -> Node0x6000012c37a0[tooltip="25 -> 138\nProbability 100.00%" ];
	Node0x6000012c3430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{26:\l|  %27 = load ptr, ptr %7, align 8\l  %28 = getelementptr inbounds %struct.bitread_working_state, ptr %27, i32 0,\l... i32 3\l  %29 = load i64, ptr %28, align 8\l  store i64 %29, ptr %8, align 8\l  %30 = load ptr, ptr %7, align 8\l  %31 = getelementptr inbounds %struct.bitread_working_state, ptr %30, i32 0,\l... i32 4\l  %32 = load i32, ptr %31, align 8\l  store i32 %32, ptr %9, align 4\l  br label %33\l}"];
	Node0x6000012c3430 -> Node0x6000012c3480[tooltip="26 -> 33\nProbability 100.00%" ];
	Node0x6000012c3480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{33:\l|  %34 = load i64, ptr %8, align 8\l  %35 = load i32, ptr %12, align 4\l  %36 = load i32, ptr %9, align 4\l  %37 = sub nsw i32 %36, %35\l  store i32 %37, ptr %9, align 4\l  %38 = zext i32 %37 to i64\l  %39 = ashr i64 %34, %38\l  %40 = trunc i64 %39 to i32\l  %41 = load i32, ptr %12, align 4\l  %42 = shl i32 1, %41\l  %43 = sub nsw i32 %42, 1\l  %44 = and i32 %40, %43\l  %45 = sext i32 %44 to i64\l  store i64 %45, ptr %13, align 8\l  br label %46\l}"];
	Node0x6000012c3480 -> Node0x6000012c34d0[tooltip="33 -> 46\nProbability 100.00%" ];
	Node0x6000012c34d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{46:\l|  %47 = load i64, ptr %13, align 8\l  %48 = load ptr, ptr %10, align 8\l  %49 = getelementptr inbounds %struct.d_derived_tbl, ptr %48, i32 0, i32 1\l  %50 = load i32, ptr %12, align 4\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds [18 x i64], ptr %49, i64 0, i64 %51\l  %53 = load i64, ptr %52, align 8\l  %54 = icmp sgt i64 %47, %53\l  br i1 %54, label %55, label %87\l|{<s0>T|<s1>F}}"];
	Node0x6000012c34d0:s0 -> Node0x6000012c3520[tooltip="46 -> 55\nProbability 96.88%" ];
	Node0x6000012c34d0:s1 -> Node0x6000012c36b0[tooltip="46 -> 87\nProbability 3.12%" ];
	Node0x6000012c3520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{55:\l|  %56 = load i64, ptr %13, align 8\l  %57 = shl i64 %56, 1\l  store i64 %57, ptr %13, align 8\l  %58 = load i32, ptr %9, align 4\l  %59 = icmp slt i32 %58, 1\l  br i1 %59, label %60, label %74\l|{<s0>T|<s1>F}}"];
	Node0x6000012c3520:s0 -> Node0x6000012c3570[tooltip="55 -> 60\nProbability 37.50%" ];
	Node0x6000012c3520:s1 -> Node0x6000012c3660[tooltip="55 -> 74\nProbability 62.50%" ];
	Node0x6000012c3570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{60:\l|  %61 = load ptr, ptr %7, align 8\l  %62 = load i64, ptr %8, align 8\l  %63 = load i32, ptr %9, align 4\l  %64 = call i32 @jpeg_fill_bit_buffer(ptr noundef %61, i64 noundef %62, i32\l... noundef %63, i32 noundef 1)\l  %65 = icmp ne i32 %64, 0\l  br i1 %65, label %67, label %66\l|{<s0>T|<s1>F}}"];
	Node0x6000012c3570:s0 -> Node0x6000012c3610[tooltip="60 -> 67\nProbability 96.88%" ];
	Node0x6000012c3570:s1 -> Node0x6000012c35c0[tooltip="60 -> 66\nProbability 3.12%" ];
	Node0x6000012c35c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{66:\l|  store i32 -1, ptr %6, align 4\l  br label %138\l}"];
	Node0x6000012c35c0 -> Node0x6000012c37a0[tooltip="66 -> 138\nProbability 100.00%" ];
	Node0x6000012c3610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{67:\l|  %68 = load ptr, ptr %7, align 8\l  %69 = getelementptr inbounds %struct.bitread_working_state, ptr %68, i32 0,\l... i32 3\l  %70 = load i64, ptr %69, align 8\l  store i64 %70, ptr %8, align 8\l  %71 = load ptr, ptr %7, align 8\l  %72 = getelementptr inbounds %struct.bitread_working_state, ptr %71, i32 0,\l... i32 4\l  %73 = load i32, ptr %72, align 8\l  store i32 %73, ptr %9, align 4\l  br label %74\l}"];
	Node0x6000012c3610 -> Node0x6000012c3660[tooltip="67 -> 74\nProbability 100.00%" ];
	Node0x6000012c3660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{74:\l|  %75 = load i64, ptr %8, align 8\l  %76 = load i32, ptr %9, align 4\l  %77 = sub nsw i32 %76, 1\l  store i32 %77, ptr %9, align 4\l  %78 = zext i32 %77 to i64\l  %79 = ashr i64 %75, %78\l  %80 = trunc i64 %79 to i32\l  %81 = and i32 %80, 1\l  %82 = sext i32 %81 to i64\l  %83 = load i64, ptr %13, align 8\l  %84 = or i64 %83, %82\l  store i64 %84, ptr %13, align 8\l  %85 = load i32, ptr %12, align 4\l  %86 = add nsw i32 %85, 1\l  store i32 %86, ptr %12, align 4\l  br label %46\l}"];
	Node0x6000012c3660 -> Node0x6000012c34d0[tooltip="74 -> 46\nProbability 100.00%" ];
	Node0x6000012c36b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{87:\l|  %88 = load i64, ptr %8, align 8\l  %89 = load ptr, ptr %7, align 8\l  %90 = getelementptr inbounds %struct.bitread_working_state, ptr %89, i32 0,\l... i32 3\l  store i64 %88, ptr %90, align 8\l  %91 = load i32, ptr %9, align 4\l  %92 = load ptr, ptr %7, align 8\l  %93 = getelementptr inbounds %struct.bitread_working_state, ptr %92, i32 0,\l... i32 4\l  store i32 %91, ptr %93, align 8\l  %94 = load i32, ptr %12, align 4\l  %95 = icmp sgt i32 %94, 16\l  br i1 %95, label %96, label %113\l|{<s0>T|<s1>F}}"];
	Node0x6000012c36b0:s0 -> Node0x6000012c3700[tooltip="87 -> 96\nProbability 50.00%" ];
	Node0x6000012c36b0:s1 -> Node0x6000012c3750[tooltip="87 -> 113\nProbability 50.00%" ];
	Node0x6000012c3700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{96:\l|  %97 = load ptr, ptr %7, align 8\l  %98 = getelementptr inbounds %struct.bitread_working_state, ptr %97, i32 0,\l... i32 5\l  %99 = load ptr, ptr %98, align 8\l  %100 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %99, i32\l... 0, i32 0\l  %101 = load ptr, ptr %100, align 8\l  %102 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %101, i32 0, i32 5\l  store i32 114, ptr %102, align 8\l  %103 = load ptr, ptr %7, align 8\l  %104 = getelementptr inbounds %struct.bitread_working_state, ptr %103, i32\l... 0, i32 5\l  %105 = load ptr, ptr %104, align 8\l  %106 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %105, i32\l... 0, i32 0\l  %107 = load ptr, ptr %106, align 8\l  %108 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %107, i32 0, i32 1\l  %109 = load ptr, ptr %108, align 8\l  %110 = load ptr, ptr %7, align 8\l  %111 = getelementptr inbounds %struct.bitread_working_state, ptr %110, i32\l... 0, i32 5\l  %112 = load ptr, ptr %111, align 8\l  call void %109(ptr noundef %112, i32 noundef -1)\l  store i32 0, ptr %6, align 4\l  br label %138\l}"];
	Node0x6000012c3700 -> Node0x6000012c37a0[tooltip="96 -> 138\nProbability 100.00%" ];
	Node0x6000012c3750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{113:\l|  %114 = load ptr, ptr %10, align 8\l  %115 = getelementptr inbounds %struct.d_derived_tbl, ptr %114, i32 0, i32 3\l  %116 = load ptr, ptr %115, align 8\l  %117 = getelementptr inbounds %struct.JHUFF_TBL, ptr %116, i32 0, i32 1\l  %118 = load ptr, ptr %10, align 8\l  %119 = getelementptr inbounds %struct.d_derived_tbl, ptr %118, i32 0, i32 2\l  %120 = load i32, ptr %12, align 4\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds [17 x i32], ptr %119, i64 0, i64 %121\l  %123 = load i32, ptr %122, align 4\l  %124 = load i64, ptr %13, align 8\l  %125 = load ptr, ptr %10, align 8\l  %126 = getelementptr inbounds %struct.d_derived_tbl, ptr %125, i32 0, i32 0\l  %127 = load i32, ptr %12, align 4\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds [17 x i64], ptr %126, i64 0, i64 %128\l  %130 = load i64, ptr %129, align 8\l  %131 = sub nsw i64 %124, %130\l  %132 = trunc i64 %131 to i32\l  %133 = add nsw i32 %123, %132\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds [256 x i8], ptr %117, i64 0, i64 %134\l  %136 = load i8, ptr %135, align 1\l  %137 = zext i8 %136 to i32\l  store i32 %137, ptr %6, align 4\l  br label %138\l}"];
	Node0x6000012c3750 -> Node0x6000012c37a0[tooltip="113 -> 138\nProbability 100.00%" ];
	Node0x6000012c37a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{138:\l|  %139 = load i32, ptr %6, align 4\l  ret i32 %139\l}"];
}
