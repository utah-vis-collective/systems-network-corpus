digraph "CFG for 'gx_dc_pure_fill_masked' function" {
	label="CFG for 'gx_dc_pure_fill_masked' function";

	Node0x600002b4a530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{12:\l|  %13 = alloca i32, align 4\l  %14 = alloca ptr, align 8\l  %15 = alloca ptr, align 8\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca i64, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i32, align 4\l  %22 = alloca i32, align 4\l  %23 = alloca ptr, align 8\l  %24 = alloca i32, align 4\l  %25 = alloca i32, align 4\l  %26 = alloca i64, align 8\l  %27 = alloca i64, align 8\l  %28 = alloca [2 x i64], align 8\l  %29 = alloca [2 x i64], align 8\l  store ptr %0, ptr %14, align 8\l  store ptr %1, ptr %15, align 8\l  store i32 %2, ptr %16, align 4\l  store i32 %3, ptr %17, align 4\l  store i64 %4, ptr %18, align 8\l  store i32 %5, ptr %19, align 4\l  store i32 %6, ptr %20, align 4\l  store i32 %7, ptr %21, align 4\l  store i32 %8, ptr %22, align 4\l  store ptr %9, ptr %23, align 8\l  store i32 %10, ptr %24, align 4\l  store i32 %11, ptr %25, align 4\l  %30 = load i32, ptr %24, align 4\l  %31 = and i32 %30, 563\l  %32 = icmp eq i32 %31, 48\l  br i1 %32, label %33, label %61\l|{<s0>T|<s1>F}}"];
	Node0x600002b4a530:s0 -> Node0x600002b4a580[tooltip="12 -> 33\nProbability 50.00%" ];
	Node0x600002b4a530:s1 -> Node0x600002b4a6c0[tooltip="12 -> 61\nProbability 50.00%" ];
	Node0x600002b4a580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{33:\l|  %34 = load i32, ptr %25, align 4\l  %35 = icmp ne i32 %34, 0\l  br i1 %35, label %36, label %40\l|{<s0>T|<s1>F}}"];
	Node0x600002b4a580:s0 -> Node0x600002b4a5d0[tooltip="33 -> 36\nProbability 62.50%" ];
	Node0x600002b4a580:s1 -> Node0x600002b4a620[tooltip="33 -> 40\nProbability 37.50%" ];
	Node0x600002b4a5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{36:\l|  %37 = load ptr, ptr %14, align 8\l  %38 = getelementptr inbounds %struct.gx_device_color_s, ptr %37, i32 0, i32 1\l  %39 = load i64, ptr %38, align 8\l  store i64 %39, ptr %26, align 8\l  store i64 -1, ptr %27, align 8\l  br label %44\l}"];
	Node0x600002b4a5d0 -> Node0x600002b4a670[tooltip="36 -> 44\nProbability 100.00%" ];
	Node0x600002b4a620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{40:\l|  %41 = load ptr, ptr %14, align 8\l  %42 = getelementptr inbounds %struct.gx_device_color_s, ptr %41, i32 0, i32 1\l  %43 = load i64, ptr %42, align 8\l  store i64 %43, ptr %27, align 8\l  store i64 -1, ptr %26, align 8\l  br label %44\l}"];
	Node0x600002b4a620 -> Node0x600002b4a670[tooltip="40 -> 44\nProbability 100.00%" ];
	Node0x600002b4a670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{44:\l|  %45 = load ptr, ptr %23, align 8\l  %46 = getelementptr inbounds %struct.gx_device_s, ptr %45, i32 0, i32 21\l  %47 = getelementptr inbounds %struct.gx_device_procs_s, ptr %46, i32 0, i32 9\l  %48 = load ptr, ptr %47, align 8\l  %49 = load ptr, ptr %23, align 8\l  %50 = load ptr, ptr %15, align 8\l  %51 = load i32, ptr %16, align 4\l  %52 = load i32, ptr %17, align 4\l  %53 = load i64, ptr %18, align 8\l  %54 = load i32, ptr %19, align 4\l  %55 = load i32, ptr %20, align 4\l  %56 = load i32, ptr %21, align 4\l  %57 = load i32, ptr %22, align 4\l  %58 = load i64, ptr %26, align 8\l  %59 = load i64, ptr %27, align 8\l  %60 = call i32 %48(ptr noundef %49, ptr noundef %50, i32 noundef %51, i32\l... noundef %52, i64 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef\l... %56, i32 noundef %57, i64 noundef %58, i64 noundef %59)\l  store i32 %60, ptr %13, align 4\l  br label %115\l}"];
	Node0x600002b4a670 -> Node0x600002b4a800[tooltip="44 -> 115\nProbability 100.00%" ];
	Node0x600002b4a6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{61:\l|  %62 = load ptr, ptr %23, align 8\l  %63 = getelementptr inbounds %struct.gx_device_s, ptr %62, i32 0, i32 21\l  %64 = getelementptr inbounds %struct.gx_device_procs_s, ptr %63, i32 0, i32 5\l  %65 = load ptr, ptr %64, align 8\l  %66 = load ptr, ptr %23, align 8\l  %67 = call i64 %65(ptr noundef %66, i16 noundef zeroext 0, i16 noundef\l... zeroext 0, i16 noundef zeroext 0)\l  %68 = getelementptr inbounds [2 x i64], ptr %28, i64 0, i64 0\l  store i64 %67, ptr %68, align 8\l  %69 = load ptr, ptr %23, align 8\l  %70 = getelementptr inbounds %struct.gx_device_s, ptr %69, i32 0, i32 21\l  %71 = getelementptr inbounds %struct.gx_device_procs_s, ptr %70, i32 0, i32 5\l  %72 = load ptr, ptr %71, align 8\l  %73 = load ptr, ptr %23, align 8\l  %74 = call i64 %72(ptr noundef %73, i16 noundef zeroext -1, i16 noundef\l... zeroext -1, i16 noundef zeroext -1)\l  %75 = getelementptr inbounds [2 x i64], ptr %28, i64 0, i64 1\l  store i64 %74, ptr %75, align 8\l  %76 = load ptr, ptr %14, align 8\l  %77 = getelementptr inbounds %struct.gx_device_color_s, ptr %76, i32 0, i32 1\l  %78 = load i64, ptr %77, align 8\l  %79 = getelementptr inbounds [2 x i64], ptr %29, i64 0, i64 1\l  store i64 %78, ptr %79, align 8\l  %80 = getelementptr inbounds [2 x i64], ptr %29, i64 0, i64 0\l  store i64 %78, ptr %80, align 8\l  %81 = load ptr, ptr %23, align 8\l  %82 = getelementptr inbounds %struct.gx_device_s, ptr %81, i32 0, i32 21\l  %83 = getelementptr inbounds %struct.gx_device_procs_s, ptr %82, i32 0, i32\l... 35\l  %84 = load ptr, ptr %83, align 8\l  %85 = load ptr, ptr %23, align 8\l  %86 = load ptr, ptr %15, align 8\l  %87 = load i32, ptr %16, align 4\l  %88 = load i32, ptr %17, align 4\l  %89 = load i64, ptr %18, align 8\l  %90 = getelementptr inbounds [2 x i64], ptr %28, i64 0, i64 0\l  %91 = getelementptr inbounds [2 x i64], ptr %29, i64 0, i64 0\l  %92 = load i32, ptr %19, align 4\l  %93 = load i32, ptr %20, align 4\l  %94 = load i32, ptr %21, align 4\l  %95 = load i32, ptr %22, align 4\l  %96 = load i32, ptr %25, align 4\l  %97 = icmp ne i32 %96, 0\l  br i1 %97, label %98, label %109\l|{<s0>T|<s1>F}}"];
	Node0x600002b4a6c0:s0 -> Node0x600002b4a710[tooltip="61 -> 98\nProbability 62.50%" ];
	Node0x600002b4a6c0:s1 -> Node0x600002b4a760[tooltip="61 -> 109\nProbability 37.50%" ];
	Node0x600002b4a710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{98:\l|  %99 = load i32, ptr %24, align 4\l  %100 = and i32 %99, 204\l  %101 = lshr i32 %100, 2\l  %102 = load i32, ptr %24, align 4\l  %103 = and i32 %102, 51\l  %104 = shl i32 %103, 2\l  %105 = or i32 %101, %104\l  %106 = load i32, ptr %24, align 4\l  %107 = and i32 %106, -256\l  %108 = or i32 %105, %107\l  br label %111\l}"];
	Node0x600002b4a710 -> Node0x600002b4a7b0[tooltip="98 -> 111\nProbability 100.00%" ];
	Node0x600002b4a760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{109:\l|  %110 = load i32, ptr %24, align 4\l  br label %111\l}"];
	Node0x600002b4a760 -> Node0x600002b4a7b0[tooltip="109 -> 111\nProbability 100.00%" ];
	Node0x600002b4a7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{111:\l|  %112 = phi i32 [ %108, %98 ], [ %110, %109 ]\l  %113 = or i32 %112, 256\l  %114 = call i32 %84(ptr noundef %85, ptr noundef %86, i32 noundef %87, i32\l... noundef %88, i64 noundef %89, ptr noundef %90, ptr noundef null, ptr noundef\l... %91, i32 noundef %92, i32 noundef %93, i32 noundef %94, i32 noundef %95, i32\l... noundef 0, i32 noundef 0, i32 noundef %113)\l  store i32 %114, ptr %13, align 4\l  br label %115\l}"];
	Node0x600002b4a7b0 -> Node0x600002b4a800[tooltip="111 -> 115\nProbability 100.00%" ];
	Node0x600002b4a800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{115:\l|  %116 = load i32, ptr %13, align 4\l  ret i32 %116\l}"];
}
