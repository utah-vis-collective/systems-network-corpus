digraph "CFG for 'ppm_map_color_rgb' function" {
	label="CFG for 'ppm_map_color_rgb' function";

	Node0x6000034c8190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store i64 %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %10 = load ptr, ptr %4, align 8\l  %11 = getelementptr inbounds %struct.gx_device_s, ptr %10, i32 0, i32 7\l  %12 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %11, i32 0,\l... i32 1\l  %13 = load i32, ptr %12, align 4\l  %14 = sdiv i32 %13, 3\l  store i32 %14, ptr %7, align 4\l  %15 = load i32, ptr %7, align 4\l  %16 = shl i32 1, %15\l  %17 = sub nsw i32 %16, 1\l  store i32 %17, ptr %8, align 4\l  %18 = load ptr, ptr %4, align 8\l  %19 = getelementptr inbounds %struct.gx_device_s, ptr %18, i32 0, i32 7\l  %20 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %19, i32 0,\l... i32 3\l  %21 = load i16, ptr %20, align 2\l  %22 = zext i16 %21 to i32\l  store i32 %22, ptr %9, align 4\l  %23 = load i64, ptr %5, align 8\l  %24 = load i32, ptr %7, align 4\l  %25 = mul i32 %24, 2\l  %26 = zext i32 %25 to i64\l  %27 = lshr i64 %23, %26\l  %28 = load i32, ptr %8, align 4\l  %29 = zext i32 %28 to i64\l  %30 = and i64 %27, %29\l  %31 = mul i64 %30, 65535\l  %32 = load i32, ptr %9, align 4\l  %33 = zext i32 %32 to i64\l  %34 = udiv i64 %31, %33\l  %35 = trunc i64 %34 to i16\l  %36 = load ptr, ptr %6, align 8\l  %37 = getelementptr inbounds i16, ptr %36, i64 0\l  store i16 %35, ptr %37, align 2\l  %38 = load i64, ptr %5, align 8\l  %39 = load i32, ptr %7, align 4\l  %40 = zext i32 %39 to i64\l  %41 = lshr i64 %38, %40\l  %42 = load i32, ptr %8, align 4\l  %43 = zext i32 %42 to i64\l  %44 = and i64 %41, %43\l  %45 = mul i64 %44, 65535\l  %46 = load i32, ptr %9, align 4\l  %47 = zext i32 %46 to i64\l  %48 = udiv i64 %45, %47\l  %49 = trunc i64 %48 to i16\l  %50 = load ptr, ptr %6, align 8\l  %51 = getelementptr inbounds i16, ptr %50, i64 1\l  store i16 %49, ptr %51, align 2\l  %52 = load i64, ptr %5, align 8\l  %53 = load i32, ptr %8, align 4\l  %54 = zext i32 %53 to i64\l  %55 = and i64 %52, %54\l  %56 = mul i64 %55, 65535\l  %57 = load i32, ptr %9, align 4\l  %58 = zext i32 %57 to i64\l  %59 = udiv i64 %56, %58\l  %60 = trunc i64 %59 to i16\l  %61 = load ptr, ptr %6, align 8\l  %62 = getelementptr inbounds i16, ptr %61, i64 2\l  store i16 %60, ptr %62, align 2\l  ret i32 0\l}"];
}
