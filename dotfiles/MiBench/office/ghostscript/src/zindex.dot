digraph "CFG for 'zindex' function" {
	label="CFG for 'zindex' function";

	Node0x600003b96580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca i32, align 4\l  %3 = alloca ptr, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  store ptr %0, ptr %3, align 8\l  %6 = load ptr, ptr %3, align 8\l  %7 = getelementptr inbounds %struct.ref_s, ptr %6, i32 0, i32 0\l  %8 = getelementptr inbounds %struct.tas_s, ptr %7, i32 0, i32 0\l  %9 = getelementptr inbounds i8, ptr %8, i64 1\l  %10 = load i8, ptr %9, align 1\l  %11 = zext i8 %10 to i32\l  %12 = icmp eq i32 %11, 11\l  br i1 %12, label %16, label %13\l|{<s0>T|<s1>F}}"];
	Node0x600003b96580:s0 -> Node0x600003b96620[tooltip="1 -> 16\nProbability 50.00%" ];
	Node0x600003b96580:s1 -> Node0x600003b965d0[tooltip="1 -> 13\nProbability 50.00%" ];
	Node0x600003b965d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{13:\l|  %14 = load ptr, ptr %3, align 8\l  %15 = call i32 @check_type_failed(ptr noundef %14)\l  store i32 %15, ptr %2, align 4\l  br label %62\l}"];
	Node0x600003b965d0 -> Node0x600003b96850[tooltip="13 -> 62\nProbability 100.00%" ];
	Node0x600003b96620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{16:\l|  %17 = load ptr, ptr %3, align 8\l  %18 = getelementptr inbounds %struct.ref_s, ptr %17, i32 0, i32 1\l  %19 = load i64, ptr %18, align 8\l  %20 = load ptr, ptr %3, align 8\l  %21 = load ptr, ptr getelementptr inbounds (%struct.ref_stack_s, ptr\l... @o_stack, i32 0, i32 1), align 8\l  %22 = ptrtoint ptr %20 to i64\l  %23 = ptrtoint ptr %21 to i64\l  %24 = sub i64 %22, %23\l  %25 = sdiv exact i64 %24, 16\l  %26 = icmp uge i64 %19, %25\l  br i1 %26, label %27, label %45\l|{<s0>T|<s1>F}}"];
	Node0x600003b96620:s0 -> Node0x600003b96670[tooltip="16 -> 27\nProbability 50.00%" ];
	Node0x600003b96620:s1 -> Node0x600003b96800[tooltip="16 -> 45\nProbability 50.00%" ];
	Node0x600003b96670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{27:\l|  %28 = load ptr, ptr %3, align 8\l  %29 = getelementptr inbounds %struct.ref_s, ptr %28, i32 0, i32 1\l  %30 = load i64, ptr %29, align 8\l  %31 = icmp slt i64 %30, 0\l  br i1 %31, label %32, label %33\l|{<s0>T|<s1>F}}"];
	Node0x600003b96670:s0 -> Node0x600003b966c0[tooltip="27 -> 32\nProbability 37.50%" ];
	Node0x600003b96670:s1 -> Node0x600003b96710[tooltip="27 -> 33\nProbability 62.50%" ];
	Node0x600003b966c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{32:\l|  store i32 -15, ptr %2, align 4\l  br label %62\l}"];
	Node0x600003b966c0 -> Node0x600003b96850[tooltip="32 -> 62\nProbability 100.00%" ];
	Node0x600003b96710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{33:\l|  %34 = load ptr, ptr %3, align 8\l  %35 = getelementptr inbounds %struct.ref_s, ptr %34, i32 0, i32 1\l  %36 = load i64, ptr %35, align 8\l  %37 = add nsw i64 %36, 1\l  %38 = call ptr @ref_stack_index(ptr noundef @o_stack, i64 noundef %37)\l  store ptr %38, ptr %5, align 8\l  %39 = load ptr, ptr %5, align 8\l  %40 = icmp eq ptr %39, null\l  br i1 %40, label %41, label %42\l|{<s0>T|<s1>F}}"];
	Node0x600003b96710:s0 -> Node0x600003b96760[tooltip="33 -> 41\nProbability 37.50%" ];
	Node0x600003b96710:s1 -> Node0x600003b967b0[tooltip="33 -> 42\nProbability 62.50%" ];
	Node0x600003b96760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{41:\l|  store i32 -15, ptr %2, align 4\l  br label %62\l}"];
	Node0x600003b96760 -> Node0x600003b96850[tooltip="41 -> 62\nProbability 100.00%" ];
	Node0x600003b967b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{42:\l|  %43 = load ptr, ptr %3, align 8\l  %44 = load ptr, ptr %5, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %43, ptr align 8 %44, i64 16,\l... i1 false)\l  store i32 0, ptr %2, align 4\l  br label %62\l}"];
	Node0x600003b967b0 -> Node0x600003b96850[tooltip="42 -> 62\nProbability 100.00%" ];
	Node0x600003b96800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{45:\l|  %46 = load ptr, ptr %3, align 8\l  %47 = load ptr, ptr %3, align 8\l  %48 = getelementptr inbounds %struct.ref_s, ptr %47, i32 0, i32 1\l  %49 = load i64, ptr %48, align 8\l  %50 = trunc i64 %49 to i32\l  %51 = xor i32 %50, -1\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds %struct.ref_s, ptr %46, i64 %52\l  store ptr %53, ptr %4, align 8\l  %54 = load ptr, ptr %3, align 8\l  %55 = getelementptr inbounds %struct.ref_s, ptr %54, i32 0, i32 1\l  %56 = load ptr, ptr %4, align 8\l  %57 = getelementptr inbounds %struct.ref_s, ptr %56, i32 0, i32 1\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %57, i64 8, i1\l... false)\l  %58 = load ptr, ptr %3, align 8\l  %59 = getelementptr inbounds %struct.ref_s, ptr %58, i32 0, i32 0\l  %60 = load ptr, ptr %4, align 8\l  %61 = getelementptr inbounds %struct.ref_s, ptr %60, i32 0, i32 0\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %59, ptr align 8 %61, i64 4, i1\l... false)\l  store i32 0, ptr %2, align 4\l  br label %62\l}"];
	Node0x600003b96800 -> Node0x600003b96850[tooltip="45 -> 62\nProbability 100.00%" ];
	Node0x600003b96850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{62:\l|  %63 = load i32, ptr %2, align 4\l  ret i32 %63\l}"];
}
