digraph "CFG for 'ref_to_string' function" {
	label="CFG for 'ref_to_string' function";

	Node0x6000035967b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca ptr, align 8\l  store ptr %0, ptr %5, align 8\l  store ptr %1, ptr %6, align 8\l  store ptr %2, ptr %7, align 8\l  %10 = load ptr, ptr %5, align 8\l  %11 = getelementptr inbounds %struct.ref_s, ptr %10, i32 0, i32 0\l  %12 = getelementptr inbounds %struct.tas_s, ptr %11, i32 0, i32 1\l  %13 = load i16, ptr %12, align 2\l  %14 = zext i16 %13 to i32\l  store i32 %14, ptr %8, align 4\l  %15 = load ptr, ptr %6, align 8\l  %16 = getelementptr inbounds %struct.gs_memory_s, ptr %15, i32 0, i32 0\l  %17 = getelementptr inbounds %struct.gs_memory_procs_s, ptr %16, i32 0, i32\l... 12\l  %18 = load ptr, ptr %17, align 8\l  %19 = load ptr, ptr %6, align 8\l  %20 = load i32, ptr %8, align 4\l  %21 = add i32 %20, 1\l  %22 = load ptr, ptr %7, align 8\l  %23 = call ptr %18(ptr noundef %19, i32 noundef %21, ptr noundef %22)\l  store ptr %23, ptr %9, align 8\l  %24 = load ptr, ptr %9, align 8\l  %25 = icmp eq ptr %24, null\l  br i1 %25, label %26, label %27\l|{<s0>T|<s1>F}}"];
	Node0x6000035967b0:s0 -> Node0x600003596800[tooltip="3 -> 26\nProbability 37.50%" ];
	Node0x6000035967b0:s1 -> Node0x600003596850[tooltip="3 -> 27\nProbability 62.50%" ];
	Node0x600003596800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{26:\l|  store ptr null, ptr %4, align 8\l  br label %42\l}"];
	Node0x600003596800 -> Node0x6000035968a0[tooltip="26 -> 42\nProbability 100.00%" ];
	Node0x600003596850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{27:\l|  %28 = load ptr, ptr %9, align 8\l  %29 = load ptr, ptr %5, align 8\l  %30 = getelementptr inbounds %struct.ref_s, ptr %29, i32 0, i32 1\l  %31 = load ptr, ptr %30, align 8\l  %32 = load i32, ptr %8, align 4\l  %33 = zext i32 %32 to i64\l  %34 = load ptr, ptr %9, align 8\l  %35 = call i64 @llvm.objectsize.i64.p0(ptr %34, i1 false, i1 true, i1 false)\l  %36 = call ptr @__memcpy_chk(ptr noundef %28, ptr noundef %31, i64 noundef\l... %33, i64 noundef %35) #5\l  %37 = load ptr, ptr %9, align 8\l  %38 = load i32, ptr %8, align 4\l  %39 = zext i32 %38 to i64\l  %40 = getelementptr inbounds i8, ptr %37, i64 %39\l  store i8 0, ptr %40, align 1\l  %41 = load ptr, ptr %9, align 8\l  store ptr %41, ptr %4, align 8\l  br label %42\l}"];
	Node0x600003596850 -> Node0x6000035968a0[tooltip="27 -> 42\nProbability 100.00%" ];
	Node0x6000035968a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{42:\l|  %43 = load ptr, ptr %4, align 8\l  ret ptr %43\l}"];
}
