digraph "CFG for 'bit_map_color_rgb' function" {
	label="CFG for 'bit_map_color_rgb' function";

	Node0x600001ede6c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i64, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store i64 %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %17 = load ptr, ptr %4, align 8\l  %18 = getelementptr inbounds %struct.gx_device_s, ptr %17, i32 0, i32 7\l  %19 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %18, i32 0,\l... i32 1\l  %20 = load i32, ptr %19, align 4\l  store i32 %20, ptr %7, align 4\l  %21 = load ptr, ptr %4, align 8\l  %22 = getelementptr inbounds %struct.gx_device_s, ptr %21, i32 0, i32 7\l  %23 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %22, i32 0,\l... i32 0\l  %24 = load i32, ptr %23, align 8\l  store i32 %24, ptr %8, align 4\l  %25 = load i32, ptr %7, align 4\l  %26 = load i32, ptr %8, align 4\l  %27 = sdiv i32 %25, %26\l  store i32 %27, ptr %9, align 4\l  %28 = load i32, ptr %9, align 4\l  %29 = shl i32 1, %28\l  %30 = sub nsw i32 %29, 1\l  store i32 %30, ptr %10, align 4\l  %31 = load i32, ptr %8, align 4\l  switch i32 %31, label %177 [\l    i32 1, label %32\l    i32 3, label %57\l    i32 4, label %96\l  ]\l|{<s0>def|<s1>1|<s2>3|<s3>4}}"];
	Node0x600001ede6c0:s0 -> Node0x600001ede8f0[tooltip="3 -> 177\nProbability 25.00%" ];
	Node0x600001ede6c0:s1 -> Node0x600001ede710[tooltip="3 -> 32\nProbability 25.00%" ];
	Node0x600001ede6c0:s2 -> Node0x600001ede850[tooltip="3 -> 57\nProbability 25.00%" ];
	Node0x600001ede6c0:s3 -> Node0x600001ede8a0[tooltip="3 -> 96\nProbability 25.00%" ];
	Node0x600001ede710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{32:\l|  %33 = load i32, ptr %7, align 4\l  %34 = icmp eq i32 %33, 1\l  br i1 %34, label %35, label %40\l|{<s0>T|<s1>F}}"];
	Node0x600001ede710:s0 -> Node0x600001ede760[tooltip="32 -> 35\nProbability 50.00%" ];
	Node0x600001ede710:s1 -> Node0x600001ede7b0[tooltip="32 -> 40\nProbability 50.00%" ];
	Node0x600001ede760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{35:\l|  %36 = load i64, ptr %5, align 8\l  %37 = icmp ne i64 %36, 0\l  %38 = zext i1 %37 to i64\l  %39 = select i1 %37, i32 0, i32 65535\l  br label %48\l}"];
	Node0x600001ede760 -> Node0x600001ede800[tooltip="35 -> 48\nProbability 100.00%" ];
	Node0x600001ede7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{40:\l|  %41 = load i64, ptr %5, align 8\l  %42 = mul i64 %41, 65535\l  %43 = load i32, ptr %10, align 4\l  %44 = zext i32 %43 to i64\l  %45 = udiv i64 %42, %44\l  %46 = trunc i64 %45 to i16\l  %47 = zext i16 %46 to i32\l  br label %48\l}"];
	Node0x600001ede7b0 -> Node0x600001ede800[tooltip="40 -> 48\nProbability 100.00%" ];
	Node0x600001ede800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{48:\l|  %49 = phi i32 [ %39, %35 ], [ %47, %40 ]\l  %50 = trunc i32 %49 to i16\l  %51 = load ptr, ptr %6, align 8\l  %52 = getelementptr inbounds i16, ptr %51, i64 2\l  store i16 %50, ptr %52, align 2\l  %53 = load ptr, ptr %6, align 8\l  %54 = getelementptr inbounds i16, ptr %53, i64 1\l  store i16 %50, ptr %54, align 2\l  %55 = load ptr, ptr %6, align 8\l  %56 = getelementptr inbounds i16, ptr %55, i64 0\l  store i16 %50, ptr %56, align 2\l  br label %177\l}"];
	Node0x600001ede800 -> Node0x600001ede8f0[tooltip="48 -> 177\nProbability 100.00%" ];
	Node0x600001ede850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{57:\l|  %58 = load i64, ptr %5, align 8\l  store i64 %58, ptr %11, align 8\l  %59 = load i64, ptr %11, align 8\l  %60 = load i32, ptr %10, align 4\l  %61 = zext i32 %60 to i64\l  %62 = and i64 %59, %61\l  %63 = mul i64 %62, 65535\l  %64 = load i32, ptr %10, align 4\l  %65 = zext i32 %64 to i64\l  %66 = udiv i64 %63, %65\l  %67 = trunc i64 %66 to i16\l  %68 = load ptr, ptr %6, align 8\l  %69 = getelementptr inbounds i16, ptr %68, i64 2\l  store i16 %67, ptr %69, align 2\l  %70 = load i32, ptr %9, align 4\l  %71 = load i64, ptr %11, align 8\l  %72 = zext i32 %70 to i64\l  %73 = lshr i64 %71, %72\l  store i64 %73, ptr %11, align 8\l  %74 = load i64, ptr %11, align 8\l  %75 = load i32, ptr %10, align 4\l  %76 = zext i32 %75 to i64\l  %77 = and i64 %74, %76\l  %78 = mul i64 %77, 65535\l  %79 = load i32, ptr %10, align 4\l  %80 = zext i32 %79 to i64\l  %81 = udiv i64 %78, %80\l  %82 = trunc i64 %81 to i16\l  %83 = load ptr, ptr %6, align 8\l  %84 = getelementptr inbounds i16, ptr %83, i64 1\l  store i16 %82, ptr %84, align 2\l  %85 = load i64, ptr %11, align 8\l  %86 = load i32, ptr %9, align 4\l  %87 = zext i32 %86 to i64\l  %88 = lshr i64 %85, %87\l  %89 = mul i64 %88, 65535\l  %90 = load i32, ptr %10, align 4\l  %91 = zext i32 %90 to i64\l  %92 = udiv i64 %89, %91\l  %93 = trunc i64 %92 to i16\l  %94 = load ptr, ptr %6, align 8\l  %95 = getelementptr inbounds i16, ptr %94, i64 0\l  store i16 %93, ptr %95, align 2\l  br label %177\l}"];
	Node0x600001ede850 -> Node0x600001ede8f0[tooltip="57 -> 177\nProbability 100.00%" ];
	Node0x600001ede8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{96:\l|  %97 = load i64, ptr %5, align 8\l  store i64 %97, ptr %12, align 8\l  %98 = load i64, ptr %12, align 8\l  %99 = load i32, ptr %10, align 4\l  %100 = zext i32 %99 to i64\l  %101 = and i64 %98, %100\l  %102 = trunc i64 %101 to i32\l  store i32 %102, ptr %16, align 4\l  %103 = load i32, ptr %9, align 4\l  %104 = load i64, ptr %12, align 8\l  %105 = zext i32 %103 to i64\l  %106 = lshr i64 %104, %105\l  store i64 %106, ptr %12, align 8\l  %107 = load i64, ptr %12, align 8\l  %108 = load i32, ptr %10, align 4\l  %109 = zext i32 %108 to i64\l  %110 = and i64 %107, %109\l  %111 = trunc i64 %110 to i32\l  store i32 %111, ptr %15, align 4\l  %112 = load i32, ptr %9, align 4\l  %113 = load i64, ptr %12, align 8\l  %114 = zext i32 %112 to i64\l  %115 = lshr i64 %113, %114\l  store i64 %115, ptr %12, align 8\l  %116 = load i64, ptr %12, align 8\l  %117 = load i32, ptr %10, align 4\l  %118 = zext i32 %117 to i64\l  %119 = and i64 %116, %118\l  %120 = trunc i64 %119 to i32\l  store i32 %120, ptr %14, align 4\l  %121 = load i64, ptr %12, align 8\l  %122 = load i32, ptr %9, align 4\l  %123 = zext i32 %122 to i64\l  %124 = lshr i64 %121, %123\l  %125 = trunc i64 %124 to i32\l  store i32 %125, ptr %13, align 4\l  %126 = load i32, ptr %10, align 4\l  %127 = load i32, ptr %13, align 4\l  %128 = sub i32 %126, %127\l  %129 = load i32, ptr %10, align 4\l  %130 = load i32, ptr %16, align 4\l  %131 = sub i32 %129, %130\l  %132 = mul i32 %128, %131\l  %133 = load i32, ptr %10, align 4\l  %134 = udiv i32 %132, %133\l  %135 = zext i32 %134 to i64\l  %136 = mul i64 %135, 65535\l  %137 = load i32, ptr %10, align 4\l  %138 = zext i32 %137 to i64\l  %139 = udiv i64 %136, %138\l  %140 = trunc i64 %139 to i16\l  %141 = load ptr, ptr %6, align 8\l  %142 = getelementptr inbounds i16, ptr %141, i64 0\l  store i16 %140, ptr %142, align 2\l  %143 = load i32, ptr %10, align 4\l  %144 = load i32, ptr %14, align 4\l  %145 = sub i32 %143, %144\l  %146 = load i32, ptr %10, align 4\l  %147 = load i32, ptr %16, align 4\l  %148 = sub i32 %146, %147\l  %149 = mul i32 %145, %148\l  %150 = load i32, ptr %10, align 4\l  %151 = udiv i32 %149, %150\l  %152 = zext i32 %151 to i64\l  %153 = mul i64 %152, 65535\l  %154 = load i32, ptr %10, align 4\l  %155 = zext i32 %154 to i64\l  %156 = udiv i64 %153, %155\l  %157 = trunc i64 %156 to i16\l  %158 = load ptr, ptr %6, align 8\l  %159 = getelementptr inbounds i16, ptr %158, i64 1\l  store i16 %157, ptr %159, align 2\l  %160 = load i32, ptr %10, align 4\l  %161 = load i32, ptr %15, align 4\l  %162 = sub i32 %160, %161\l  %163 = load i32, ptr %10, align 4\l  %164 = load i32, ptr %16, align 4\l  %165 = sub i32 %163, %164\l  %166 = mul i32 %162, %165\l  %167 = load i32, ptr %10, align 4\l  %168 = udiv i32 %166, %167\l  %169 = zext i32 %168 to i64\l  %170 = mul i64 %169, 65535\l  %171 = load i32, ptr %10, align 4\l  %172 = zext i32 %171 to i64\l  %173 = udiv i64 %170, %172\l  %174 = trunc i64 %173 to i16\l  %175 = load ptr, ptr %6, align 8\l  %176 = getelementptr inbounds i16, ptr %175, i64 2\l  store i16 %174, ptr %176, align 2\l  br label %177\l}"];
	Node0x600001ede8a0 -> Node0x600001ede8f0[tooltip="96 -> 177\nProbability 100.00%" ];
	Node0x600001ede8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{177:\l|  ret i32 0\l}"];
}
