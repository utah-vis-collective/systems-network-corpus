digraph "CFG for 'rop_texture_copy_mono' function" {
	label="CFG for 'rop_texture_copy_mono' function";

	Node0x600001f04eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{11:\l|  %12 = alloca ptr, align 8\l  %13 = alloca ptr, align 8\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i64, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i64, align 8\l  %22 = alloca i64, align 8\l  %23 = alloca %struct.gx_rop_source_s, align 8\l  %24 = alloca i32, align 4\l  store ptr %0, ptr %12, align 8\l  store ptr %1, ptr %13, align 8\l  store i32 %2, ptr %14, align 4\l  store i32 %3, ptr %15, align 4\l  store i64 %4, ptr %16, align 8\l  store i32 %5, ptr %17, align 4\l  store i32 %6, ptr %18, align 4\l  store i32 %7, ptr %19, align 4\l  store i32 %8, ptr %20, align 4\l  store i64 %9, ptr %21, align 8\l  store i64 %10, ptr %22, align 8\l  %25 = load ptr, ptr %12, align 8\l  %26 = getelementptr inbounds %struct.gx_device_rop_texture_s, ptr %25, i32\l... 0, i32 23\l  %27 = load i32, ptr %26, align 8\l  store i32 %27, ptr %24, align 4\l  %28 = load ptr, ptr %13, align 8\l  %29 = getelementptr inbounds %struct.gx_rop_source_s, ptr %23, i32 0, i32 0\l  store ptr %28, ptr %29, align 8\l  %30 = load i32, ptr %14, align 4\l  %31 = getelementptr inbounds %struct.gx_rop_source_s, ptr %23, i32 0, i32 1\l  store i32 %30, ptr %31, align 8\l  %32 = load i32, ptr %15, align 4\l  %33 = getelementptr inbounds %struct.gx_rop_source_s, ptr %23, i32 0, i32 2\l  store i32 %32, ptr %33, align 4\l  %34 = load i64, ptr %16, align 8\l  %35 = getelementptr inbounds %struct.gx_rop_source_s, ptr %23, i32 0, i32 3\l  store i64 %34, ptr %35, align 8\l  %36 = load i64, ptr %21, align 8\l  %37 = getelementptr inbounds %struct.gx_rop_source_s, ptr %23, i32 0, i32 4\l  %38 = getelementptr inbounds [2 x i64], ptr %37, i64 0, i64 0\l  store i64 %36, ptr %38, align 8\l  %39 = load i64, ptr %22, align 8\l  %40 = getelementptr inbounds %struct.gx_rop_source_s, ptr %23, i32 0, i32 4\l  %41 = getelementptr inbounds [2 x i64], ptr %40, i64 0, i64 1\l  store i64 %39, ptr %41, align 8\l  %42 = getelementptr inbounds %struct.gx_rop_source_s, ptr %23, i32 0, i32 5\l  store i32 1, ptr %42, align 8\l  %43 = load i64, ptr %21, align 8\l  %44 = icmp eq i64 %43, -1\l  br i1 %44, label %45, label %49\l|{<s0>T|<s1>F}}"];
	Node0x600001f04eb0:s0 -> Node0x600001f04f00[tooltip="11 -> 45\nProbability 37.50%" ];
	Node0x600001f04eb0:s1 -> Node0x600001f04f50[tooltip="11 -> 49\nProbability 62.50%" ];
	Node0x600001f04f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{45:\l|  %46 = load i32, ptr %24, align 4\l  %47 = and i32 %46, -52\l  %48 = or i32 %47, 34\l  store i32 %48, ptr %24, align 4\l  br label %57\l}"];
	Node0x600001f04f00 -> Node0x600001f05040[tooltip="45 -> 57\nProbability 100.00%" ];
	Node0x600001f04f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{49:\l|  %50 = load i64, ptr %22, align 8\l  %51 = icmp eq i64 %50, -1\l  br i1 %51, label %52, label %56\l|{<s0>T|<s1>F}}"];
	Node0x600001f04f50:s0 -> Node0x600001f04fa0[tooltip="49 -> 52\nProbability 37.50%" ];
	Node0x600001f04f50:s1 -> Node0x600001f04ff0[tooltip="49 -> 56\nProbability 62.50%" ];
	Node0x600001f04fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{52:\l|  %53 = load i32, ptr %24, align 4\l  %54 = and i32 %53, -205\l  %55 = or i32 %54, 136\l  store i32 %55, ptr %24, align 4\l  br label %56\l}"];
	Node0x600001f04fa0 -> Node0x600001f04ff0[tooltip="52 -> 56\nProbability 100.00%" ];
	Node0x600001f04ff0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{56:\l|  br label %57\l}"];
	Node0x600001f04ff0 -> Node0x600001f05040[tooltip="56 -> 57\nProbability 100.00%" ];
	Node0x600001f05040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{57:\l|  %58 = load ptr, ptr %12, align 8\l  %59 = getelementptr inbounds %struct.gx_device_rop_texture_s, ptr %58, i32\l... 0, i32 24\l  %60 = load ptr, ptr %59, align 8\l  %61 = getelementptr inbounds %struct.gx_device_color_s, ptr %60, i32 0, i32 0\l  %62 = load ptr, ptr %61, align 8\l  %63 = getelementptr inbounds %struct.gx_device_color_procs_s, ptr %62, i32\l... 0, i32 1\l  %64 = load ptr, ptr %63, align 8\l  %65 = load ptr, ptr %12, align 8\l  %66 = getelementptr inbounds %struct.gx_device_rop_texture_s, ptr %65, i32\l... 0, i32 24\l  %67 = load ptr, ptr %66, align 8\l  %68 = load i32, ptr %17, align 4\l  %69 = load i32, ptr %18, align 4\l  %70 = load i32, ptr %19, align 4\l  %71 = load i32, ptr %20, align 4\l  %72 = load ptr, ptr %12, align 8\l  %73 = getelementptr inbounds %struct.gx_device_rop_texture_s, ptr %72, i32\l... 0, i32 22\l  %74 = load ptr, ptr %73, align 8\l  %75 = load i32, ptr %24, align 4\l  %76 = call i32 %64(ptr noundef %67, i32 noundef %68, i32 noundef %69, i32\l... noundef %70, i32 noundef %71, ptr noundef %74, i32 noundef %75, ptr noundef\l... %23)\l  ret i32 %76\l}"];
}
