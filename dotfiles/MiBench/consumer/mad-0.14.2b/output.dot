digraph "CFG for 'output' function" {
	label="CFG for 'output' function";

	Node0x6000001665d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store ptr %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %12 = load ptr, ptr %6, align 8\l  %13 = getelementptr inbounds %struct.mad_pcm, ptr %12, i32 0, i32 1\l  %14 = load i16, ptr %13, align 4\l  %15 = zext i16 %14 to i32\l  store i32 %15, ptr %7, align 4\l  %16 = load ptr, ptr %6, align 8\l  %17 = getelementptr inbounds %struct.mad_pcm, ptr %16, i32 0, i32 2\l  %18 = load i16, ptr %17, align 2\l  %19 = zext i16 %18 to i32\l  store i32 %19, ptr %8, align 4\l  %20 = load ptr, ptr %6, align 8\l  %21 = getelementptr inbounds %struct.mad_pcm, ptr %20, i32 0, i32 3\l  %22 = getelementptr inbounds [2 x [1152 x i32]], ptr %21, i64 0, i64 0\l  %23 = getelementptr inbounds [1152 x i32], ptr %22, i64 0, i64 0\l  store ptr %23, ptr %9, align 8\l  %24 = load ptr, ptr %6, align 8\l  %25 = getelementptr inbounds %struct.mad_pcm, ptr %24, i32 0, i32 3\l  %26 = getelementptr inbounds [2 x [1152 x i32]], ptr %25, i64 0, i64 1\l  %27 = getelementptr inbounds [1152 x i32], ptr %26, i64 0, i64 0\l  store ptr %27, ptr %10, align 8\l  br label %28\l}"];
	Node0x6000001665d0 -> Node0x600000166620[tooltip="3 -> 28\nProbability 100.00%" ];
	Node0x600000166620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{28:\l|  %29 = load i32, ptr %8, align 4\l  %30 = add i32 %29, -1\l  store i32 %30, ptr %8, align 4\l  %31 = icmp ne i32 %29, 0\l  br i1 %31, label %32, label %61\l|{<s0>T|<s1>F}}"];
	Node0x600000166620:s0 -> Node0x600000166670[tooltip="28 -> 32\nProbability 96.88%" ];
	Node0x600000166620:s1 -> Node0x600000166760[tooltip="28 -> 61\nProbability 3.12%" ];
	Node0x600000166670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{32:\l|  %33 = load ptr, ptr %9, align 8\l  %34 = getelementptr inbounds i32, ptr %33, i32 1\l  store ptr %34, ptr %9, align 8\l  %35 = load i32, ptr %33, align 4\l  %36 = call i32 @scale(i32 noundef %35)\l  store i32 %36, ptr %11, align 4\l  %37 = load i32, ptr %11, align 4\l  %38 = ashr i32 %37, 0\l  %39 = and i32 %38, 255\l  %40 = call i32 @putchar(i32 noundef %39)\l  %41 = load i32, ptr %11, align 4\l  %42 = ashr i32 %41, 8\l  %43 = and i32 %42, 255\l  %44 = call i32 @putchar(i32 noundef %43)\l  %45 = load i32, ptr %7, align 4\l  %46 = icmp eq i32 %45, 2\l  br i1 %46, label %47, label %60\l|{<s0>T|<s1>F}}"];
	Node0x600000166670:s0 -> Node0x6000001666c0[tooltip="32 -> 47\nProbability 50.00%" ];
	Node0x600000166670:s1 -> Node0x600000166710[tooltip="32 -> 60\nProbability 50.00%" ];
	Node0x6000001666c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{47:\l|  %48 = load ptr, ptr %10, align 8\l  %49 = getelementptr inbounds i32, ptr %48, i32 1\l  store ptr %49, ptr %10, align 8\l  %50 = load i32, ptr %48, align 4\l  %51 = call i32 @scale(i32 noundef %50)\l  store i32 %51, ptr %11, align 4\l  %52 = load i32, ptr %11, align 4\l  %53 = ashr i32 %52, 0\l  %54 = and i32 %53, 255\l  %55 = call i32 @putchar(i32 noundef %54)\l  %56 = load i32, ptr %11, align 4\l  %57 = ashr i32 %56, 8\l  %58 = and i32 %57, 255\l  %59 = call i32 @putchar(i32 noundef %58)\l  br label %60\l}"];
	Node0x6000001666c0 -> Node0x600000166710[tooltip="47 -> 60\nProbability 100.00%" ];
	Node0x600000166710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{60:\l|  br label %28, !llvm.loop !6\l}"];
	Node0x600000166710 -> Node0x600000166620[tooltip="60 -> 28\nProbability 100.00%" ];
	Node0x600000166760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{61:\l|  ret i32 0\l}"];
}
