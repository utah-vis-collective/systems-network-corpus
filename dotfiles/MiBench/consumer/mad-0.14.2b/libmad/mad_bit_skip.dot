digraph "CFG for 'mad_bit_skip' function" {
	label="CFG for 'mad_bit_skip' function";

	Node0x600001c16260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca i32, align 4\l  store ptr %0, ptr %3, align 8\l  store i32 %1, ptr %4, align 4\l  %5 = load i32, ptr %4, align 4\l  %6 = udiv i32 %5, 8\l  %7 = load ptr, ptr %3, align 8\l  %8 = getelementptr inbounds %struct.mad_bitptr, ptr %7, i32 0, i32 0\l  %9 = load ptr, ptr %8, align 8\l  %10 = zext i32 %6 to i64\l  %11 = getelementptr inbounds i8, ptr %9, i64 %10\l  store ptr %11, ptr %8, align 8\l  %12 = load i32, ptr %4, align 4\l  %13 = urem i32 %12, 8\l  %14 = load ptr, ptr %3, align 8\l  %15 = getelementptr inbounds %struct.mad_bitptr, ptr %14, i32 0, i32 2\l  %16 = load i16, ptr %15, align 2\l  %17 = zext i16 %16 to i32\l  %18 = sub i32 %17, %13\l  %19 = trunc i32 %18 to i16\l  store i16 %19, ptr %15, align 2\l  %20 = load ptr, ptr %3, align 8\l  %21 = getelementptr inbounds %struct.mad_bitptr, ptr %20, i32 0, i32 2\l  %22 = load i16, ptr %21, align 2\l  %23 = zext i16 %22 to i32\l  %24 = icmp sgt i32 %23, 8\l  br i1 %24, label %25, label %36\l|{<s0>T|<s1>F}}"];
	Node0x600001c16260:s0 -> Node0x600001c162b0[tooltip="2 -> 25\nProbability 50.00%" ];
	Node0x600001c16260:s1 -> Node0x600001c16300[tooltip="2 -> 36\nProbability 50.00%" ];
	Node0x600001c162b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{25:\l|  %26 = load ptr, ptr %3, align 8\l  %27 = getelementptr inbounds %struct.mad_bitptr, ptr %26, i32 0, i32 0\l  %28 = load ptr, ptr %27, align 8\l  %29 = getelementptr inbounds i8, ptr %28, i32 1\l  store ptr %29, ptr %27, align 8\l  %30 = load ptr, ptr %3, align 8\l  %31 = getelementptr inbounds %struct.mad_bitptr, ptr %30, i32 0, i32 2\l  %32 = load i16, ptr %31, align 2\l  %33 = zext i16 %32 to i32\l  %34 = add nsw i32 %33, 8\l  %35 = trunc i32 %34 to i16\l  store i16 %35, ptr %31, align 2\l  br label %36\l}"];
	Node0x600001c162b0 -> Node0x600001c16300[tooltip="25 -> 36\nProbability 100.00%" ];
	Node0x600001c16300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{36:\l|  %37 = load ptr, ptr %3, align 8\l  %38 = getelementptr inbounds %struct.mad_bitptr, ptr %37, i32 0, i32 2\l  %39 = load i16, ptr %38, align 2\l  %40 = zext i16 %39 to i32\l  %41 = icmp slt i32 %40, 8\l  br i1 %41, label %42, label %50\l|{<s0>T|<s1>F}}"];
	Node0x600001c16300:s0 -> Node0x600001c16350[tooltip="36 -> 42\nProbability 50.00%" ];
	Node0x600001c16300:s1 -> Node0x600001c163a0[tooltip="36 -> 50\nProbability 50.00%" ];
	Node0x600001c16350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{42:\l|  %43 = load ptr, ptr %3, align 8\l  %44 = getelementptr inbounds %struct.mad_bitptr, ptr %43, i32 0, i32 0\l  %45 = load ptr, ptr %44, align 8\l  %46 = load i8, ptr %45, align 1\l  %47 = zext i8 %46 to i16\l  %48 = load ptr, ptr %3, align 8\l  %49 = getelementptr inbounds %struct.mad_bitptr, ptr %48, i32 0, i32 1\l  store i16 %47, ptr %49, align 8\l  br label %50\l}"];
	Node0x600001c16350 -> Node0x600001c163a0[tooltip="42 -> 50\nProbability 100.00%" ];
	Node0x600001c163a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{50:\l|  ret void\l}"];
}
