digraph "CFG for 'III_freqinver' function" {
	label="CFG for 'III_freqinver' function";

	Node0x600001eb8050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  store ptr %0, ptr %3, align 8\l  store i32 %1, ptr %4, align 4\l  %8 = load ptr, ptr %3, align 8\l  %9 = getelementptr inbounds [32 x i64], ptr %8, i64 1\l  %10 = load i32, ptr %4, align 4\l  %11 = zext i32 %10 to i64\l  %12 = getelementptr inbounds [32 x i64], ptr %9, i64 0, i64 %11\l  %13 = load i64, ptr %12, align 8\l  store i64 %13, ptr %6, align 8\l  %14 = load ptr, ptr %3, align 8\l  %15 = getelementptr inbounds [32 x i64], ptr %14, i64 3\l  %16 = load i32, ptr %4, align 4\l  %17 = zext i32 %16 to i64\l  %18 = getelementptr inbounds [32 x i64], ptr %15, i64 0, i64 %17\l  %19 = load i64, ptr %18, align 8\l  store i64 %19, ptr %7, align 8\l  store i32 1, ptr %5, align 4\l  br label %20\l}"];
	Node0x600001eb8050 -> Node0x600001eb80a0[tooltip="2 -> 20\nProbability 100.00%" ];
	Node0x600001eb80a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{20:\l|  %21 = load i32, ptr %5, align 4\l  %22 = icmp ult i32 %21, 13\l  br i1 %22, label %23, label %65\l|{<s0>T|<s1>F}}"];
	Node0x600001eb80a0:s0 -> Node0x600001eb80f0[tooltip="20 -> 23\nProbability 96.88%" ];
	Node0x600001eb80a0:s1 -> Node0x600001eb8190[tooltip="20 -> 65\nProbability 3.12%" ];
	Node0x600001eb80f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{23:\l|  %24 = load i64, ptr %6, align 8\l  %25 = sub nsw i64 0, %24\l  %26 = load ptr, ptr %3, align 8\l  %27 = load i32, ptr %5, align 4\l  %28 = add i32 %27, 0\l  %29 = zext i32 %28 to i64\l  %30 = getelementptr inbounds [32 x i64], ptr %26, i64 %29\l  %31 = load i32, ptr %4, align 4\l  %32 = zext i32 %31 to i64\l  %33 = getelementptr inbounds [32 x i64], ptr %30, i64 0, i64 %32\l  store i64 %25, ptr %33, align 8\l  %34 = load ptr, ptr %3, align 8\l  %35 = load i32, ptr %5, align 4\l  %36 = add i32 %35, 4\l  %37 = zext i32 %36 to i64\l  %38 = getelementptr inbounds [32 x i64], ptr %34, i64 %37\l  %39 = load i32, ptr %4, align 4\l  %40 = zext i32 %39 to i64\l  %41 = getelementptr inbounds [32 x i64], ptr %38, i64 0, i64 %40\l  %42 = load i64, ptr %41, align 8\l  store i64 %42, ptr %6, align 8\l  %43 = load i64, ptr %7, align 8\l  %44 = sub nsw i64 0, %43\l  %45 = load ptr, ptr %3, align 8\l  %46 = load i32, ptr %5, align 4\l  %47 = add i32 %46, 2\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds [32 x i64], ptr %45, i64 %48\l  %50 = load i32, ptr %4, align 4\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds [32 x i64], ptr %49, i64 0, i64 %51\l  store i64 %44, ptr %52, align 8\l  %53 = load ptr, ptr %3, align 8\l  %54 = load i32, ptr %5, align 4\l  %55 = add i32 %54, 6\l  %56 = zext i32 %55 to i64\l  %57 = getelementptr inbounds [32 x i64], ptr %53, i64 %56\l  %58 = load i32, ptr %4, align 4\l  %59 = zext i32 %58 to i64\l  %60 = getelementptr inbounds [32 x i64], ptr %57, i64 0, i64 %59\l  %61 = load i64, ptr %60, align 8\l  store i64 %61, ptr %7, align 8\l  br label %62\l}"];
	Node0x600001eb80f0 -> Node0x600001eb8140[tooltip="23 -> 62\nProbability 100.00%" ];
	Node0x600001eb8140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{62:\l|  %63 = load i32, ptr %5, align 4\l  %64 = add i32 %63, 4\l  store i32 %64, ptr %5, align 4\l  br label %20\l}"];
	Node0x600001eb8140 -> Node0x600001eb80a0[tooltip="62 -> 20\nProbability 100.00%" ];
	Node0x600001eb8190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{65:\l|  %66 = load i64, ptr %6, align 8\l  %67 = sub nsw i64 0, %66\l  %68 = load ptr, ptr %3, align 8\l  %69 = getelementptr inbounds [32 x i64], ptr %68, i64 13\l  %70 = load i32, ptr %4, align 4\l  %71 = zext i32 %70 to i64\l  %72 = getelementptr inbounds [32 x i64], ptr %69, i64 0, i64 %71\l  store i64 %67, ptr %72, align 8\l  %73 = load ptr, ptr %3, align 8\l  %74 = getelementptr inbounds [32 x i64], ptr %73, i64 17\l  %75 = load i32, ptr %4, align 4\l  %76 = zext i32 %75 to i64\l  %77 = getelementptr inbounds [32 x i64], ptr %74, i64 0, i64 %76\l  %78 = load i64, ptr %77, align 8\l  store i64 %78, ptr %6, align 8\l  %79 = load i64, ptr %7, align 8\l  %80 = sub nsw i64 0, %79\l  %81 = load ptr, ptr %3, align 8\l  %82 = getelementptr inbounds [32 x i64], ptr %81, i64 15\l  %83 = load i32, ptr %4, align 4\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds [32 x i64], ptr %82, i64 0, i64 %84\l  store i64 %80, ptr %85, align 8\l  %86 = load i64, ptr %6, align 8\l  %87 = sub nsw i64 0, %86\l  %88 = load ptr, ptr %3, align 8\l  %89 = getelementptr inbounds [32 x i64], ptr %88, i64 17\l  %90 = load i32, ptr %4, align 4\l  %91 = zext i32 %90 to i64\l  %92 = getelementptr inbounds [32 x i64], ptr %89, i64 0, i64 %91\l  store i64 %87, ptr %92, align 8\l  ret void\l}"];
}
