digraph "CFG for 'I_sample' function" {
	label="CFG for 'I_sample' function";

	Node0x600002615ae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  store ptr %0, ptr %3, align 8\l  store i32 %1, ptr %4, align 4\l  %9 = load ptr, ptr %3, align 8\l  %10 = load i32, ptr %4, align 4\l  %11 = call i64 @mad_bit_read(ptr noundef %9, i32 noundef %10)\l  store i64 %11, ptr %5, align 8\l  %12 = load i32, ptr %4, align 4\l  %13 = sub i32 %12, 1\l  %14 = shl i32 1, %13\l  %15 = sext i32 %14 to i64\l  %16 = load i64, ptr %5, align 8\l  %17 = xor i64 %16, %15\l  store i64 %17, ptr %5, align 8\l  %18 = load i64, ptr %5, align 8\l  %19 = load i32, ptr %4, align 4\l  %20 = sub i32 %19, 1\l  %21 = shl i32 1, %20\l  %22 = sext i32 %21 to i64\l  %23 = and i64 %18, %22\l  %24 = sub nsw i64 0, %23\l  %25 = load i64, ptr %5, align 8\l  %26 = or i64 %25, %24\l  store i64 %26, ptr %5, align 8\l  %27 = load i32, ptr %4, align 4\l  %28 = sub i32 %27, 1\l  %29 = sub i32 28, %28\l  %30 = load i64, ptr %5, align 8\l  %31 = zext i32 %29 to i64\l  %32 = shl i64 %30, %31\l  store i64 %32, ptr %5, align 8\l  %33 = load i32, ptr %4, align 4\l  %34 = sub i32 %33, 1\l  %35 = zext i32 %34 to i64\l  %36 = ashr i64 268435456, %35\l  %37 = load i64, ptr %5, align 8\l  %38 = add nsw i64 %37, %36\l  store i64 %38, ptr %5, align 8\l  %39 = load i64, ptr %6, align 8\l  %40 = load i64, ptr %7, align 8\l  %41 = load i64, ptr %5, align 8\l  %42 = load i32, ptr %4, align 4\l  %43 = sub i32 %42, 2\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds [14 x i64], ptr @linear_table, i64 0, i64 %44\l  %46 = load i64, ptr %45, align 8\l  %47 = call i32 @MAD_F_MLX(i64 noundef %39, i64 noundef %40, i64 noundef %41,\l... i64 noundef %46)\l  %48 = load i64, ptr %6, align 8\l  %49 = shl i64 %48, 4\l  %50 = load i64, ptr %7, align 8\l  %51 = lshr i64 %50, 28\l  %52 = or i64 %49, %51\l  store i64 %52, ptr %8, align 8\l  %53 = load i64, ptr %8, align 8\l  ret i64 %53\l}"];
}
