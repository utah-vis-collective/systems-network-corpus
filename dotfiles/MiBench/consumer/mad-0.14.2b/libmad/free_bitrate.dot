digraph "CFG for 'free_bitrate' function" {
	label="CFG for 'free_bitrate' function";

	Node0x600001e80780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{2:\l|  %3 = alloca i32, align 4\l  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca %struct.mad_bitptr, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca ptr, align 8\l  %11 = alloca %struct.mad_stream, align 8\l  %12 = alloca %struct.mad_header, align 8\l  %13 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store ptr %1, ptr %5, align 8\l  store i64 0, ptr %7, align 8\l  store ptr null, ptr %10, align 8\l  %14 = load ptr, ptr %4, align 8\l  %15 = getelementptr inbounds %struct.mad_stream, ptr %14, i32 0, i32 7\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %15, i64 16, i1\l... false)\l  %16 = load ptr, ptr %5, align 8\l  %17 = getelementptr inbounds %struct.mad_header, ptr %16, i32 0, i32 8\l  %18 = load i32, ptr %17, align 8\l  %19 = and i32 %18, 128\l  %20 = icmp ne i32 %19, 0\l  %21 = zext i1 %20 to i64\l  %22 = select i1 %20, i32 1, i32 0\l  store i32 %22, ptr %8, align 4\l  %23 = load ptr, ptr %5, align 8\l  %24 = getelementptr inbounds %struct.mad_header, ptr %23, i32 0, i32 0\l  %25 = load i32, ptr %24, align 8\l  %26 = icmp eq i32 %25, 3\l  br i1 %26, label %27, label %33\l|{<s0>T|<s1>F}}"];
	Node0x600001e80780:s0 -> Node0x600001e807d0[tooltip="2 -> 27\nProbability 50.00%" ];
	Node0x600001e80780:s1 -> Node0x600001e80820[tooltip="2 -> 33\nProbability 50.00%" ];
	Node0x600001e807d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{27:\l|  %28 = load ptr, ptr %5, align 8\l  %29 = getelementptr inbounds %struct.mad_header, ptr %28, i32 0, i32 8\l  %30 = load i32, ptr %29, align 8\l  %31 = and i32 %30, 4096\l  %32 = icmp ne i32 %31, 0\l  br label %33\l}"];
	Node0x600001e807d0 -> Node0x600001e80820[tooltip="27 -> 33\nProbability 100.00%" ];
	Node0x600001e80820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{33:\l|  %34 = phi i1 [ false, %2 ], [ %32, %27 ]\l  %35 = zext i1 %34 to i64\l  %36 = select i1 %34, i32 72, i32 144\l  store i32 %36, ptr %9, align 4\l  br label %37\l}"];
	Node0x600001e80820 -> Node0x600001e80870[tooltip="33 -> 37\nProbability 100.00%" ];
	Node0x600001e80870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{37:\l|  %38 = load ptr, ptr %4, align 8\l  %39 = call i32 @mad_stream_sync(ptr noundef %38)\l  %40 = icmp eq i32 %39, 0\l  br i1 %40, label %41, label %113\l|{<s0>T|<s1>F}}"];
	Node0x600001e80870:s0 -> Node0x600001e808c0[tooltip="37 -> 41\nProbability 96.88%" ];
	Node0x600001e80870:s1 -> Node0x600001e80be0[tooltip="37 -> 113\nProbability 3.12%" ];
	Node0x600001e808c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{41:\l|  %42 = load ptr, ptr %4, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %42, i64 120,\l... i1 false)\l  %43 = load ptr, ptr %5, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %43, i64 56,\l... i1 false)\l  %44 = call i32 @decode_header(ptr noundef %12, ptr noundef %11)\l  %45 = icmp eq i32 %44, 0\l  br i1 %45, label %46, label %110\l|{<s0>T|<s1>F}}"];
	Node0x600001e808c0:s0 -> Node0x600001e80910[tooltip="41 -> 46\nProbability 37.50%" ];
	Node0x600001e808c0:s1 -> Node0x600001e80b90[tooltip="41 -> 110\nProbability 62.50%" ];
	Node0x600001e80910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{46:\l|  %47 = getelementptr inbounds %struct.mad_header, ptr %12, i32 0, i32 0\l  %48 = load i32, ptr %47, align 8\l  %49 = load ptr, ptr %5, align 8\l  %50 = getelementptr inbounds %struct.mad_header, ptr %49, i32 0, i32 0\l  %51 = load i32, ptr %50, align 8\l  %52 = icmp eq i32 %48, %51\l  br i1 %52, label %53, label %110\l|{<s0>T|<s1>F}}"];
	Node0x600001e80910:s0 -> Node0x600001e80960[tooltip="46 -> 53\nProbability 50.00%" ];
	Node0x600001e80910:s1 -> Node0x600001e80b90[tooltip="46 -> 110\nProbability 50.00%" ];
	Node0x600001e80960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{53:\l|  %54 = getelementptr inbounds %struct.mad_header, ptr %12, i32 0, i32 5\l  %55 = load i32, ptr %54, align 8\l  %56 = load ptr, ptr %5, align 8\l  %57 = getelementptr inbounds %struct.mad_header, ptr %56, i32 0, i32 5\l  %58 = load i32, ptr %57, align 8\l  %59 = icmp eq i32 %55, %58\l  br i1 %59, label %60, label %110\l|{<s0>T|<s1>F}}"];
	Node0x600001e80960:s0 -> Node0x600001e809b0[tooltip="53 -> 60\nProbability 50.00%" ];
	Node0x600001e80960:s1 -> Node0x600001e80b90[tooltip="53 -> 110\nProbability 50.00%" ];
	Node0x600001e809b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{60:\l|  %61 = load ptr, ptr %4, align 8\l  %62 = getelementptr inbounds %struct.mad_stream, ptr %61, i32 0, i32 7\l  %63 = call ptr @mad_bit_nextbyte(ptr noundef %62)\l  store ptr %63, ptr %10, align 8\l  %64 = load ptr, ptr %10, align 8\l  %65 = load ptr, ptr %4, align 8\l  %66 = getelementptr inbounds %struct.mad_stream, ptr %65, i32 0, i32 5\l  %67 = load ptr, ptr %66, align 8\l  %68 = ptrtoint ptr %64 to i64\l  %69 = ptrtoint ptr %67 to i64\l  %70 = sub i64 %68, %69\l  %71 = trunc i64 %70 to i32\l  store i32 %71, ptr %13, align 4\l  %72 = load ptr, ptr %5, align 8\l  %73 = getelementptr inbounds %struct.mad_header, ptr %72, i32 0, i32 0\l  %74 = load i32, ptr %73, align 8\l  %75 = icmp eq i32 %74, 1\l  br i1 %75, label %76, label %90\l|{<s0>T|<s1>F}}"];
	Node0x600001e809b0:s0 -> Node0x600001e80a00[tooltip="60 -> 76\nProbability 50.00%" ];
	Node0x600001e809b0:s1 -> Node0x600001e80a50[tooltip="60 -> 90\nProbability 50.00%" ];
	Node0x600001e80a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{76:\l|  %77 = load ptr, ptr %5, align 8\l  %78 = getelementptr inbounds %struct.mad_header, ptr %77, i32 0, i32 5\l  %79 = load i32, ptr %78, align 8\l  %80 = zext i32 %79 to i64\l  %81 = load i32, ptr %13, align 4\l  %82 = load i32, ptr %8, align 4\l  %83 = mul i32 4, %82\l  %84 = sub i32 %81, %83\l  %85 = add i32 %84, 4\l  %86 = zext i32 %85 to i64\l  %87 = mul i64 %80, %86\l  %88 = udiv i64 %87, 48\l  %89 = udiv i64 %88, 1000\l  store i64 %89, ptr %7, align 8\l  br label %105\l}"];
	Node0x600001e80a00 -> Node0x600001e80aa0[tooltip="76 -> 105\nProbability 100.00%" ];
	Node0x600001e80a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{90:\l|  %91 = load ptr, ptr %5, align 8\l  %92 = getelementptr inbounds %struct.mad_header, ptr %91, i32 0, i32 5\l  %93 = load i32, ptr %92, align 8\l  %94 = zext i32 %93 to i64\l  %95 = load i32, ptr %13, align 4\l  %96 = load i32, ptr %8, align 4\l  %97 = sub i32 %95, %96\l  %98 = add i32 %97, 1\l  %99 = zext i32 %98 to i64\l  %100 = mul i64 %94, %99\l  %101 = load i32, ptr %9, align 4\l  %102 = zext i32 %101 to i64\l  %103 = udiv i64 %100, %102\l  %104 = udiv i64 %103, 1000\l  store i64 %104, ptr %7, align 8\l  br label %105\l}"];
	Node0x600001e80a50 -> Node0x600001e80aa0[tooltip="90 -> 105\nProbability 100.00%" ];
	Node0x600001e80aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{105:\l|  %106 = load i64, ptr %7, align 8\l  %107 = icmp uge i64 %106, 8\l  br i1 %107, label %108, label %109\l|{<s0>T|<s1>F}}"];
	Node0x600001e80aa0:s0 -> Node0x600001e80af0[tooltip="105 -> 108\nProbability 3.12%" ];
	Node0x600001e80aa0:s1 -> Node0x600001e80b40[tooltip="105 -> 109\nProbability 96.88%" ];
	Node0x600001e80af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70" fontname="Courier",label="{108:\l|  br label %113\l}"];
	Node0x600001e80af0 -> Node0x600001e80be0[tooltip="108 -> 113\nProbability 100.00%" ];
	Node0x600001e80b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{109:\l|  br label %110\l}"];
	Node0x600001e80b40 -> Node0x600001e80b90[tooltip="109 -> 110\nProbability 100.00%" ];
	Node0x600001e80b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{110:\l|  %111 = load ptr, ptr %4, align 8\l  %112 = getelementptr inbounds %struct.mad_stream, ptr %111, i32 0, i32 7\l  call void @mad_bit_skip(ptr noundef %112, i32 noundef 8)\l  br label %37\l}"];
	Node0x600001e80b90 -> Node0x600001e80870[tooltip="110 -> 37\nProbability 100.00%" ];
	Node0x600001e80be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{113:\l|  %114 = load ptr, ptr %4, align 8\l  %115 = getelementptr inbounds %struct.mad_stream, ptr %114, i32 0, i32 7\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %115, ptr align 8 %6, i64 16,\l... i1 false)\l  %116 = load i64, ptr %7, align 8\l  %117 = icmp ult i64 %116, 8\l  br i1 %117, label %126, label %118\l|{<s0>T|<s1>F}}"];
	Node0x600001e80be0:s0 -> Node0x600001e80cd0[tooltip="113 -> 126\nProbability 50.00%" ];
	Node0x600001e80be0:s1 -> Node0x600001e80c30[tooltip="113 -> 118\nProbability 50.00%" ];
	Node0x600001e80c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{118:\l|  %119 = load ptr, ptr %5, align 8\l  %120 = getelementptr inbounds %struct.mad_header, ptr %119, i32 0, i32 0\l  %121 = load i32, ptr %120, align 8\l  %122 = icmp eq i32 %121, 3\l  br i1 %122, label %123, label %129\l|{<s0>T|<s1>F}}"];
	Node0x600001e80c30:s0 -> Node0x600001e80c80[tooltip="118 -> 123\nProbability 50.00%" ];
	Node0x600001e80c30:s1 -> Node0x600001e80d20[tooltip="118 -> 129\nProbability 50.00%" ];
	Node0x600001e80c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170" fontname="Courier",label="{123:\l|  %124 = load i64, ptr %7, align 8\l  %125 = icmp ugt i64 %124, 640\l  br i1 %125, label %126, label %129\l|{<s0>T|<s1>F}}"];
	Node0x600001e80c80:s0 -> Node0x600001e80cd0[tooltip="123 -> 126\nProbability 50.00%" ];
	Node0x600001e80c80:s1 -> Node0x600001e80d20[tooltip="123 -> 129\nProbability 50.00%" ];
	Node0x600001e80cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{126:\l|  %127 = load ptr, ptr %4, align 8\l  %128 = getelementptr inbounds %struct.mad_stream, ptr %127, i32 0, i32 13\l  store i32 257, ptr %128, align 8\l  store i32 -1, ptr %3, align 4\l  br label %134\l}"];
	Node0x600001e80cd0 -> Node0x600001e80d70[tooltip="126 -> 134\nProbability 100.00%" ];
	Node0x600001e80d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{129:\l|  %130 = load i64, ptr %7, align 8\l  %131 = mul i64 %130, 1000\l  %132 = load ptr, ptr %4, align 8\l  %133 = getelementptr inbounds %struct.mad_stream, ptr %132, i32 0, i32 4\l  store i64 %131, ptr %133, align 8\l  store i32 0, ptr %3, align 4\l  br label %134\l}"];
	Node0x600001e80d20 -> Node0x600001e80d70[tooltip="129 -> 134\nProbability 100.00%" ];
	Node0x600001e80d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{134:\l|  %135 = load i32, ptr %3, align 4\l  ret i32 %135\l}"];
}
