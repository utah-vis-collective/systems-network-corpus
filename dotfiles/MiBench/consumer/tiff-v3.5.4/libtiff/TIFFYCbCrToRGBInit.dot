digraph "CFG for 'TIFFYCbCrToRGBInit' function" {
	label="CFG for 'TIFFYCbCrToRGBInit' function";

	Node0x600002a25e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca float, align 4\l  %9 = alloca i64, align 8\l  %10 = alloca float, align 4\l  %11 = alloca i64, align 8\l  %12 = alloca float, align 4\l  %13 = alloca i64, align 8\l  %14 = alloca float, align 4\l  %15 = alloca i64, align 8\l  %16 = alloca i32, align 4\l  store ptr %0, ptr %3, align 8\l  store ptr %1, ptr %4, align 8\l  %17 = load ptr, ptr %3, align 8\l  %18 = getelementptr inbounds i8, ptr %17, i64 56\l  store ptr %18, ptr %5, align 8\l  %19 = load ptr, ptr %5, align 8\l  call void @_TIFFmemset(ptr noundef %19, i32 noundef 0, i64 noundef 256)\l  %20 = load ptr, ptr %5, align 8\l  %21 = getelementptr inbounds i8, ptr %20, i64 256\l  store ptr %21, ptr %5, align 8\l  %22 = load ptr, ptr %3, align 8\l  %23 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %22, i32 0, i32 0\l  store ptr %21, ptr %23, align 8\l  store i32 0, ptr %7, align 4\l  br label %24\l}"];
	Node0x600002a25e00 -> Node0x600002a25e50[tooltip="2 -> 24\nProbability 100.00%" ];
	Node0x600002a25e50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{24:\l|  %25 = load i32, ptr %7, align 4\l  %26 = icmp slt i32 %25, 256\l  br i1 %26, label %27, label %37\l|{<s0>T|<s1>F}}"];
	Node0x600002a25e50:s0 -> Node0x600002a25ea0[tooltip="24 -> 27\nProbability 96.88%" ];
	Node0x600002a25e50:s1 -> Node0x600002a25f40[tooltip="24 -> 37\nProbability 3.12%" ];
	Node0x600002a25ea0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{27:\l|  %28 = load i32, ptr %7, align 4\l  %29 = trunc i32 %28 to i8\l  %30 = load ptr, ptr %5, align 8\l  %31 = load i32, ptr %7, align 4\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds i8, ptr %30, i64 %32\l  store i8 %29, ptr %33, align 1\l  br label %34\l}"];
	Node0x600002a25ea0 -> Node0x600002a25ef0[tooltip="27 -> 34\nProbability 100.00%" ];
	Node0x600002a25ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{34:\l|  %35 = load i32, ptr %7, align 4\l  %36 = add nsw i32 %35, 1\l  store i32 %36, ptr %7, align 4\l  br label %24\l}"];
	Node0x600002a25ef0 -> Node0x600002a25e50[tooltip="34 -> 24\nProbability 100.00%" ];
	Node0x600002a25f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{37:\l|  %38 = load ptr, ptr %5, align 8\l  %39 = getelementptr inbounds i8, ptr %38, i64 256\l  call void @_TIFFmemset(ptr noundef %39, i32 noundef 255, i64 noundef 512)\l  %40 = load ptr, ptr %4, align 8\l  %41 = call i32 (ptr, i64, ...) @TIFFGetFieldDefaulted(ptr noundef %40, i64\l... noundef 529, ptr noundef %6)\l  %42 = load ptr, ptr %3, align 8\l  %43 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %42, i32 0, i32 5\l  %44 = getelementptr inbounds [3 x float], ptr %43, i64 0, i64 0\l  %45 = load ptr, ptr %6, align 8\l  call void @_TIFFmemcpy(ptr noundef %44, ptr noundef %45, i64 noundef 12)\l  %46 = load ptr, ptr %6, align 8\l  %47 = getelementptr inbounds float, ptr %46, i64 0\l  %48 = load float, ptr %47, align 4\l  %49 = call float @llvm.fmuladd.f32(float -2.000000e+00, float %48, float\l... 2.000000e+00)\l  store float %49, ptr %8, align 4\l  %50 = load float, ptr %8, align 4\l  %51 = fmul float %50, 6.553600e+04\l  %52 = fpext float %51 to double\l  %53 = fadd double %52, 5.000000e-01\l  %54 = fptosi double %53 to i64\l  store i64 %54, ptr %9, align 8\l  %55 = load ptr, ptr %6, align 8\l  %56 = getelementptr inbounds float, ptr %55, i64 0\l  %57 = load float, ptr %56, align 4\l  %58 = load float, ptr %8, align 4\l  %59 = fmul float %57, %58\l  %60 = load ptr, ptr %6, align 8\l  %61 = getelementptr inbounds float, ptr %60, i64 1\l  %62 = load float, ptr %61, align 4\l  %63 = fdiv float %59, %62\l  store float %63, ptr %10, align 4\l  %64 = load float, ptr %10, align 4\l  %65 = fmul float %64, 6.553600e+04\l  %66 = fpext float %65 to double\l  %67 = fadd double %66, 5.000000e-01\l  %68 = fptosi double %67 to i64\l  %69 = sub nsw i64 0, %68\l  store i64 %69, ptr %11, align 8\l  %70 = load ptr, ptr %6, align 8\l  %71 = getelementptr inbounds float, ptr %70, i64 2\l  %72 = load float, ptr %71, align 4\l  %73 = call float @llvm.fmuladd.f32(float -2.000000e+00, float %72, float\l... 2.000000e+00)\l  store float %73, ptr %12, align 4\l  %74 = load float, ptr %12, align 4\l  %75 = fmul float %74, 6.553600e+04\l  %76 = fpext float %75 to double\l  %77 = fadd double %76, 5.000000e-01\l  %78 = fptosi double %77 to i64\l  store i64 %78, ptr %13, align 8\l  %79 = load ptr, ptr %6, align 8\l  %80 = getelementptr inbounds float, ptr %79, i64 2\l  %81 = load float, ptr %80, align 4\l  %82 = load float, ptr %12, align 4\l  %83 = fmul float %81, %82\l  %84 = load ptr, ptr %6, align 8\l  %85 = getelementptr inbounds float, ptr %84, i64 1\l  %86 = load float, ptr %85, align 4\l  %87 = fdiv float %83, %86\l  store float %87, ptr %14, align 4\l  %88 = load float, ptr %14, align 4\l  %89 = fmul float %88, 6.553600e+04\l  %90 = fpext float %89 to double\l  %91 = fadd double %90, 5.000000e-01\l  %92 = fptosi double %91 to i64\l  %93 = sub nsw i64 0, %92\l  store i64 %93, ptr %15, align 8\l  %94 = load ptr, ptr %5, align 8\l  %95 = getelementptr inbounds i8, ptr %94, i64 768\l  %96 = load ptr, ptr %3, align 8\l  %97 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %96, i32 0, i32 1\l  store ptr %95, ptr %97, align 8\l  %98 = load ptr, ptr %3, align 8\l  %99 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %98, i32 0, i32 1\l  %100 = load ptr, ptr %99, align 8\l  %101 = getelementptr inbounds i32, ptr %100, i64 256\l  %102 = load ptr, ptr %3, align 8\l  %103 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %102, i32 0, i32 2\l  store ptr %101, ptr %103, align 8\l  %104 = load ptr, ptr %3, align 8\l  %105 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %104, i32 0, i32 2\l  %106 = load ptr, ptr %105, align 8\l  %107 = getelementptr inbounds i32, ptr %106, i64 256\l  %108 = load ptr, ptr %3, align 8\l  %109 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %108, i32 0, i32 3\l  store ptr %107, ptr %109, align 8\l  %110 = load ptr, ptr %3, align 8\l  %111 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %110, i32 0, i32 3\l  %112 = load ptr, ptr %111, align 8\l  %113 = getelementptr inbounds i64, ptr %112, i64 256\l  %114 = load ptr, ptr %3, align 8\l  %115 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %114, i32 0, i32 4\l  store ptr %113, ptr %115, align 8\l  store i32 0, ptr %7, align 4\l  store i32 -128, ptr %16, align 4\l  br label %116\l}"];
	Node0x600002a25f40 -> Node0x600002a25f90[tooltip="37 -> 116\nProbability 100.00%" ];
	Node0x600002a25f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{116:\l|  %117 = load i32, ptr %7, align 4\l  %118 = icmp slt i32 %117, 256\l  br i1 %118, label %119, label %172\l|{<s0>T|<s1>F}}"];
	Node0x600002a25f90:s0 -> Node0x600002a25fe0[tooltip="116 -> 119\nProbability 96.88%" ];
	Node0x600002a25f90:s1 -> Node0x600002a26080[tooltip="116 -> 172\nProbability 3.12%" ];
	Node0x600002a25fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{119:\l|  %120 = load i64, ptr %9, align 8\l  %121 = load i32, ptr %16, align 4\l  %122 = sext i32 %121 to i64\l  %123 = mul nsw i64 %120, %122\l  %124 = add nsw i64 %123, 32768\l  %125 = ashr i64 %124, 16\l  %126 = trunc i64 %125 to i32\l  %127 = load ptr, ptr %3, align 8\l  %128 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %127, i32 0, i32 1\l  %129 = load ptr, ptr %128, align 8\l  %130 = load i32, ptr %7, align 4\l  %131 = sext i32 %130 to i64\l  %132 = getelementptr inbounds i32, ptr %129, i64 %131\l  store i32 %126, ptr %132, align 4\l  %133 = load i64, ptr %13, align 8\l  %134 = load i32, ptr %16, align 4\l  %135 = sext i32 %134 to i64\l  %136 = mul nsw i64 %133, %135\l  %137 = add nsw i64 %136, 32768\l  %138 = ashr i64 %137, 16\l  %139 = trunc i64 %138 to i32\l  %140 = load ptr, ptr %3, align 8\l  %141 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %140, i32 0, i32 2\l  %142 = load ptr, ptr %141, align 8\l  %143 = load i32, ptr %7, align 4\l  %144 = sext i32 %143 to i64\l  %145 = getelementptr inbounds i32, ptr %142, i64 %144\l  store i32 %139, ptr %145, align 4\l  %146 = load i64, ptr %11, align 8\l  %147 = load i32, ptr %16, align 4\l  %148 = sext i32 %147 to i64\l  %149 = mul nsw i64 %146, %148\l  %150 = load ptr, ptr %3, align 8\l  %151 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %150, i32 0, i32 3\l  %152 = load ptr, ptr %151, align 8\l  %153 = load i32, ptr %7, align 4\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds i64, ptr %152, i64 %154\l  store i64 %149, ptr %155, align 8\l  %156 = load i64, ptr %15, align 8\l  %157 = load i32, ptr %16, align 4\l  %158 = sext i32 %157 to i64\l  %159 = mul nsw i64 %156, %158\l  %160 = add nsw i64 %159, 32768\l  %161 = load ptr, ptr %3, align 8\l  %162 = getelementptr inbounds %struct.TIFFYCbCrToRGB, ptr %161, i32 0, i32 4\l  %163 = load ptr, ptr %162, align 8\l  %164 = load i32, ptr %7, align 4\l  %165 = sext i32 %164 to i64\l  %166 = getelementptr inbounds i64, ptr %163, i64 %165\l  store i64 %160, ptr %166, align 8\l  br label %167\l}"];
	Node0x600002a25fe0 -> Node0x600002a26030[tooltip="119 -> 167\nProbability 100.00%" ];
	Node0x600002a26030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{167:\l|  %168 = load i32, ptr %7, align 4\l  %169 = add nsw i32 %168, 1\l  store i32 %169, ptr %7, align 4\l  %170 = load i32, ptr %16, align 4\l  %171 = add nsw i32 %170, 1\l  store i32 %171, ptr %16, align 4\l  br label %116\l}"];
	Node0x600002a26030 -> Node0x600002a25f90[tooltip="167 -> 116\nProbability 100.00%" ];
	Node0x600002a26080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{172:\l|  ret void\l}"];
}
