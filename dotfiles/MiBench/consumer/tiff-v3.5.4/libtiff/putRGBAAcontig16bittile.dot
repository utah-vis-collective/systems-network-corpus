digraph "CFG for 'putRGBAAcontig16bittile' function" {
	label="CFG for 'putRGBAAcontig16bittile' function";

	Node0x600002a29310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{9:\l|  %10 = alloca ptr, align 8\l  %11 = alloca ptr, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca ptr, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca ptr, align 8\l  store ptr %0, ptr %10, align 8\l  store ptr %1, ptr %11, align 8\l  store i64 %2, ptr %12, align 8\l  store i64 %3, ptr %13, align 8\l  store i64 %4, ptr %14, align 8\l  store i64 %5, ptr %15, align 8\l  store i64 %6, ptr %16, align 8\l  store i64 %7, ptr %17, align 8\l  store ptr %8, ptr %18, align 8\l  %21 = load ptr, ptr %10, align 8\l  %22 = getelementptr inbounds %struct._TIFFRGBAImage, ptr %21, i32 0, i32 7\l  %23 = load i16, ptr %22, align 2\l  %24 = zext i16 %23 to i32\l  store i32 %24, ptr %19, align 4\l  %25 = load ptr, ptr %18, align 8\l  store ptr %25, ptr %20, align 8\l  %26 = load i64, ptr %13, align 8\l  %27 = load i32, ptr %19, align 4\l  %28 = sext i32 %27 to i64\l  %29 = load i64, ptr %16, align 8\l  %30 = mul nsw i64 %29, %28\l  store i64 %30, ptr %16, align 8\l  br label %31\l}"];
	Node0x600002a29310 -> Node0x600002a29360[tooltip="9 -> 31\nProbability 100.00%" ];
	Node0x600002a29360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{31:\l|  %32 = load i64, ptr %15, align 8\l  %33 = add i64 %32, -1\l  store i64 %33, ptr %15, align 8\l  %34 = icmp ugt i64 %32, 0\l  br i1 %34, label %35, label %89\l|{<s0>T|<s1>F}}"];
	Node0x600002a29360:s0 -> Node0x600002a293b0[tooltip="31 -> 35\nProbability 96.88%" ];
	Node0x600002a29360:s1 -> Node0x600002a294f0[tooltip="31 -> 89\nProbability 3.12%" ];
	Node0x600002a293b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{35:\l|  %36 = load i64, ptr %14, align 8\l  store i64 %36, ptr %12, align 8\l  br label %37\l}"];
	Node0x600002a293b0 -> Node0x600002a29400[tooltip="35 -> 37\nProbability 100.00%" ];
	Node0x600002a29400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{37:\l|  %38 = load i64, ptr %12, align 8\l  %39 = add i64 %38, -1\l  store i64 %39, ptr %12, align 8\l  %40 = icmp ugt i64 %38, 0\l  br i1 %40, label %41, label %82\l|{<s0>T|<s1>F}}"];
	Node0x600002a29400:s0 -> Node0x600002a29450[tooltip="37 -> 41\nProbability 96.88%" ];
	Node0x600002a29400:s1 -> Node0x600002a294a0[tooltip="37 -> 82\nProbability 3.12%" ];
	Node0x600002a29450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{41:\l|  %42 = load ptr, ptr %20, align 8\l  %43 = getelementptr inbounds i16, ptr %42, i64 0\l  %44 = load i16, ptr %43, align 2\l  %45 = zext i16 %44 to i32\l  %46 = ashr i32 %45, 8\l  %47 = and i32 %46, 255\l  %48 = sext i32 %47 to i64\l  %49 = load ptr, ptr %20, align 8\l  %50 = getelementptr inbounds i16, ptr %49, i64 1\l  %51 = load i16, ptr %50, align 2\l  %52 = zext i16 %51 to i32\l  %53 = ashr i32 %52, 8\l  %54 = and i32 %53, 255\l  %55 = sext i32 %54 to i64\l  %56 = shl i64 %55, 8\l  %57 = or i64 %48, %56\l  %58 = load ptr, ptr %20, align 8\l  %59 = getelementptr inbounds i16, ptr %58, i64 2\l  %60 = load i16, ptr %59, align 2\l  %61 = zext i16 %60 to i32\l  %62 = ashr i32 %61, 8\l  %63 = and i32 %62, 255\l  %64 = sext i32 %63 to i64\l  %65 = shl i64 %64, 16\l  %66 = or i64 %57, %65\l  %67 = load ptr, ptr %20, align 8\l  %68 = getelementptr inbounds i16, ptr %67, i64 3\l  %69 = load i16, ptr %68, align 2\l  %70 = zext i16 %69 to i32\l  %71 = ashr i32 %70, 8\l  %72 = and i32 %71, 255\l  %73 = sext i32 %72 to i64\l  %74 = shl i64 %73, 24\l  %75 = or i64 %66, %74\l  %76 = load ptr, ptr %11, align 8\l  %77 = getelementptr inbounds i64, ptr %76, i32 1\l  store ptr %77, ptr %11, align 8\l  store i64 %75, ptr %76, align 8\l  %78 = load i32, ptr %19, align 4\l  %79 = load ptr, ptr %20, align 8\l  %80 = sext i32 %78 to i64\l  %81 = getelementptr inbounds i16, ptr %79, i64 %80\l  store ptr %81, ptr %20, align 8\l  br label %37\l}"];
	Node0x600002a29450 -> Node0x600002a29400[tooltip="41 -> 37\nProbability 100.00%" ];
	Node0x600002a294a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{82:\l|  %83 = load i64, ptr %17, align 8\l  %84 = load ptr, ptr %11, align 8\l  %85 = getelementptr inbounds i64, ptr %84, i64 %83\l  store ptr %85, ptr %11, align 8\l  %86 = load i64, ptr %16, align 8\l  %87 = load ptr, ptr %20, align 8\l  %88 = getelementptr inbounds i16, ptr %87, i64 %86\l  store ptr %88, ptr %20, align 8\l  br label %31\l}"];
	Node0x600002a294a0 -> Node0x600002a29360[tooltip="82 -> 31\nProbability 100.00%" ];
	Node0x600002a294f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{89:\l|  ret void\l}"];
}
