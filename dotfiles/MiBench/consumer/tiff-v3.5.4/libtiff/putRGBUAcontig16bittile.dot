digraph "CFG for 'putRGBUAcontig16bittile' function" {
	label="CFG for 'putRGBUAcontig16bittile' function";

	Node0x600002a29590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{9:\l|  %10 = alloca ptr, align 8\l  %11 = alloca ptr, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca ptr, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca ptr, align 8\l  %21 = alloca i64, align 8\l  %22 = alloca i64, align 8\l  %23 = alloca i64, align 8\l  %24 = alloca i64, align 8\l  store ptr %0, ptr %10, align 8\l  store ptr %1, ptr %11, align 8\l  store i64 %2, ptr %12, align 8\l  store i64 %3, ptr %13, align 8\l  store i64 %4, ptr %14, align 8\l  store i64 %5, ptr %15, align 8\l  store i64 %6, ptr %16, align 8\l  store i64 %7, ptr %17, align 8\l  store ptr %8, ptr %18, align 8\l  %25 = load ptr, ptr %10, align 8\l  %26 = getelementptr inbounds %struct._TIFFRGBAImage, ptr %25, i32 0, i32 7\l  %27 = load i16, ptr %26, align 2\l  %28 = zext i16 %27 to i32\l  store i32 %28, ptr %19, align 4\l  %29 = load ptr, ptr %18, align 8\l  store ptr %29, ptr %20, align 8\l  %30 = load i64, ptr %13, align 8\l  %31 = load i32, ptr %19, align 4\l  %32 = sext i32 %31 to i64\l  %33 = load i64, ptr %16, align 8\l  %34 = mul nsw i64 %33, %32\l  store i64 %34, ptr %16, align 8\l  br label %35\l}"];
	Node0x600002a29590 -> Node0x600002a295e0[tooltip="9 -> 35\nProbability 100.00%" ];
	Node0x600002a295e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{35:\l|  %36 = load i64, ptr %15, align 8\l  %37 = add i64 %36, -1\l  store i64 %37, ptr %15, align 8\l  %38 = icmp ugt i64 %36, 0\l  br i1 %38, label %39, label %96\l|{<s0>T|<s1>F}}"];
	Node0x600002a295e0:s0 -> Node0x600002a29630[tooltip="35 -> 39\nProbability 96.88%" ];
	Node0x600002a295e0:s1 -> Node0x600002a29770[tooltip="35 -> 96\nProbability 3.12%" ];
	Node0x600002a29630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{39:\l|  %40 = load i64, ptr %14, align 8\l  store i64 %40, ptr %12, align 8\l  br label %41\l}"];
	Node0x600002a29630 -> Node0x600002a29680[tooltip="39 -> 41\nProbability 100.00%" ];
	Node0x600002a29680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{41:\l|  %42 = load i64, ptr %12, align 8\l  %43 = add i64 %42, -1\l  store i64 %43, ptr %12, align 8\l  %44 = icmp ugt i64 %42, 0\l  br i1 %44, label %45, label %89\l|{<s0>T|<s1>F}}"];
	Node0x600002a29680:s0 -> Node0x600002a296d0[tooltip="41 -> 45\nProbability 96.88%" ];
	Node0x600002a29680:s1 -> Node0x600002a29720[tooltip="41 -> 89\nProbability 3.12%" ];
	Node0x600002a296d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{45:\l|  %46 = load ptr, ptr %20, align 8\l  %47 = getelementptr inbounds i16, ptr %46, i64 3\l  %48 = load i16, ptr %47, align 2\l  %49 = zext i16 %48 to i32\l  %50 = ashr i32 %49, 4\l  %51 = sext i32 %50 to i64\l  store i64 %51, ptr %24, align 8\l  %52 = load ptr, ptr %20, align 8\l  %53 = getelementptr inbounds i16, ptr %52, i64 0\l  %54 = load i16, ptr %53, align 2\l  %55 = zext i16 %54 to i64\l  %56 = load i64, ptr %24, align 8\l  %57 = mul i64 %55, %56\l  %58 = udiv i64 %57, 69375\l  store i64 %58, ptr %21, align 8\l  %59 = load ptr, ptr %20, align 8\l  %60 = getelementptr inbounds i16, ptr %59, i64 1\l  %61 = load i16, ptr %60, align 2\l  %62 = zext i16 %61 to i64\l  %63 = load i64, ptr %24, align 8\l  %64 = mul i64 %62, %63\l  %65 = udiv i64 %64, 69375\l  store i64 %65, ptr %22, align 8\l  %66 = load ptr, ptr %20, align 8\l  %67 = getelementptr inbounds i16, ptr %66, i64 2\l  %68 = load i16, ptr %67, align 2\l  %69 = zext i16 %68 to i64\l  %70 = load i64, ptr %24, align 8\l  %71 = mul i64 %69, %70\l  %72 = udiv i64 %71, 69375\l  store i64 %72, ptr %23, align 8\l  %73 = load i64, ptr %21, align 8\l  %74 = load i64, ptr %22, align 8\l  %75 = shl i64 %74, 8\l  %76 = or i64 %73, %75\l  %77 = load i64, ptr %23, align 8\l  %78 = shl i64 %77, 16\l  %79 = or i64 %76, %78\l  %80 = load i64, ptr %24, align 8\l  %81 = shl i64 %80, 24\l  %82 = or i64 %79, %81\l  %83 = load ptr, ptr %11, align 8\l  %84 = getelementptr inbounds i64, ptr %83, i32 1\l  store ptr %84, ptr %11, align 8\l  store i64 %82, ptr %83, align 8\l  %85 = load i32, ptr %19, align 4\l  %86 = load ptr, ptr %20, align 8\l  %87 = sext i32 %85 to i64\l  %88 = getelementptr inbounds i16, ptr %86, i64 %87\l  store ptr %88, ptr %20, align 8\l  br label %41\l}"];
	Node0x600002a296d0 -> Node0x600002a29680[tooltip="45 -> 41\nProbability 100.00%" ];
	Node0x600002a29720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{89:\l|  %90 = load i64, ptr %17, align 8\l  %91 = load ptr, ptr %11, align 8\l  %92 = getelementptr inbounds i64, ptr %91, i64 %90\l  store ptr %92, ptr %11, align 8\l  %93 = load i64, ptr %16, align 8\l  %94 = load ptr, ptr %20, align 8\l  %95 = getelementptr inbounds i16, ptr %94, i64 %93\l  store ptr %95, ptr %20, align 8\l  br label %35\l}"];
	Node0x600002a29720 -> Node0x600002a295e0[tooltip="89 -> 35\nProbability 100.00%" ];
	Node0x600002a29770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{96:\l|  ret void\l}"];
}
