digraph "CFG for 'putRGBAAseparate16bittile' function" {
	label="CFG for 'putRGBAAseparate16bittile' function";

	Node0x600002a20500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{12:\l|  %13 = alloca ptr, align 8\l  %14 = alloca ptr, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca ptr, align 8\l  %22 = alloca ptr, align 8\l  %23 = alloca ptr, align 8\l  %24 = alloca ptr, align 8\l  %25 = alloca ptr, align 8\l  %26 = alloca ptr, align 8\l  %27 = alloca ptr, align 8\l  %28 = alloca ptr, align 8\l  store ptr %0, ptr %13, align 8\l  store ptr %1, ptr %14, align 8\l  store i64 %2, ptr %15, align 8\l  store i64 %3, ptr %16, align 8\l  store i64 %4, ptr %17, align 8\l  store i64 %5, ptr %18, align 8\l  store i64 %6, ptr %19, align 8\l  store i64 %7, ptr %20, align 8\l  store ptr %8, ptr %21, align 8\l  store ptr %9, ptr %22, align 8\l  store ptr %10, ptr %23, align 8\l  store ptr %11, ptr %24, align 8\l  %29 = load ptr, ptr %21, align 8\l  store ptr %29, ptr %25, align 8\l  %30 = load ptr, ptr %22, align 8\l  store ptr %30, ptr %26, align 8\l  %31 = load ptr, ptr %23, align 8\l  store ptr %31, ptr %27, align 8\l  %32 = load ptr, ptr %24, align 8\l  store ptr %32, ptr %28, align 8\l  %33 = load ptr, ptr %13, align 8\l  %34 = load i64, ptr %16, align 8\l  br label %35\l}"];
	Node0x600002a20500 -> Node0x600002a20550[tooltip="12 -> 35\nProbability 100.00%" ];
	Node0x600002a20550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{35:\l|  %36 = load i64, ptr %18, align 8\l  %37 = add i64 %36, -1\l  store i64 %37, ptr %18, align 8\l  %38 = icmp ugt i64 %36, 0\l  br i1 %38, label %39, label %100\l|{<s0>T|<s1>F}}"];
	Node0x600002a20550:s0 -> Node0x600002a205a0[tooltip="35 -> 39\nProbability 96.88%" ];
	Node0x600002a20550:s1 -> Node0x600002a20730[tooltip="35 -> 100\nProbability 3.12%" ];
	Node0x600002a205a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{39:\l|  store i64 0, ptr %15, align 8\l  br label %40\l}"];
	Node0x600002a205a0 -> Node0x600002a205f0[tooltip="39 -> 40\nProbability 100.00%" ];
	Node0x600002a205f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{40:\l|  %41 = load i64, ptr %15, align 8\l  %42 = load i64, ptr %17, align 8\l  %43 = icmp ult i64 %41, %42\l  br i1 %43, label %44, label %84\l|{<s0>T|<s1>F}}"];
	Node0x600002a205f0:s0 -> Node0x600002a20640[tooltip="40 -> 44\nProbability 96.88%" ];
	Node0x600002a205f0:s1 -> Node0x600002a206e0[tooltip="40 -> 84\nProbability 3.12%" ];
	Node0x600002a20640 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{44:\l|  %45 = load ptr, ptr %25, align 8\l  %46 = getelementptr inbounds i16, ptr %45, i32 1\l  store ptr %46, ptr %25, align 8\l  %47 = load i16, ptr %45, align 2\l  %48 = zext i16 %47 to i32\l  %49 = ashr i32 %48, 8\l  %50 = and i32 %49, 255\l  %51 = sext i32 %50 to i64\l  %52 = load ptr, ptr %26, align 8\l  %53 = getelementptr inbounds i16, ptr %52, i32 1\l  store ptr %53, ptr %26, align 8\l  %54 = load i16, ptr %52, align 2\l  %55 = zext i16 %54 to i32\l  %56 = ashr i32 %55, 8\l  %57 = and i32 %56, 255\l  %58 = sext i32 %57 to i64\l  %59 = shl i64 %58, 8\l  %60 = or i64 %51, %59\l  %61 = load ptr, ptr %27, align 8\l  %62 = getelementptr inbounds i16, ptr %61, i32 1\l  store ptr %62, ptr %27, align 8\l  %63 = load i16, ptr %61, align 2\l  %64 = zext i16 %63 to i32\l  %65 = ashr i32 %64, 8\l  %66 = and i32 %65, 255\l  %67 = sext i32 %66 to i64\l  %68 = shl i64 %67, 16\l  %69 = or i64 %60, %68\l  %70 = load ptr, ptr %28, align 8\l  %71 = getelementptr inbounds i16, ptr %70, i32 1\l  store ptr %71, ptr %28, align 8\l  %72 = load i16, ptr %70, align 2\l  %73 = zext i16 %72 to i32\l  %74 = ashr i32 %73, 8\l  %75 = and i32 %74, 255\l  %76 = sext i32 %75 to i64\l  %77 = shl i64 %76, 24\l  %78 = or i64 %69, %77\l  %79 = load ptr, ptr %14, align 8\l  %80 = getelementptr inbounds i64, ptr %79, i32 1\l  store ptr %80, ptr %14, align 8\l  store i64 %78, ptr %79, align 8\l  br label %81\l}"];
	Node0x600002a20640 -> Node0x600002a20690[tooltip="44 -> 81\nProbability 100.00%" ];
	Node0x600002a20690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{81:\l|  %82 = load i64, ptr %15, align 8\l  %83 = add i64 %82, 1\l  store i64 %83, ptr %15, align 8\l  br label %40\l}"];
	Node0x600002a20690 -> Node0x600002a205f0[tooltip="81 -> 40\nProbability 100.00%" ];
	Node0x600002a206e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{84:\l|  %85 = load i64, ptr %19, align 8\l  %86 = load ptr, ptr %25, align 8\l  %87 = getelementptr inbounds i16, ptr %86, i64 %85\l  store ptr %87, ptr %25, align 8\l  %88 = load i64, ptr %19, align 8\l  %89 = load ptr, ptr %26, align 8\l  %90 = getelementptr inbounds i16, ptr %89, i64 %88\l  store ptr %90, ptr %26, align 8\l  %91 = load i64, ptr %19, align 8\l  %92 = load ptr, ptr %27, align 8\l  %93 = getelementptr inbounds i16, ptr %92, i64 %91\l  store ptr %93, ptr %27, align 8\l  %94 = load i64, ptr %19, align 8\l  %95 = load ptr, ptr %28, align 8\l  %96 = getelementptr inbounds i16, ptr %95, i64 %94\l  store ptr %96, ptr %28, align 8\l  %97 = load i64, ptr %20, align 8\l  %98 = load ptr, ptr %14, align 8\l  %99 = getelementptr inbounds i64, ptr %98, i64 %97\l  store ptr %99, ptr %14, align 8\l  br label %35\l}"];
	Node0x600002a206e0 -> Node0x600002a20550[tooltip="84 -> 35\nProbability 100.00%" ];
	Node0x600002a20730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{100:\l|  ret void\l}"];
}
