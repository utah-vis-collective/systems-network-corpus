digraph "CFG for 'putRGBseparate16bittile' function" {
	label="CFG for 'putRGBseparate16bittile' function";

	Node0x600002a20230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{12:\l|  %13 = alloca ptr, align 8\l  %14 = alloca ptr, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca ptr, align 8\l  %22 = alloca ptr, align 8\l  %23 = alloca ptr, align 8\l  %24 = alloca ptr, align 8\l  %25 = alloca ptr, align 8\l  %26 = alloca ptr, align 8\l  %27 = alloca ptr, align 8\l  store ptr %0, ptr %13, align 8\l  store ptr %1, ptr %14, align 8\l  store i64 %2, ptr %15, align 8\l  store i64 %3, ptr %16, align 8\l  store i64 %4, ptr %17, align 8\l  store i64 %5, ptr %18, align 8\l  store i64 %6, ptr %19, align 8\l  store i64 %7, ptr %20, align 8\l  store ptr %8, ptr %21, align 8\l  store ptr %9, ptr %22, align 8\l  store ptr %10, ptr %23, align 8\l  store ptr %11, ptr %24, align 8\l  %28 = load ptr, ptr %21, align 8\l  store ptr %28, ptr %25, align 8\l  %29 = load ptr, ptr %22, align 8\l  store ptr %29, ptr %26, align 8\l  %30 = load ptr, ptr %23, align 8\l  store ptr %30, ptr %27, align 8\l  %31 = load ptr, ptr %13, align 8\l  %32 = load i64, ptr %16, align 8\l  %33 = load ptr, ptr %24, align 8\l  br label %34\l}"];
	Node0x600002a20230 -> Node0x600002a20280[tooltip="12 -> 34\nProbability 100.00%" ];
	Node0x600002a20280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{34:\l|  %35 = load i64, ptr %18, align 8\l  %36 = add i64 %35, -1\l  store i64 %36, ptr %18, align 8\l  %37 = icmp ugt i64 %35, 0\l  br i1 %37, label %38, label %88\l|{<s0>T|<s1>F}}"];
	Node0x600002a20280:s0 -> Node0x600002a202d0[tooltip="34 -> 38\nProbability 96.88%" ];
	Node0x600002a20280:s1 -> Node0x600002a20460[tooltip="34 -> 88\nProbability 3.12%" ];
	Node0x600002a202d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{38:\l|  store i64 0, ptr %15, align 8\l  br label %39\l}"];
	Node0x600002a202d0 -> Node0x600002a20320[tooltip="38 -> 39\nProbability 100.00%" ];
	Node0x600002a20320 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{39:\l|  %40 = load i64, ptr %15, align 8\l  %41 = load i64, ptr %17, align 8\l  %42 = icmp ult i64 %40, %41\l  br i1 %42, label %43, label %75\l|{<s0>T|<s1>F}}"];
	Node0x600002a20320:s0 -> Node0x600002a20370[tooltip="39 -> 43\nProbability 96.88%" ];
	Node0x600002a20320:s1 -> Node0x600002a20410[tooltip="39 -> 75\nProbability 3.12%" ];
	Node0x600002a20370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{43:\l|  %44 = load ptr, ptr %25, align 8\l  %45 = getelementptr inbounds i16, ptr %44, i32 1\l  store ptr %45, ptr %25, align 8\l  %46 = load i16, ptr %44, align 2\l  %47 = zext i16 %46 to i32\l  %48 = ashr i32 %47, 8\l  %49 = and i32 %48, 255\l  %50 = sext i32 %49 to i64\l  %51 = load ptr, ptr %26, align 8\l  %52 = getelementptr inbounds i16, ptr %51, i32 1\l  store ptr %52, ptr %26, align 8\l  %53 = load i16, ptr %51, align 2\l  %54 = zext i16 %53 to i32\l  %55 = ashr i32 %54, 8\l  %56 = and i32 %55, 255\l  %57 = sext i32 %56 to i64\l  %58 = shl i64 %57, 8\l  %59 = or i64 %50, %58\l  %60 = load ptr, ptr %27, align 8\l  %61 = getelementptr inbounds i16, ptr %60, i32 1\l  store ptr %61, ptr %27, align 8\l  %62 = load i16, ptr %60, align 2\l  %63 = zext i16 %62 to i32\l  %64 = ashr i32 %63, 8\l  %65 = and i32 %64, 255\l  %66 = sext i32 %65 to i64\l  %67 = shl i64 %66, 16\l  %68 = or i64 %59, %67\l  %69 = or i64 %68, 4278190080\l  %70 = load ptr, ptr %14, align 8\l  %71 = getelementptr inbounds i64, ptr %70, i32 1\l  store ptr %71, ptr %14, align 8\l  store i64 %69, ptr %70, align 8\l  br label %72\l}"];
	Node0x600002a20370 -> Node0x600002a203c0[tooltip="43 -> 72\nProbability 100.00%" ];
	Node0x600002a203c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{72:\l|  %73 = load i64, ptr %15, align 8\l  %74 = add i64 %73, 1\l  store i64 %74, ptr %15, align 8\l  br label %39\l}"];
	Node0x600002a203c0 -> Node0x600002a20320[tooltip="72 -> 39\nProbability 100.00%" ];
	Node0x600002a20410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{75:\l|  %76 = load i64, ptr %19, align 8\l  %77 = load ptr, ptr %25, align 8\l  %78 = getelementptr inbounds i16, ptr %77, i64 %76\l  store ptr %78, ptr %25, align 8\l  %79 = load i64, ptr %19, align 8\l  %80 = load ptr, ptr %26, align 8\l  %81 = getelementptr inbounds i16, ptr %80, i64 %79\l  store ptr %81, ptr %26, align 8\l  %82 = load i64, ptr %19, align 8\l  %83 = load ptr, ptr %27, align 8\l  %84 = getelementptr inbounds i16, ptr %83, i64 %82\l  store ptr %84, ptr %27, align 8\l  %85 = load i64, ptr %20, align 8\l  %86 = load ptr, ptr %14, align 8\l  %87 = getelementptr inbounds i64, ptr %86, i64 %85\l  store ptr %87, ptr %14, align 8\l  br label %34\l}"];
	Node0x600002a20410 -> Node0x600002a20280[tooltip="75 -> 34\nProbability 100.00%" ];
	Node0x600002a20460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{88:\l|  ret void\l}"];
}
