digraph "CFG for 'pix24toXYZ' function" {
	label="CFG for 'pix24toXYZ' function";

	Node0x6000006335c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca i64, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca double, align 8\l  %8 = alloca double, align 8\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  %11 = alloca double, align 8\l  %12 = alloca double, align 8\l  store i64 %0, ptr %3, align 8\l  store ptr %1, ptr %4, align 8\l  %13 = load i64, ptr %3, align 8\l  %14 = lshr i64 %13, 14\l  %15 = and i64 %14, 1023\l  %16 = trunc i64 %15 to i32\l  store i32 %16, ptr %5, align 4\l  %17 = load i32, ptr %5, align 4\l  %18 = icmp eq i32 %17, 0\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x6000006335c0:s0 -> Node0x600000633610[tooltip="2 -> 19\nProbability 37.50%" ];
	Node0x6000006335c0:s1 -> Node0x600000633660[tooltip="2 -> 26\nProbability 62.50%" ];
	Node0x600000633610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{19:\l|  %20 = load ptr, ptr %4, align 8\l  %21 = getelementptr inbounds float, ptr %20, i64 2\l  store float 0.000000e+00, ptr %21, align 4\l  %22 = load ptr, ptr %4, align 8\l  %23 = getelementptr inbounds float, ptr %22, i64 1\l  store float 0.000000e+00, ptr %23, align 4\l  %24 = load ptr, ptr %4, align 8\l  %25 = getelementptr inbounds float, ptr %24, i64 0\l  store float 0.000000e+00, ptr %25, align 4\l  br label %78\l}"];
	Node0x600000633610 -> Node0x600000633750[tooltip="19 -> 78\nProbability 100.00%" ];
	Node0x600000633660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{26:\l|  %27 = load i32, ptr %5, align 4\l  %28 = sitofp i32 %27 to double\l  %29 = fadd double %28, 5.000000e-01\l  %30 = call double @llvm.fmuladd.f64(double 0x3F862E42FEFA39EF, double %29,\l... double 0xC020A2B23F3BAB73)\l  %31 = call double @llvm.exp.f64(double %30)\l  store double %31, ptr %7, align 8\l  %32 = load i64, ptr %3, align 8\l  %33 = and i64 %32, 16383\l  %34 = trunc i64 %33 to i32\l  store i32 %34, ptr %6, align 4\l  %35 = load i32, ptr %6, align 4\l  %36 = call i32 @uv_decode(ptr noundef %8, ptr noundef %9, i32 noundef %35)\l  %37 = icmp slt i32 %36, 0\l  br i1 %37, label %38, label %39\l|{<s0>T|<s1>F}}"];
	Node0x600000633660:s0 -> Node0x6000006336b0[tooltip="26 -> 38\nProbability 37.50%" ];
	Node0x600000633660:s1 -> Node0x600000633700[tooltip="26 -> 39\nProbability 62.50%" ];
	Node0x6000006336b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{38:\l|  store double 0x3FCAF286BD156C1A, ptr %8, align 8\l  store double 0x3FDE50D794B8199E, ptr %9, align 8\l  br label %39\l}"];
	Node0x6000006336b0 -> Node0x600000633700[tooltip="38 -> 39\nProbability 100.00%" ];
	Node0x600000633700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{39:\l|  %40 = load double, ptr %8, align 8\l  %41 = load double, ptr %9, align 8\l  %42 = fmul double 1.600000e+01, %41\l  %43 = fneg double %42\l  %44 = call double @llvm.fmuladd.f64(double 6.000000e+00, double %40, double\l... %43)\l  %45 = fadd double %44, 1.200000e+01\l  %46 = fdiv double 1.000000e+00, %45\l  store double %46, ptr %10, align 8\l  %47 = load double, ptr %8, align 8\l  %48 = fmul double 9.000000e+00, %47\l  %49 = load double, ptr %10, align 8\l  %50 = fmul double %48, %49\l  store double %50, ptr %11, align 8\l  %51 = load double, ptr %9, align 8\l  %52 = fmul double 4.000000e+00, %51\l  %53 = load double, ptr %10, align 8\l  %54 = fmul double %52, %53\l  store double %54, ptr %12, align 8\l  %55 = load double, ptr %11, align 8\l  %56 = load double, ptr %12, align 8\l  %57 = fdiv double %55, %56\l  %58 = load double, ptr %7, align 8\l  %59 = fmul double %57, %58\l  %60 = fptrunc double %59 to float\l  %61 = load ptr, ptr %4, align 8\l  %62 = getelementptr inbounds float, ptr %61, i64 0\l  store float %60, ptr %62, align 4\l  %63 = load double, ptr %7, align 8\l  %64 = fptrunc double %63 to float\l  %65 = load ptr, ptr %4, align 8\l  %66 = getelementptr inbounds float, ptr %65, i64 1\l  store float %64, ptr %66, align 4\l  %67 = load double, ptr %11, align 8\l  %68 = fsub double 1.000000e+00, %67\l  %69 = load double, ptr %12, align 8\l  %70 = fsub double %68, %69\l  %71 = load double, ptr %12, align 8\l  %72 = fdiv double %70, %71\l  %73 = load double, ptr %7, align 8\l  %74 = fmul double %72, %73\l  %75 = fptrunc double %74 to float\l  %76 = load ptr, ptr %4, align 8\l  %77 = getelementptr inbounds float, ptr %76, i64 2\l  store float %75, ptr %77, align 4\l  br label %78\l}"];
	Node0x600000633700 -> Node0x600000633750[tooltip="39 -> 78\nProbability 100.00%" ];
	Node0x600000633750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{78:\l|  ret void\l}"];
}
