digraph "CFG for 'pix32toXYZ' function" {
	label="CFG for 'pix32toXYZ' function";

	Node0x6000006342d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca i64, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca double, align 8\l  %6 = alloca double, align 8\l  %7 = alloca double, align 8\l  %8 = alloca double, align 8\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  store i64 %0, ptr %3, align 8\l  store ptr %1, ptr %4, align 8\l  %11 = load i64, ptr %3, align 8\l  %12 = trunc i64 %11 to i32\l  %13 = ashr i32 %12, 16\l  %14 = call double @pix16toY(i32 noundef %13)\l  store double %14, ptr %5, align 8\l  %15 = load double, ptr %5, align 8\l  %16 = fcmp oeq double %15, 0.000000e+00\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x6000006342d0:s0 -> Node0x600000634500[tooltip="2 -> 17\nProbability 62.50%" ];
	Node0x6000006342d0:s1 -> Node0x600000634550[tooltip="2 -> 24\nProbability 37.50%" ];
	Node0x600000634500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{17:\l|  %18 = load ptr, ptr %4, align 8\l  %19 = getelementptr inbounds float, ptr %18, i64 2\l  store float 0.000000e+00, ptr %19, align 4\l  %20 = load ptr, ptr %4, align 8\l  %21 = getelementptr inbounds float, ptr %20, i64 1\l  store float 0.000000e+00, ptr %21, align 4\l  %22 = load ptr, ptr %4, align 8\l  %23 = getelementptr inbounds float, ptr %22, i64 0\l  store float 0.000000e+00, ptr %23, align 4\l  br label %74\l}"];
	Node0x600000634500 -> Node0x6000006345a0[tooltip="17 -> 74\nProbability 100.00%" ];
	Node0x600000634550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{24:\l|  %25 = load i64, ptr %3, align 8\l  %26 = lshr i64 %25, 8\l  %27 = and i64 %26, 255\l  %28 = uitofp i64 %27 to double\l  %29 = fadd double %28, 5.000000e-01\l  %30 = fmul double 0x3F63FB013FB013FB, %29\l  store double %30, ptr %6, align 8\l  %31 = load i64, ptr %3, align 8\l  %32 = and i64 %31, 255\l  %33 = uitofp i64 %32 to double\l  %34 = fadd double %33, 5.000000e-01\l  %35 = fmul double 0x3F63FB013FB013FB, %34\l  store double %35, ptr %7, align 8\l  %36 = load double, ptr %6, align 8\l  %37 = load double, ptr %7, align 8\l  %38 = fmul double 1.600000e+01, %37\l  %39 = fneg double %38\l  %40 = call double @llvm.fmuladd.f64(double 6.000000e+00, double %36, double\l... %39)\l  %41 = fadd double %40, 1.200000e+01\l  %42 = fdiv double 1.000000e+00, %41\l  store double %42, ptr %8, align 8\l  %43 = load double, ptr %6, align 8\l  %44 = fmul double 9.000000e+00, %43\l  %45 = load double, ptr %8, align 8\l  %46 = fmul double %44, %45\l  store double %46, ptr %9, align 8\l  %47 = load double, ptr %7, align 8\l  %48 = fmul double 4.000000e+00, %47\l  %49 = load double, ptr %8, align 8\l  %50 = fmul double %48, %49\l  store double %50, ptr %10, align 8\l  %51 = load double, ptr %9, align 8\l  %52 = load double, ptr %10, align 8\l  %53 = fdiv double %51, %52\l  %54 = load double, ptr %5, align 8\l  %55 = fmul double %53, %54\l  %56 = fptrunc double %55 to float\l  %57 = load ptr, ptr %4, align 8\l  %58 = getelementptr inbounds float, ptr %57, i64 0\l  store float %56, ptr %58, align 4\l  %59 = load double, ptr %5, align 8\l  %60 = fptrunc double %59 to float\l  %61 = load ptr, ptr %4, align 8\l  %62 = getelementptr inbounds float, ptr %61, i64 1\l  store float %60, ptr %62, align 4\l  %63 = load double, ptr %9, align 8\l  %64 = fsub double 1.000000e+00, %63\l  %65 = load double, ptr %10, align 8\l  %66 = fsub double %64, %65\l  %67 = load double, ptr %10, align 8\l  %68 = fdiv double %66, %67\l  %69 = load double, ptr %5, align 8\l  %70 = fmul double %68, %69\l  %71 = fptrunc double %70 to float\l  %72 = load ptr, ptr %4, align 8\l  %73 = getelementptr inbounds float, ptr %72, i64 2\l  store float %71, ptr %73, align 4\l  br label %74\l}"];
	Node0x600000634550 -> Node0x6000006345a0[tooltip="24 -> 74\nProbability 100.00%" ];
	Node0x6000006345a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{74:\l|  ret void\l}"];
}
