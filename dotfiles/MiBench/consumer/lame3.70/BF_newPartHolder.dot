digraph "CFG for 'BF_newPartHolder' function" {
	label="CFG for 'BF_newPartHolder' function";

	Node0x6000039dc910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca i32, align 4\l  %3 = alloca ptr, align 8\l  store i32 %0, ptr %2, align 4\l  %4 = call ptr @calloc(i64 noundef 1, i64 noundef 16) #7\l  store ptr %4, ptr %3, align 8\l  %5 = load ptr, ptr %3, align 8\l  %6 = icmp ne ptr %5, null\l  %7 = xor i1 %6, true\l  %8 = zext i1 %7 to i32\l  %9 = sext i32 %8 to i64\l  %10 = icmp ne i64 %9, 0\l  br i1 %10, label %11, label %13\l|{<s0>T|<s1>F}}"];
	Node0x6000039dc910:s0 -> Node0x6000039dc960[tooltip="1 -> 11\nProbability 0.00%" ];
	Node0x6000039dc910:s1 -> Node0x6000039dca00[tooltip="1 -> 13\nProbability 100.00%" ];
	Node0x6000039dc960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70" fontname="Courier",label="{11:\l|  call void @__assert_rtn(ptr noundef @__func__.BF_newPartHolder, ptr\l... noundef @.str, i32 noundef 443, ptr noundef @.str.4) #8\l  unreachable\l}"];
	Node0x6000039dc9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370" fontname="Courier",label="{12:\l|  br label %14\l}"];
	Node0x6000039dc9b0 -> Node0x6000039dca50[tooltip="12 -> 14\nProbability 100.00%" ];
	Node0x6000039dca00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{13:\l|  br label %14\l}"];
	Node0x6000039dca00 -> Node0x6000039dca50[tooltip="13 -> 14\nProbability 100.00%" ];
	Node0x6000039dca50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{14:\l|  %15 = load i32, ptr %2, align 4\l  %16 = load ptr, ptr %3, align 8\l  %17 = getelementptr inbounds %struct.BF_PartHolder, ptr %16, i32 0, i32 0\l  store i32 %15, ptr %17, align 8\l  %18 = call ptr @calloc(i64 noundef 1, i64 noundef 16) #7\l  %19 = load ptr, ptr %3, align 8\l  %20 = getelementptr inbounds %struct.BF_PartHolder, ptr %19, i32 0, i32 1\l  store ptr %18, ptr %20, align 8\l  %21 = load ptr, ptr %3, align 8\l  %22 = getelementptr inbounds %struct.BF_PartHolder, ptr %21, i32 0, i32 1\l  %23 = load ptr, ptr %22, align 8\l  %24 = icmp ne ptr %23, null\l  %25 = xor i1 %24, true\l  %26 = zext i1 %25 to i32\l  %27 = sext i32 %26 to i64\l  %28 = icmp ne i64 %27, 0\l  br i1 %28, label %29, label %31\l|{<s0>T|<s1>F}}"];
	Node0x6000039dca50:s0 -> Node0x6000039dcaa0[tooltip="14 -> 29\nProbability 0.00%" ];
	Node0x6000039dca50:s1 -> Node0x6000039dcb40[tooltip="14 -> 31\nProbability 100.00%" ];
	Node0x6000039dcaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70" fontname="Courier",label="{29:\l|  call void @__assert_rtn(ptr noundef @__func__.BF_newPartHolder, ptr\l... noundef @.str, i32 noundef 446, ptr noundef @.str.5) #8\l  unreachable\l}"];
	Node0x6000039dcaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370" fontname="Courier",label="{30:\l|  br label %32\l}"];
	Node0x6000039dcaf0 -> Node0x6000039dcb90[tooltip="30 -> 32\nProbability 100.00%" ];
	Node0x6000039dcb40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{31:\l|  br label %32\l}"];
	Node0x6000039dcb40 -> Node0x6000039dcb90[tooltip="31 -> 32\nProbability 100.00%" ];
	Node0x6000039dcb90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{32:\l|  %33 = load i32, ptr %2, align 4\l  %34 = sext i32 %33 to i64\l  %35 = call ptr @calloc(i64 noundef %34, i64 noundef 8) #7\l  %36 = load ptr, ptr %3, align 8\l  %37 = getelementptr inbounds %struct.BF_PartHolder, ptr %36, i32 0, i32 1\l  %38 = load ptr, ptr %37, align 8\l  %39 = getelementptr inbounds %struct.BF_BitstreamPart, ptr %38, i32 0, i32 1\l  store ptr %35, ptr %39, align 8\l  %40 = load i32, ptr %2, align 4\l  %41 = icmp sgt i32 %40, 0\l  br i1 %41, label %42, label %57\l|{<s0>T|<s1>F}}"];
	Node0x6000039dcb90:s0 -> Node0x6000039dcbe0[tooltip="32 -> 42\nProbability 62.50%" ];
	Node0x6000039dcb90:s1 -> Node0x6000039dcd70[tooltip="32 -> 57\nProbability 37.50%" ];
	Node0x6000039dcbe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{42:\l|  %43 = load ptr, ptr %3, align 8\l  %44 = getelementptr inbounds %struct.BF_PartHolder, ptr %43, i32 0, i32 1\l  %45 = load ptr, ptr %44, align 8\l  %46 = getelementptr inbounds %struct.BF_BitstreamPart, ptr %45, i32 0, i32 1\l  %47 = load ptr, ptr %46, align 8\l  %48 = icmp ne ptr %47, null\l  %49 = xor i1 %48, true\l  %50 = zext i1 %49 to i32\l  %51 = sext i32 %50 to i64\l  %52 = icmp ne i64 %51, 0\l  br i1 %52, label %53, label %55\l|{<s0>T|<s1>F}}"];
	Node0x6000039dcbe0:s0 -> Node0x6000039dcc30[tooltip="42 -> 53\nProbability 0.00%" ];
	Node0x6000039dcbe0:s1 -> Node0x6000039dccd0[tooltip="42 -> 55\nProbability 100.00%" ];
	Node0x6000039dcc30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170" fontname="Courier",label="{53:\l|  call void @__assert_rtn(ptr noundef @__func__.BF_newPartHolder, ptr\l... noundef @.str, i32 noundef 448, ptr noundef @.str.6) #8\l  unreachable\l}"];
	Node0x6000039dcc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370" fontname="Courier",label="{54:\l|  br label %56\l}"];
	Node0x6000039dcc80 -> Node0x6000039dcd20[tooltip="54 -> 56\nProbability 100.00%" ];
	Node0x6000039dccd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{55:\l|  br label %56\l}"];
	Node0x6000039dccd0 -> Node0x6000039dcd20[tooltip="55 -> 56\nProbability 100.00%" ];
	Node0x6000039dcd20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{56:\l|  br label %57\l}"];
	Node0x6000039dcd20 -> Node0x6000039dcd70[tooltip="56 -> 57\nProbability 100.00%" ];
	Node0x6000039dcd70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{57:\l|  %58 = load ptr, ptr %3, align 8\l  %59 = getelementptr inbounds %struct.BF_PartHolder, ptr %58, i32 0, i32 1\l  %60 = load ptr, ptr %59, align 8\l  %61 = getelementptr inbounds %struct.BF_BitstreamPart, ptr %60, i32 0, i32 0\l  store i32 0, ptr %61, align 8\l  %62 = load ptr, ptr %3, align 8\l  ret ptr %62\l}"];
}
