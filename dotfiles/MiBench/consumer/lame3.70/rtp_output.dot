digraph "CFG for 'rtp_output' function" {
	label="CFG for 'rtp_output' function";

	Node0x600001b0e0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca i32, align 4\l  store ptr %0, ptr %3, align 8\l  store i32 %1, ptr %4, align 4\l  %5 = load i32, ptr @rtpsocket, align 4\l  %6 = load ptr, ptr %3, align 8\l  %7 = load i32, ptr %4, align 4\l  %8 = call i32 @sendrtp(i32 noundef %5, ptr noundef @rtpsi, ptr noundef\l... @RTPheader, ptr noundef %6, i32 noundef %7)\l  %9 = load i32, ptr getelementptr inbounds (%struct.rtpheader, ptr\l... @RTPheader, i32 0, i32 1), align 4\l  %10 = add nsw i32 %9, 5\l  store i32 %10, ptr getelementptr inbounds (%struct.rtpheader, ptr\l... @RTPheader, i32 0, i32 1), align 4\l  %11 = load i32, ptr @RTPheader, align 4\l  %12 = shl i32 %11, 16\l  %13 = ashr i32 %12, 16\l  %14 = add nsw i32 %13, 1\l  %15 = load i32, ptr @RTPheader, align 4\l  %16 = and i32 %14, 65535\l  %17 = and i32 %15, -65536\l  %18 = or i32 %17, %16\l  store i32 %18, ptr @RTPheader, align 4\l  %19 = shl i32 %16, 16\l  %20 = ashr i32 %19, 16\l  ret void\l}"];
}
