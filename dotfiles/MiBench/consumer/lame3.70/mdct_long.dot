digraph "CFG for 'mdct_long' function" {
	label="CFG for 'mdct_long' function";

	Node0x60000001d770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca double, align 8\l  %6 = alloca double, align 8\l  %7 = alloca double, align 8\l  %8 = alloca double, align 8\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca ptr, align 8\l  store ptr %0, ptr %3, align 8\l  store ptr %1, ptr %4, align 8\l  store i32 11, ptr %11, align 4\l  store ptr @cos_l, ptr %12, align 8\l  br label %13\l}"];
	Node0x60000001d770 -> Node0x60000001dae0[tooltip="2 -> 13\nProbability 100.00%" ];
	Node0x60000001dae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{13:\l|  %14 = load ptr, ptr %4, align 8\l  %15 = getelementptr inbounds double, ptr %14, i64 0\l  %16 = load double, ptr %15, align 8\l  %17 = load ptr, ptr %12, align 8\l  %18 = getelementptr inbounds double, ptr %17, i64 0\l  %19 = load double, ptr %18, align 8\l  %20 = load ptr, ptr %4, align 8\l  %21 = getelementptr inbounds double, ptr %20, i64 1\l  %22 = load double, ptr %21, align 8\l  %23 = load ptr, ptr %12, align 8\l  %24 = getelementptr inbounds double, ptr %23, i64 1\l  %25 = load double, ptr %24, align 8\l  %26 = fmul double %22, %25\l  %27 = call double @llvm.fmuladd.f64(double %16, double %19, double %26)\l  %28 = load ptr, ptr %4, align 8\l  %29 = getelementptr inbounds double, ptr %28, i64 2\l  %30 = load double, ptr %29, align 8\l  %31 = load ptr, ptr %12, align 8\l  %32 = getelementptr inbounds double, ptr %31, i64 2\l  %33 = load double, ptr %32, align 8\l  %34 = call double @llvm.fmuladd.f64(double %30, double %33, double %27)\l  %35 = load ptr, ptr %4, align 8\l  %36 = getelementptr inbounds double, ptr %35, i64 3\l  %37 = load double, ptr %36, align 8\l  %38 = load ptr, ptr %12, align 8\l  %39 = getelementptr inbounds double, ptr %38, i64 3\l  %40 = load double, ptr %39, align 8\l  %41 = call double @llvm.fmuladd.f64(double %37, double %40, double %34)\l  %42 = load ptr, ptr %4, align 8\l  %43 = getelementptr inbounds double, ptr %42, i64 4\l  %44 = load double, ptr %43, align 8\l  %45 = load ptr, ptr %12, align 8\l  %46 = getelementptr inbounds double, ptr %45, i64 4\l  %47 = load double, ptr %46, align 8\l  %48 = call double @llvm.fmuladd.f64(double %44, double %47, double %41)\l  %49 = load ptr, ptr %4, align 8\l  %50 = getelementptr inbounds double, ptr %49, i64 5\l  %51 = load double, ptr %50, align 8\l  %52 = load ptr, ptr %12, align 8\l  %53 = getelementptr inbounds double, ptr %52, i64 5\l  %54 = load double, ptr %53, align 8\l  %55 = call double @llvm.fmuladd.f64(double %51, double %54, double %48)\l  %56 = load ptr, ptr %4, align 8\l  %57 = getelementptr inbounds double, ptr %56, i64 6\l  %58 = load double, ptr %57, align 8\l  %59 = load ptr, ptr %12, align 8\l  %60 = getelementptr inbounds double, ptr %59, i64 6\l  %61 = load double, ptr %60, align 8\l  %62 = call double @llvm.fmuladd.f64(double %58, double %61, double %55)\l  %63 = load ptr, ptr %4, align 8\l  %64 = getelementptr inbounds double, ptr %63, i64 7\l  %65 = load double, ptr %64, align 8\l  %66 = load ptr, ptr %12, align 8\l  %67 = getelementptr inbounds double, ptr %66, i64 7\l  %68 = load double, ptr %67, align 8\l  %69 = call double @llvm.fmuladd.f64(double %65, double %68, double %62)\l  %70 = load ptr, ptr %4, align 8\l  %71 = getelementptr inbounds double, ptr %70, i64 8\l  %72 = load double, ptr %71, align 8\l  %73 = load ptr, ptr %12, align 8\l  %74 = getelementptr inbounds double, ptr %73, i64 8\l  %75 = load double, ptr %74, align 8\l  %76 = call double @llvm.fmuladd.f64(double %72, double %75, double %69)\l  %77 = load ptr, ptr %4, align 8\l  %78 = getelementptr inbounds double, ptr %77, i64 9\l  %79 = load double, ptr %78, align 8\l  %80 = load ptr, ptr %12, align 8\l  %81 = getelementptr inbounds double, ptr %80, i64 9\l  %82 = load double, ptr %81, align 8\l  %83 = call double @llvm.fmuladd.f64(double %79, double %82, double %76)\l  %84 = load ptr, ptr %4, align 8\l  %85 = getelementptr inbounds double, ptr %84, i64 10\l  %86 = load double, ptr %85, align 8\l  %87 = load ptr, ptr %12, align 8\l  %88 = getelementptr inbounds double, ptr %87, i64 10\l  %89 = load double, ptr %88, align 8\l  %90 = call double @llvm.fmuladd.f64(double %86, double %89, double %83)\l  %91 = load ptr, ptr %4, align 8\l  %92 = getelementptr inbounds double, ptr %91, i64 11\l  %93 = load double, ptr %92, align 8\l  %94 = load ptr, ptr %12, align 8\l  %95 = getelementptr inbounds double, ptr %94, i64 11\l  %96 = load double, ptr %95, align 8\l  %97 = call double @llvm.fmuladd.f64(double %93, double %96, double %90)\l  %98 = load ptr, ptr %4, align 8\l  %99 = getelementptr inbounds double, ptr %98, i64 12\l  %100 = load double, ptr %99, align 8\l  %101 = load ptr, ptr %12, align 8\l  %102 = getelementptr inbounds double, ptr %101, i64 12\l  %103 = load double, ptr %102, align 8\l  %104 = call double @llvm.fmuladd.f64(double %100, double %103, double %97)\l  %105 = load ptr, ptr %4, align 8\l  %106 = getelementptr inbounds double, ptr %105, i64 13\l  %107 = load double, ptr %106, align 8\l  %108 = load ptr, ptr %12, align 8\l  %109 = getelementptr inbounds double, ptr %108, i64 13\l  %110 = load double, ptr %109, align 8\l  %111 = call double @llvm.fmuladd.f64(double %107, double %110, double %104)\l  %112 = load ptr, ptr %4, align 8\l  %113 = getelementptr inbounds double, ptr %112, i64 14\l  %114 = load double, ptr %113, align 8\l  %115 = load ptr, ptr %12, align 8\l  %116 = getelementptr inbounds double, ptr %115, i64 14\l  %117 = load double, ptr %116, align 8\l  %118 = call double @llvm.fmuladd.f64(double %114, double %117, double %111)\l  %119 = load ptr, ptr %4, align 8\l  %120 = getelementptr inbounds double, ptr %119, i64 15\l  %121 = load double, ptr %120, align 8\l  %122 = load ptr, ptr %12, align 8\l  %123 = getelementptr inbounds double, ptr %122, i64 15\l  %124 = load double, ptr %123, align 8\l  %125 = call double @llvm.fmuladd.f64(double %121, double %124, double %118)\l  %126 = load ptr, ptr %4, align 8\l  %127 = getelementptr inbounds double, ptr %126, i64 16\l  %128 = load double, ptr %127, align 8\l  %129 = load ptr, ptr %12, align 8\l  %130 = getelementptr inbounds double, ptr %129, i64 16\l  %131 = load double, ptr %130, align 8\l  %132 = call double @llvm.fmuladd.f64(double %128, double %131, double %125)\l  %133 = load ptr, ptr %4, align 8\l  %134 = getelementptr inbounds double, ptr %133, i64 17\l  %135 = load double, ptr %134, align 8\l  %136 = load ptr, ptr %12, align 8\l  %137 = getelementptr inbounds double, ptr %136, i64 17\l  %138 = load double, ptr %137, align 8\l  %139 = call double @llvm.fmuladd.f64(double %135, double %138, double %132)\l  %140 = load ptr, ptr %3, align 8\l  %141 = load i32, ptr %11, align 4\l  %142 = sext i32 %141 to i64\l  %143 = getelementptr inbounds [12 x i32], ptr @all, i64 0, i64 %142\l  %144 = load i32, ptr %143, align 4\l  %145 = sext i32 %144 to i64\l  %146 = getelementptr inbounds double, ptr %140, i64 %145\l  store double %139, ptr %146, align 8\l  %147 = load ptr, ptr %12, align 8\l  %148 = getelementptr inbounds double, ptr %147, i64 18\l  store ptr %148, ptr %12, align 8\l  br label %149\l}"];
	Node0x60000001dae0 -> Node0x60000001db30[tooltip="13 -> 149\nProbability 100.00%" ];
	Node0x60000001db30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{149:\l|  %150 = load i32, ptr %11, align 4\l  %151 = add nsw i32 %150, -1\l  store i32 %151, ptr %11, align 4\l  %152 = icmp sge i32 %151, 0\l  br i1 %152, label %13, label %153, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x60000001db30:s0 -> Node0x60000001dae0[tooltip="149 -> 13\nProbability 96.88%" ];
	Node0x60000001db30:s1 -> Node0x60000001db80[tooltip="149 -> 153\nProbability 3.12%" ];
	Node0x60000001db80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{153:\l|  %154 = load ptr, ptr %4, align 8\l  %155 = getelementptr inbounds double, ptr %154, i64 0\l  %156 = load double, ptr %155, align 8\l  %157 = load ptr, ptr %4, align 8\l  %158 = getelementptr inbounds double, ptr %157, i64 5\l  %159 = load double, ptr %158, align 8\l  %160 = fadd double %156, %159\l  %161 = load ptr, ptr %4, align 8\l  %162 = getelementptr inbounds double, ptr %161, i64 15\l  %163 = load double, ptr %162, align 8\l  %164 = fadd double %160, %163\l  store double %164, ptr %5, align 8\l  %165 = load ptr, ptr %4, align 8\l  %166 = getelementptr inbounds double, ptr %165, i64 1\l  %167 = load double, ptr %166, align 8\l  %168 = load ptr, ptr %4, align 8\l  %169 = getelementptr inbounds double, ptr %168, i64 4\l  %170 = load double, ptr %169, align 8\l  %171 = fadd double %167, %170\l  %172 = load ptr, ptr %4, align 8\l  %173 = getelementptr inbounds double, ptr %172, i64 16\l  %174 = load double, ptr %173, align 8\l  %175 = fadd double %171, %174\l  store double %175, ptr %6, align 8\l  %176 = load ptr, ptr %4, align 8\l  %177 = getelementptr inbounds double, ptr %176, i64 2\l  %178 = load double, ptr %177, align 8\l  %179 = load ptr, ptr %4, align 8\l  %180 = getelementptr inbounds double, ptr %179, i64 3\l  %181 = load double, ptr %180, align 8\l  %182 = fadd double %178, %181\l  %183 = load ptr, ptr %4, align 8\l  %184 = getelementptr inbounds double, ptr %183, i64 17\l  %185 = load double, ptr %184, align 8\l  %186 = fadd double %182, %185\l  store double %186, ptr %7, align 8\l  %187 = load ptr, ptr %4, align 8\l  %188 = getelementptr inbounds double, ptr %187, i64 6\l  %189 = load double, ptr %188, align 8\l  %190 = load ptr, ptr %4, align 8\l  %191 = getelementptr inbounds double, ptr %190, i64 9\l  %192 = load double, ptr %191, align 8\l  %193 = fsub double %189, %192\l  %194 = load ptr, ptr %4, align 8\l  %195 = getelementptr inbounds double, ptr %194, i64 14\l  %196 = load double, ptr %195, align 8\l  %197 = fadd double %193, %196\l  store double %197, ptr %8, align 8\l  %198 = load ptr, ptr %4, align 8\l  %199 = getelementptr inbounds double, ptr %198, i64 7\l  %200 = load double, ptr %199, align 8\l  %201 = load ptr, ptr %4, align 8\l  %202 = getelementptr inbounds double, ptr %201, i64 10\l  %203 = load double, ptr %202, align 8\l  %204 = fsub double %200, %203\l  %205 = load ptr, ptr %4, align 8\l  %206 = getelementptr inbounds double, ptr %205, i64 13\l  %207 = load double, ptr %206, align 8\l  %208 = fadd double %204, %207\l  store double %208, ptr %9, align 8\l  %209 = load ptr, ptr %4, align 8\l  %210 = getelementptr inbounds double, ptr %209, i64 8\l  %211 = load double, ptr %210, align 8\l  %212 = load ptr, ptr %4, align 8\l  %213 = getelementptr inbounds double, ptr %212, i64 11\l  %214 = load double, ptr %213, align 8\l  %215 = fsub double %211, %214\l  %216 = load ptr, ptr %4, align 8\l  %217 = getelementptr inbounds double, ptr %216, i64 12\l  %218 = load double, ptr %217, align 8\l  %219 = fadd double %215, %218\l  store double %219, ptr %10, align 8\l  %220 = load double, ptr %5, align 8\l  %221 = load ptr, ptr %12, align 8\l  %222 = getelementptr inbounds double, ptr %221, i64 0\l  %223 = load double, ptr %222, align 8\l  %224 = load double, ptr %6, align 8\l  %225 = load ptr, ptr %12, align 8\l  %226 = getelementptr inbounds double, ptr %225, i64 1\l  %227 = load double, ptr %226, align 8\l  %228 = fmul double %224, %227\l  %229 = call double @llvm.fmuladd.f64(double %220, double %223, double %228)\l  %230 = load double, ptr %7, align 8\l  %231 = load ptr, ptr %12, align 8\l  %232 = getelementptr inbounds double, ptr %231, i64 2\l  %233 = load double, ptr %232, align 8\l  %234 = call double @llvm.fmuladd.f64(double %230, double %233, double %229)\l  %235 = load double, ptr %8, align 8\l  %236 = load ptr, ptr %12, align 8\l  %237 = getelementptr inbounds double, ptr %236, i64 3\l  %238 = load double, ptr %237, align 8\l  %239 = call double @llvm.fmuladd.f64(double %235, double %238, double %234)\l  %240 = load double, ptr %9, align 8\l  %241 = load ptr, ptr %12, align 8\l  %242 = getelementptr inbounds double, ptr %241, i64 4\l  %243 = load double, ptr %242, align 8\l  %244 = call double @llvm.fmuladd.f64(double %240, double %243, double %239)\l  %245 = load double, ptr %10, align 8\l  %246 = load ptr, ptr %12, align 8\l  %247 = getelementptr inbounds double, ptr %246, i64 5\l  %248 = load double, ptr %247, align 8\l  %249 = call double @llvm.fmuladd.f64(double %245, double %248, double %244)\l  %250 = load ptr, ptr %3, align 8\l  %251 = getelementptr inbounds double, ptr %250, i64 16\l  store double %249, ptr %251, align 8\l  %252 = load ptr, ptr %12, align 8\l  %253 = getelementptr inbounds double, ptr %252, i64 6\l  store ptr %253, ptr %12, align 8\l  %254 = load double, ptr %5, align 8\l  %255 = load ptr, ptr %12, align 8\l  %256 = getelementptr inbounds double, ptr %255, i64 0\l  %257 = load double, ptr %256, align 8\l  %258 = load double, ptr %6, align 8\l  %259 = load ptr, ptr %12, align 8\l  %260 = getelementptr inbounds double, ptr %259, i64 1\l  %261 = load double, ptr %260, align 8\l  %262 = fmul double %258, %261\l  %263 = call double @llvm.fmuladd.f64(double %254, double %257, double %262)\l  %264 = load double, ptr %7, align 8\l  %265 = load ptr, ptr %12, align 8\l  %266 = getelementptr inbounds double, ptr %265, i64 2\l  %267 = load double, ptr %266, align 8\l  %268 = call double @llvm.fmuladd.f64(double %264, double %267, double %263)\l  %269 = load double, ptr %8, align 8\l  %270 = load ptr, ptr %12, align 8\l  %271 = getelementptr inbounds double, ptr %270, i64 3\l  %272 = load double, ptr %271, align 8\l  %273 = call double @llvm.fmuladd.f64(double %269, double %272, double %268)\l  %274 = load double, ptr %9, align 8\l  %275 = load ptr, ptr %12, align 8\l  %276 = getelementptr inbounds double, ptr %275, i64 4\l  %277 = load double, ptr %276, align 8\l  %278 = call double @llvm.fmuladd.f64(double %274, double %277, double %273)\l  %279 = load double, ptr %10, align 8\l  %280 = load ptr, ptr %12, align 8\l  %281 = getelementptr inbounds double, ptr %280, i64 5\l  %282 = load double, ptr %281, align 8\l  %283 = call double @llvm.fmuladd.f64(double %279, double %282, double %278)\l  %284 = load ptr, ptr %3, align 8\l  %285 = getelementptr inbounds double, ptr %284, i64 10\l  store double %283, ptr %285, align 8\l  %286 = load ptr, ptr %12, align 8\l  %287 = getelementptr inbounds double, ptr %286, i64 6\l  store ptr %287, ptr %12, align 8\l  %288 = load double, ptr %5, align 8\l  %289 = load ptr, ptr %12, align 8\l  %290 = getelementptr inbounds double, ptr %289, i64 0\l  %291 = load double, ptr %290, align 8\l  %292 = load double, ptr %6, align 8\l  %293 = load ptr, ptr %12, align 8\l  %294 = getelementptr inbounds double, ptr %293, i64 1\l  %295 = load double, ptr %294, align 8\l  %296 = fmul double %292, %295\l  %297 = call double @llvm.fmuladd.f64(double %288, double %291, double %296)\l  %298 = load double, ptr %7, align 8\l  %299 = load ptr, ptr %12, align 8\l  %300 = getelementptr inbounds double, ptr %299, i64 2\l  %301 = load double, ptr %300, align 8\l  %302 = call double @llvm.fmuladd.f64(double %298, double %301, double %297)\l  %303 = load double, ptr %8, align 8\l  %304 = load ptr, ptr %12, align 8\l  %305 = getelementptr inbounds double, ptr %304, i64 3\l  %306 = load double, ptr %305, align 8\l  %307 = call double @llvm.fmuladd.f64(double %303, double %306, double %302)\l  %308 = load double, ptr %9, align 8\l  %309 = load ptr, ptr %12, align 8\l  %310 = getelementptr inbounds double, ptr %309, i64 4\l  %311 = load double, ptr %310, align 8\l  %312 = call double @llvm.fmuladd.f64(double %308, double %311, double %307)\l  %313 = load double, ptr %10, align 8\l  %314 = load ptr, ptr %12, align 8\l  %315 = getelementptr inbounds double, ptr %314, i64 5\l  %316 = load double, ptr %315, align 8\l  %317 = call double @llvm.fmuladd.f64(double %313, double %316, double %312)\l  %318 = load ptr, ptr %3, align 8\l  %319 = getelementptr inbounds double, ptr %318, i64 7\l  store double %317, ptr %319, align 8\l  %320 = load ptr, ptr %12, align 8\l  %321 = getelementptr inbounds double, ptr %320, i64 6\l  store ptr %321, ptr %12, align 8\l  %322 = load double, ptr %5, align 8\l  %323 = load ptr, ptr %12, align 8\l  %324 = getelementptr inbounds double, ptr %323, i64 0\l  %325 = load double, ptr %324, align 8\l  %326 = load double, ptr %6, align 8\l  %327 = load ptr, ptr %12, align 8\l  %328 = getelementptr inbounds double, ptr %327, i64 1\l  %329 = load double, ptr %328, align 8\l  %330 = fmul double %326, %329\l  %331 = call double @llvm.fmuladd.f64(double %322, double %325, double %330)\l  %332 = load double, ptr %7, align 8\l  %333 = load ptr, ptr %12, align 8\l  %334 = getelementptr inbounds double, ptr %333, i64 2\l  %335 = load double, ptr %334, align 8\l  %336 = call double @llvm.fmuladd.f64(double %332, double %335, double %331)\l  %337 = load double, ptr %8, align 8\l  %338 = load ptr, ptr %12, align 8\l  %339 = getelementptr inbounds double, ptr %338, i64 3\l  %340 = load double, ptr %339, align 8\l  %341 = call double @llvm.fmuladd.f64(double %337, double %340, double %336)\l  %342 = load double, ptr %9, align 8\l  %343 = load ptr, ptr %12, align 8\l  %344 = getelementptr inbounds double, ptr %343, i64 4\l  %345 = load double, ptr %344, align 8\l  %346 = call double @llvm.fmuladd.f64(double %342, double %345, double %341)\l  %347 = load double, ptr %10, align 8\l  %348 = load ptr, ptr %12, align 8\l  %349 = getelementptr inbounds double, ptr %348, i64 5\l  %350 = load double, ptr %349, align 8\l  %351 = call double @llvm.fmuladd.f64(double %347, double %350, double %346)\l  %352 = load ptr, ptr %3, align 8\l  %353 = getelementptr inbounds double, ptr %352, i64 1\l  store double %351, ptr %353, align 8\l  %354 = load ptr, ptr %12, align 8\l  %355 = getelementptr inbounds double, ptr %354, i64 6\l  store ptr %355, ptr %12, align 8\l  %356 = load double, ptr %5, align 8\l  %357 = load double, ptr %6, align 8\l  %358 = fsub double %356, %357\l  %359 = load double, ptr %10, align 8\l  %360 = fadd double %358, %359\l  store double %360, ptr %5, align 8\l  %361 = load double, ptr %7, align 8\l  %362 = load double, ptr %8, align 8\l  %363 = fsub double %361, %362\l  %364 = load double, ptr %9, align 8\l  %365 = fsub double %363, %364\l  store double %365, ptr %7, align 8\l  %366 = load double, ptr %5, align 8\l  %367 = load ptr, ptr %12, align 8\l  %368 = getelementptr inbounds double, ptr %367, i64 0\l  %369 = load double, ptr %368, align 8\l  %370 = load double, ptr %7, align 8\l  %371 = load ptr, ptr %12, align 8\l  %372 = getelementptr inbounds double, ptr %371, i64 1\l  %373 = load double, ptr %372, align 8\l  %374 = fmul double %370, %373\l  %375 = call double @llvm.fmuladd.f64(double %366, double %369, double %374)\l  %376 = load ptr, ptr %3, align 8\l  %377 = getelementptr inbounds double, ptr %376, i64 13\l  store double %375, ptr %377, align 8\l  %378 = load double, ptr %5, align 8\l  %379 = load ptr, ptr %12, align 8\l  %380 = getelementptr inbounds double, ptr %379, i64 2\l  %381 = load double, ptr %380, align 8\l  %382 = load double, ptr %7, align 8\l  %383 = load ptr, ptr %12, align 8\l  %384 = getelementptr inbounds double, ptr %383, i64 3\l  %385 = load double, ptr %384, align 8\l  %386 = fmul double %382, %385\l  %387 = call double @llvm.fmuladd.f64(double %378, double %381, double %386)\l  %388 = load ptr, ptr %3, align 8\l  %389 = getelementptr inbounds double, ptr %388, i64 4\l  store double %387, ptr %389, align 8\l  ret void\l}"];
}
