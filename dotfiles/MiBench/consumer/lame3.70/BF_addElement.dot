digraph "CFG for 'BF_addElement' function" {
	label="CFG for 'BF_addElement' function";

	Node0x6000039dd090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store ptr %0, ptr %3, align 8\l  store ptr %1, ptr %4, align 8\l  %8 = load ptr, ptr %3, align 8\l  store ptr %8, ptr %5, align 8\l  %9 = load ptr, ptr %3, align 8\l  %10 = getelementptr inbounds %struct.BF_PartHolder, ptr %9, i32 0, i32 1\l  %11 = load ptr, ptr %10, align 8\l  %12 = getelementptr inbounds %struct.BF_BitstreamPart, ptr %11, i32 0, i32 0\l  %13 = load i32, ptr %12, align 8\l  %14 = add i32 %13, 1\l  store i32 %14, ptr %6, align 4\l  store i32 8, ptr %7, align 4\l  %15 = load i32, ptr %6, align 4\l  %16 = load ptr, ptr %3, align 8\l  %17 = getelementptr inbounds %struct.BF_PartHolder, ptr %16, i32 0, i32 0\l  %18 = load i32, ptr %17, align 8\l  %19 = icmp sgt i32 %15, %18\l  br i1 %19, label %20, label %26\l|{<s0>T|<s1>F}}"];
	Node0x6000039dd090:s0 -> Node0x6000039dd0e0[tooltip="2 -> 20\nProbability 50.00%" ];
	Node0x6000039dd090:s1 -> Node0x6000039dd130[tooltip="2 -> 26\nProbability 50.00%" ];
	Node0x6000039dd0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{20:\l|  %21 = load ptr, ptr %3, align 8\l  %22 = load i32, ptr %6, align 4\l  %23 = load i32, ptr %7, align 4\l  %24 = add nsw i32 %22, %23\l  %25 = call ptr @BF_resizePartHolder(ptr noundef %21, i32 noundef %24)\l  store ptr %25, ptr %5, align 8\l  br label %26\l}"];
	Node0x6000039dd0e0 -> Node0x6000039dd130[tooltip="20 -> 26\nProbability 100.00%" ];
	Node0x6000039dd130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{26:\l|  %27 = load ptr, ptr %5, align 8\l  %28 = getelementptr inbounds %struct.BF_PartHolder, ptr %27, i32 0, i32 1\l  %29 = load ptr, ptr %28, align 8\l  %30 = getelementptr inbounds %struct.BF_BitstreamPart, ptr %29, i32 0, i32 1\l  %31 = load ptr, ptr %30, align 8\l  %32 = load ptr, ptr %5, align 8\l  %33 = getelementptr inbounds %struct.BF_PartHolder, ptr %32, i32 0, i32 1\l  %34 = load ptr, ptr %33, align 8\l  %35 = getelementptr inbounds %struct.BF_BitstreamPart, ptr %34, i32 0, i32 0\l  %36 = load i32, ptr %35, align 8\l  %37 = add i32 %36, 1\l  store i32 %37, ptr %35, align 8\l  %38 = zext i32 %36 to i64\l  %39 = getelementptr inbounds %struct.BF_BitstreamElement, ptr %31, i64 %38\l  %40 = load ptr, ptr %4, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %39, ptr align 4 %40, i64 8, i1\l... false)\l  %41 = load ptr, ptr %5, align 8\l  ret ptr %41\l}"];
}
