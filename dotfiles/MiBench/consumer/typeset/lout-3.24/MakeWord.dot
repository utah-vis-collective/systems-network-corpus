digraph "CFG for 'MakeWord' function" {
	label="CFG for 'MakeWord' function";

	Node0x6000028c84b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca i32, align 4\l  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  store i32 %0, ptr %4, align 4\l  store ptr %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %8 = load ptr, ptr %5, align 8\l  %9 = call i64 @strlen(ptr noundef %8) #4\l  %10 = add i64 %9, 1\l  %11 = mul i64 %10, 1\l  %12 = add i64 68, %11\l  %13 = trunc i64 %12 to i32\l  store i32 %13, ptr @zz_size, align 4\l  %14 = load i32, ptr @zz_size, align 4\l  %15 = sub nsw i32 %14, 1\l  %16 = sext i32 %15 to i64\l  %17 = udiv i64 %16, 8\l  %18 = add i64 %17, 1\l  %19 = trunc i64 %18 to i32\l  store i32 %19, ptr @zz_size, align 4\l  %20 = sext i32 %19 to i64\l  %21 = icmp uge i64 %20, 265\l  br i1 %21, label %22, label %25\l|{<s0>T|<s1>F}}"];
	Node0x6000028c84b0:s0 -> Node0x6000028c8910[tooltip="3 -> 22\nProbability 50.00%" ];
	Node0x6000028c84b0:s1 -> Node0x6000028c8960[tooltip="3 -> 25\nProbability 50.00%" ];
	Node0x6000028c8910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{22:\l|  %23 = load ptr, ptr %6, align 8\l  %24 = call ptr (i32, i32, ptr, i32, ptr, ...) @Error(i32 noundef 1, i32\l... noundef 1, ptr noundef @.str, i32 noundef 1, ptr noundef %23)\l  br label %49\l}"];
	Node0x6000028c8910 -> Node0x6000028c8aa0[tooltip="22 -> 49\nProbability 100.00%" ];
	Node0x6000028c8960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{25:\l|  %26 = load i32, ptr @zz_size, align 4\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds [0 x ptr], ptr @zz_free, i64 0, i64 %27\l  %29 = load ptr, ptr %28, align 8\l  %30 = icmp eq ptr %29, null\l  br i1 %30, label %31, label %35\l|{<s0>T|<s1>F}}"];
	Node0x6000028c8960:s0 -> Node0x6000028c89b0[tooltip="25 -> 31\nProbability 37.50%" ];
	Node0x6000028c8960:s1 -> Node0x6000028c8a00[tooltip="25 -> 35\nProbability 62.50%" ];
	Node0x6000028c89b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{31:\l|  %32 = load i32, ptr @zz_size, align 4\l  %33 = load ptr, ptr %6, align 8\l  %34 = call ptr @GetMemory(i32 noundef %32, ptr noundef %33)\l  store ptr %34, ptr @zz_hold, align 8\l  br label %48\l}"];
	Node0x6000028c89b0 -> Node0x6000028c8a50[tooltip="31 -> 48\nProbability 100.00%" ];
	Node0x6000028c8a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{35:\l|  %36 = load i32, ptr @zz_size, align 4\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds [0 x ptr], ptr @zz_free, i64 0, i64 %37\l  %39 = load ptr, ptr %38, align 8\l  store ptr %39, ptr @zz_hold, align 8\l  store ptr %39, ptr @zz_hold, align 8\l  %40 = load ptr, ptr @zz_hold, align 8\l  %41 = getelementptr inbounds %struct.word_type, ptr %40, i32 0, i32 0\l  %42 = getelementptr inbounds [2 x %struct.LIST], ptr %41, i64 0, i64 0\l  %43 = getelementptr inbounds %struct.LIST, ptr %42, i32 0, i32 0\l  %44 = load ptr, ptr %43, align 8\l  %45 = load i32, ptr @zz_size, align 4\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds [0 x ptr], ptr @zz_free, i64 0, i64 %46\l  store ptr %44, ptr %47, align 8\l  br label %48\l}"];
	Node0x6000028c8a00 -> Node0x6000028c8a50[tooltip="35 -> 48\nProbability 100.00%" ];
	Node0x6000028c8a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{48:\l|  br label %49\l}"];
	Node0x6000028c8a50 -> Node0x6000028c8aa0[tooltip="48 -> 49\nProbability 100.00%" ];
	Node0x6000028c8aa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{49:\l|  %50 = load i32, ptr @zz_size, align 4\l  %51 = trunc i32 %50 to i8\l  %52 = load ptr, ptr @zz_hold, align 8\l  %53 = getelementptr inbounds %struct.word_type, ptr %52, i32 0, i32 1\l  %54 = getelementptr inbounds %struct.anon, ptr %53, i32 0, i32 1\l  store i8 %51, ptr %54, align 1\l  %55 = load i32, ptr %4, align 4\l  %56 = trunc i32 %55 to i8\l  %57 = load ptr, ptr @zz_hold, align 8\l  %58 = getelementptr inbounds %struct.word_type, ptr %57, i32 0, i32 1\l  %59 = getelementptr inbounds %struct.anon, ptr %58, i32 0, i32 0\l  store i8 %56, ptr %59, align 8\l  %60 = load ptr, ptr @zz_hold, align 8\l  %61 = load ptr, ptr @zz_hold, align 8\l  %62 = getelementptr inbounds %struct.word_type, ptr %61, i32 0, i32 0\l  %63 = getelementptr inbounds [2 x %struct.LIST], ptr %62, i64 0, i64 1\l  %64 = getelementptr inbounds %struct.LIST, ptr %63, i32 0, i32 1\l  store ptr %60, ptr %64, align 8\l  %65 = load ptr, ptr @zz_hold, align 8\l  %66 = getelementptr inbounds %struct.word_type, ptr %65, i32 0, i32 0\l  %67 = getelementptr inbounds [2 x %struct.LIST], ptr %66, i64 0, i64 1\l  %68 = getelementptr inbounds %struct.LIST, ptr %67, i32 0, i32 0\l  store ptr %60, ptr %68, align 8\l  %69 = load ptr, ptr @zz_hold, align 8\l  %70 = getelementptr inbounds %struct.word_type, ptr %69, i32 0, i32 0\l  %71 = getelementptr inbounds [2 x %struct.LIST], ptr %70, i64 0, i64 0\l  %72 = getelementptr inbounds %struct.LIST, ptr %71, i32 0, i32 1\l  store ptr %60, ptr %72, align 8\l  %73 = load ptr, ptr @zz_hold, align 8\l  %74 = getelementptr inbounds %struct.word_type, ptr %73, i32 0, i32 0\l  %75 = getelementptr inbounds [2 x %struct.LIST], ptr %74, i64 0, i64 0\l  %76 = getelementptr inbounds %struct.LIST, ptr %75, i32 0, i32 0\l  store ptr %60, ptr %76, align 8\l  store ptr %60, ptr %7, align 8\l  %77 = load ptr, ptr %7, align 8\l  %78 = getelementptr inbounds %struct.word_type, ptr %77, i32 0, i32 4\l  %79 = getelementptr inbounds [4 x i8], ptr %78, i64 0, i64 0\l  %80 = load ptr, ptr %5, align 8\l  %81 = load ptr, ptr %7, align 8\l  %82 = getelementptr inbounds %struct.word_type, ptr %81, i32 0, i32 4\l  %83 = getelementptr inbounds [4 x i8], ptr %82, i64 0, i64 0\l  %84 = call i64 @llvm.objectsize.i64.p0(ptr %83, i1 false, i1 true, i1 false)\l  %85 = call ptr @__strcpy_chk(ptr noundef %79, ptr noundef %80, i64 noundef\l... %84) #4\l  %86 = load ptr, ptr %6, align 8\l  %87 = getelementptr inbounds %struct.FILE_POS, ptr %86, i32 0, i32 2\l  %88 = load i16, ptr %87, align 2\l  %89 = load ptr, ptr %7, align 8\l  %90 = getelementptr inbounds %struct.word_type, ptr %89, i32 0, i32 1\l  %91 = getelementptr inbounds %struct.FILE_POS, ptr %90, i32 0, i32 2\l  store i16 %88, ptr %91, align 2\l  %92 = load ptr, ptr %6, align 8\l  %93 = getelementptr inbounds %struct.FILE_POS, ptr %92, i32 0, i32 3\l  %94 = load i32, ptr %93, align 4\l  %95 = and i32 %94, 1048575\l  %96 = load ptr, ptr %7, align 8\l  %97 = getelementptr inbounds %struct.word_type, ptr %96, i32 0, i32 1\l  %98 = getelementptr inbounds %struct.FILE_POS, ptr %97, i32 0, i32 3\l  %99 = load i32, ptr %98, align 4\l  %100 = and i32 %95, 1048575\l  %101 = and i32 %99, -1048576\l  %102 = or i32 %101, %100\l  store i32 %102, ptr %98, align 4\l  %103 = load ptr, ptr %6, align 8\l  %104 = getelementptr inbounds %struct.FILE_POS, ptr %103, i32 0, i32 3\l  %105 = load i32, ptr %104, align 4\l  %106 = lshr i32 %105, 20\l  %107 = load ptr, ptr %7, align 8\l  %108 = getelementptr inbounds %struct.word_type, ptr %107, i32 0, i32 1\l  %109 = getelementptr inbounds %struct.FILE_POS, ptr %108, i32 0, i32 3\l  %110 = load i32, ptr %109, align 4\l  %111 = and i32 %106, 4095\l  %112 = shl i32 %111, 20\l  %113 = and i32 %110, 1048575\l  %114 = or i32 %113, %112\l  store i32 %114, ptr %109, align 4\l  %115 = load ptr, ptr %7, align 8\l  ret ptr %115\l}"];
}
