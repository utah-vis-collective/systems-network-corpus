digraph "CFG for 'APCM_inverse_quantization' function" {
	label="CFG for 'APCM_inverse_quantization' function";

	Node0x600002d5bb10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{4:\l|  %5 = alloca ptr, align 8\l  %6 = alloca i16, align 2\l  %7 = alloca i16, align 2\l  %8 = alloca ptr, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i16, align 2\l  %11 = alloca i16, align 2\l  %12 = alloca i16, align 2\l  %13 = alloca i16, align 2\l  %14 = alloca i64, align 8\l  store ptr %0, ptr %5, align 8\l  store i16 %1, ptr %6, align 2\l  store i16 %2, ptr %7, align 2\l  store ptr %3, ptr %8, align 8\l  %15 = load i16, ptr %6, align 2\l  %16 = sext i16 %15 to i32\l  %17 = icmp sge i32 %16, 0\l  br i1 %17, label %18, label %22\l|{<s0>T|<s1>F}}"];
	Node0x600002d5bb10:s0 -> Node0x600002d5bf70[tooltip="4 -> 18\nProbability 50.00%" ];
	Node0x600002d5bb10:s1 -> Node0x600002d5c000[tooltip="4 -> 22\nProbability 50.00%" ];
	Node0x600002d5bf70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{18:\l|  %19 = load i16, ptr %6, align 2\l  %20 = sext i16 %19 to i32\l  %21 = icmp sle i32 %20, 7\l  br label %22\l}"];
	Node0x600002d5bf70 -> Node0x600002d5c000[tooltip="18 -> 22\nProbability 100.00%" ];
	Node0x600002d5c000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{22:\l|  %23 = phi i1 [ false, %4 ], [ %21, %18 ]\l  %24 = xor i1 %23, true\l  %25 = zext i1 %24 to i32\l  %26 = sext i32 %25 to i64\l  %27 = icmp ne i64 %26, 0\l  br i1 %27, label %28, label %30\l|{<s0>T|<s1>F}}"];
	Node0x600002d5c000:s0 -> Node0x600002d5c050[tooltip="22 -> 28\nProbability 0.00%" ];
	Node0x600002d5c000:s1 -> Node0x600002d5c0f0[tooltip="22 -> 30\nProbability 100.00%" ];
	Node0x600002d5c050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170" fontname="Courier",label="{28:\l|  call void @__assert_rtn(ptr noundef @__func__.APCM_inverse_quantization,\l... ptr noundef @.str, i32 noundef 364, ptr noundef @.str.5) #3\l  unreachable\l}"];
	Node0x600002d5c0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370" fontname="Courier",label="{29:\l|  br label %31\l}"];
	Node0x600002d5c0a0 -> Node0x600002d5c140[tooltip="29 -> 31\nProbability 100.00%" ];
	Node0x600002d5c0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{30:\l|  br label %31\l}"];
	Node0x600002d5c0f0 -> Node0x600002d5c140[tooltip="30 -> 31\nProbability 100.00%" ];
	Node0x600002d5c140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{31:\l|  %32 = load i16, ptr %6, align 2\l  %33 = sext i16 %32 to i64\l  %34 = getelementptr inbounds [8 x i16], ptr @gsm_FAC, i64 0, i64 %33\l  %35 = load i16, ptr %34, align 2\l  store i16 %35, ptr %11, align 2\l  %36 = load i16, ptr %7, align 2\l  %37 = call signext i16 @gsm_sub(i16 noundef signext 6, i16 noundef signext\l... %36)\l  store i16 %37, ptr %12, align 2\l  %38 = load i16, ptr %12, align 2\l  %39 = call signext i16 @gsm_sub(i16 noundef signext %38, i16 noundef signext\l... 1)\l  %40 = sext i16 %39 to i32\l  %41 = call signext i16 @gsm_asl(i16 noundef signext 1, i32 noundef %40)\l  store i16 %41, ptr %13, align 2\l  store i32 13, ptr %9, align 4\l  br label %42\l}"];
	Node0x600002d5c140 -> Node0x600002d5c190[tooltip="31 -> 42\nProbability 100.00%" ];
	Node0x600002d5c190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{42:\l|  %43 = load i32, ptr %9, align 4\l  %44 = add nsw i32 %43, -1\l  store i32 %44, ptr %9, align 4\l  %45 = icmp ne i32 %43, 0\l  br i1 %45, label %46, label %126\l|{<s0>T|<s1>F}}"];
	Node0x600002d5c190:s0 -> Node0x600002d5c1e0[tooltip="42 -> 46\nProbability 96.88%" ];
	Node0x600002d5c190:s1 -> Node0x600002d5c6e0[tooltip="42 -> 126\nProbability 3.12%" ];
	Node0x600002d5c1e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{46:\l|  %47 = load ptr, ptr %5, align 8\l  %48 = load i16, ptr %47, align 2\l  %49 = sext i16 %48 to i32\l  %50 = icmp sle i32 %49, 7\l  br i1 %50, label %51, label %56\l|{<s0>T|<s1>F}}"];
	Node0x600002d5c1e0:s0 -> Node0x600002d5c230[tooltip="46 -> 51\nProbability 50.00%" ];
	Node0x600002d5c1e0:s1 -> Node0x600002d5c280[tooltip="46 -> 56\nProbability 50.00%" ];
	Node0x600002d5c230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{51:\l|  %52 = load ptr, ptr %5, align 8\l  %53 = load i16, ptr %52, align 2\l  %54 = sext i16 %53 to i32\l  %55 = icmp sge i32 %54, 0\l  br label %56\l}"];
	Node0x600002d5c230 -> Node0x600002d5c280[tooltip="51 -> 56\nProbability 100.00%" ];
	Node0x600002d5c280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{56:\l|  %57 = phi i1 [ false, %46 ], [ %55, %51 ]\l  %58 = xor i1 %57, true\l  %59 = zext i1 %58 to i32\l  %60 = sext i32 %59 to i64\l  %61 = icmp ne i64 %60, 0\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x600002d5c280:s0 -> Node0x600002d5c2d0[tooltip="56 -> 62\nProbability 0.00%" ];
	Node0x600002d5c280:s1 -> Node0x600002d5c370[tooltip="56 -> 64\nProbability 100.00%" ];
	Node0x600002d5c2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70" fontname="Courier",label="{62:\l|  call void @__assert_rtn(ptr noundef @__func__.APCM_inverse_quantization,\l... ptr noundef @.str, i32 noundef 372, ptr noundef @.str.7) #3\l  unreachable\l}"];
	Node0x600002d5c320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370" fontname="Courier",label="{63:\l|  br label %65\l}"];
	Node0x600002d5c320 -> Node0x600002d5c3c0[tooltip="63 -> 65\nProbability 100.00%" ];
	Node0x600002d5c370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{64:\l|  br label %65\l}"];
	Node0x600002d5c370 -> Node0x600002d5c3c0[tooltip="64 -> 65\nProbability 100.00%" ];
	Node0x600002d5c3c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{65:\l|  %66 = load ptr, ptr %5, align 8\l  %67 = getelementptr inbounds i16, ptr %66, i32 1\l  store ptr %67, ptr %5, align 8\l  %68 = load i16, ptr %66, align 2\l  %69 = sext i16 %68 to i32\l  %70 = shl i32 %69, 1\l  %71 = sub nsw i32 %70, 7\l  %72 = trunc i32 %71 to i16\l  store i16 %72, ptr %10, align 2\l  %73 = load i16, ptr %10, align 2\l  %74 = sext i16 %73 to i32\l  %75 = icmp sle i32 %74, 7\l  br i1 %75, label %76, label %80\l|{<s0>T|<s1>F}}"];
	Node0x600002d5c3c0:s0 -> Node0x600002d5c410[tooltip="65 -> 76\nProbability 50.00%" ];
	Node0x600002d5c3c0:s1 -> Node0x600002d5c460[tooltip="65 -> 80\nProbability 50.00%" ];
	Node0x600002d5c410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{76:\l|  %77 = load i16, ptr %10, align 2\l  %78 = sext i16 %77 to i32\l  %79 = icmp sge i32 %78, -7\l  br label %80\l}"];
	Node0x600002d5c410 -> Node0x600002d5c460[tooltip="76 -> 80\nProbability 100.00%" ];
	Node0x600002d5c460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{80:\l|  %81 = phi i1 [ false, %65 ], [ %79, %76 ]\l  %82 = xor i1 %81, true\l  %83 = zext i1 %82 to i32\l  %84 = sext i32 %83 to i64\l  %85 = icmp ne i64 %84, 0\l  br i1 %85, label %86, label %88\l|{<s0>T|<s1>F}}"];
	Node0x600002d5c460:s0 -> Node0x600002d5c4b0[tooltip="80 -> 86\nProbability 0.00%" ];
	Node0x600002d5c460:s1 -> Node0x600002d5c550[tooltip="80 -> 88\nProbability 100.00%" ];
	Node0x600002d5c4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70" fontname="Courier",label="{86:\l|  call void @__assert_rtn(ptr noundef @__func__.APCM_inverse_quantization,\l... ptr noundef @.str, i32 noundef 376, ptr noundef @.str.8) #3\l  unreachable\l}"];
	Node0x600002d5c500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#3d50c370" fontname="Courier",label="{87:\l|  br label %89\l}"];
	Node0x600002d5c500 -> Node0x600002d5c5a0[tooltip="87 -> 89\nProbability 100.00%" ];
	Node0x600002d5c550 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{88:\l|  br label %89\l}"];
	Node0x600002d5c550 -> Node0x600002d5c5a0[tooltip="88 -> 89\nProbability 100.00%" ];
	Node0x600002d5c5a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{89:\l|  %90 = load i16, ptr %10, align 2\l  %91 = sext i16 %90 to i32\l  %92 = shl i32 %91, 12\l  %93 = trunc i32 %92 to i16\l  store i16 %93, ptr %10, align 2\l  %94 = load i16, ptr %11, align 2\l  %95 = sext i16 %94 to i64\l  %96 = load i16, ptr %10, align 2\l  %97 = sext i16 %96 to i64\l  %98 = mul nsw i64 %95, %97\l  %99 = add nsw i64 %98, 16384\l  %100 = call i32 @SASR(i64 noundef %99, i32 noundef 15)\l  %101 = trunc i32 %100 to i16\l  store i16 %101, ptr %10, align 2\l  %102 = load i16, ptr %10, align 2\l  %103 = sext i16 %102 to i64\l  %104 = load i16, ptr %13, align 2\l  %105 = sext i16 %104 to i64\l  %106 = add nsw i64 %103, %105\l  store i64 %106, ptr %14, align 8\l  %107 = sub nsw i64 %106, -32768\l  %108 = icmp ugt i64 %107, 65535\l  br i1 %108, label %109, label %115\l|{<s0>T|<s1>F}}"];
	Node0x600002d5c5a0:s0 -> Node0x600002d5c5f0[tooltip="89 -> 109\nProbability 50.00%" ];
	Node0x600002d5c5a0:s1 -> Node0x600002d5c640[tooltip="89 -> 115\nProbability 50.00%" ];
	Node0x600002d5c5f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{109:\l|  %110 = load i64, ptr %14, align 8\l  %111 = icmp sgt i64 %110, 0\l  %112 = zext i1 %111 to i64\l  %113 = select i1 %111, i32 32767, i32 -32768\l  %114 = sext i32 %113 to i64\l  br label %117\l}"];
	Node0x600002d5c5f0 -> Node0x600002d5c690[tooltip="109 -> 117\nProbability 100.00%" ];
	Node0x600002d5c640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{115:\l|  %116 = load i64, ptr %14, align 8\l  br label %117\l}"];
	Node0x600002d5c640 -> Node0x600002d5c690[tooltip="115 -> 117\nProbability 100.00%" ];
	Node0x600002d5c690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{117:\l|  %118 = phi i64 [ %114, %109 ], [ %116, %115 ]\l  %119 = trunc i64 %118 to i16\l  store i16 %119, ptr %10, align 2\l  %120 = load i16, ptr %10, align 2\l  %121 = load i16, ptr %12, align 2\l  %122 = sext i16 %121 to i32\l  %123 = call signext i16 @gsm_asr(i16 noundef signext %120, i32 noundef %122)\l  %124 = load ptr, ptr %8, align 8\l  %125 = getelementptr inbounds i16, ptr %124, i32 1\l  store ptr %125, ptr %8, align 8\l  store i16 %123, ptr %124, align 2\l  br label %42\l}"];
	Node0x600002d5c690 -> Node0x600002d5c190[tooltip="117 -> 42\nProbability 100.00%" ];
	Node0x600002d5c6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{126:\l|  ret void\l}"];
}
