digraph "CFG for 'adpcm_decoder' function" {
	label="CFG for 'adpcm_decoder' function";

	Node0x600002022850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{4:\l|  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca ptr, align 8\l  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  store ptr %0, ptr %5, align 8\l  store ptr %1, ptr %6, align 8\l  store i32 %2, ptr %7, align 4\l  store ptr %3, ptr %8, align 8\l  %19 = load ptr, ptr %6, align 8\l  store ptr %19, ptr %10, align 8\l  %20 = load ptr, ptr %5, align 8\l  store ptr %20, ptr %9, align 8\l  %21 = load ptr, ptr %8, align 8\l  %22 = getelementptr inbounds %struct.adpcm_state, ptr %21, i32 0, i32 0\l  %23 = load i16, ptr %22, align 2\l  %24 = sext i16 %23 to i32\l  store i32 %24, ptr %14, align 4\l  %25 = load ptr, ptr %8, align 8\l  %26 = getelementptr inbounds %struct.adpcm_state, ptr %25, i32 0, i32 1\l  %27 = load i8, ptr %26, align 2\l  %28 = sext i8 %27 to i32\l  store i32 %28, ptr %16, align 4\l  %29 = load i32, ptr %16, align 4\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds [89 x i32], ptr @stepsizeTable, i64 0, i64 %30\l  %32 = load i32, ptr %31, align 4\l  store i32 %32, ptr %13, align 4\l  store i32 0, ptr %18, align 4\l  br label %33\l}"];
	Node0x600002022850 -> Node0x6000020228a0[tooltip="4 -> 33\nProbability 100.00%" ];
	Node0x6000020228a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{33:\l|  %34 = load i32, ptr %7, align 4\l  %35 = icmp sgt i32 %34, 0\l  br i1 %35, label %36, label %132\l|{<s0>T|<s1>F}}"];
	Node0x6000020228a0:s0 -> Node0x6000020228f0[tooltip="33 -> 36\nProbability 96.88%" ];
	Node0x6000020228a0:s1 -> Node0x600002023020[tooltip="33 -> 132\nProbability 3.12%" ];
	Node0x6000020228f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{36:\l|  %37 = load i32, ptr %18, align 4\l  %38 = icmp ne i32 %37, 0\l  br i1 %38, label %39, label %42\l|{<s0>T|<s1>F}}"];
	Node0x6000020228f0:s0 -> Node0x600002022940[tooltip="36 -> 39\nProbability 62.50%" ];
	Node0x6000020228f0:s1 -> Node0x600002022990[tooltip="36 -> 42\nProbability 37.50%" ];
	Node0x600002022940 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{39:\l|  %40 = load i32, ptr %17, align 4\l  %41 = and i32 %40, 15\l  store i32 %41, ptr %12, align 4\l  br label %50\l}"];
	Node0x600002022940 -> Node0x6000020229e0[tooltip="39 -> 50\nProbability 100.00%" ];
	Node0x600002022990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{42:\l|  %43 = load ptr, ptr %9, align 8\l  %44 = getelementptr inbounds i8, ptr %43, i32 1\l  store ptr %44, ptr %9, align 8\l  %45 = load i8, ptr %43, align 1\l  %46 = sext i8 %45 to i32\l  store i32 %46, ptr %17, align 4\l  %47 = load i32, ptr %17, align 4\l  %48 = ashr i32 %47, 4\l  %49 = and i32 %48, 15\l  store i32 %49, ptr %12, align 4\l  br label %50\l}"];
	Node0x600002022990 -> Node0x6000020229e0[tooltip="42 -> 50\nProbability 100.00%" ];
	Node0x6000020229e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{50:\l|  %51 = load i32, ptr %18, align 4\l  %52 = icmp ne i32 %51, 0\l  %53 = xor i1 %52, true\l  %54 = zext i1 %53 to i32\l  store i32 %54, ptr %18, align 4\l  %55 = load i32, ptr %12, align 4\l  %56 = sext i32 %55 to i64\l  %57 = getelementptr inbounds [16 x i32], ptr @indexTable, i64 0, i64 %56\l  %58 = load i32, ptr %57, align 4\l  %59 = load i32, ptr %16, align 4\l  %60 = add nsw i32 %59, %58\l  store i32 %60, ptr %16, align 4\l  %61 = load i32, ptr %16, align 4\l  %62 = icmp slt i32 %61, 0\l  br i1 %62, label %63, label %64\l|{<s0>T|<s1>F}}"];
	Node0x6000020229e0:s0 -> Node0x600002022a30[tooltip="50 -> 63\nProbability 37.50%" ];
	Node0x6000020229e0:s1 -> Node0x600002022a80[tooltip="50 -> 64\nProbability 62.50%" ];
	Node0x600002022a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{63:\l|  store i32 0, ptr %16, align 4\l  br label %64\l}"];
	Node0x600002022a30 -> Node0x600002022a80[tooltip="63 -> 64\nProbability 100.00%" ];
	Node0x600002022a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{64:\l|  %65 = load i32, ptr %16, align 4\l  %66 = icmp sgt i32 %65, 88\l  br i1 %66, label %67, label %68\l|{<s0>T|<s1>F}}"];
	Node0x600002022a80:s0 -> Node0x600002022ad0[tooltip="64 -> 67\nProbability 50.00%" ];
	Node0x600002022a80:s1 -> Node0x600002022b20[tooltip="64 -> 68\nProbability 50.00%" ];
	Node0x600002022ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{67:\l|  store i32 88, ptr %16, align 4\l  br label %68\l}"];
	Node0x600002022ad0 -> Node0x600002022b20[tooltip="67 -> 68\nProbability 100.00%" ];
	Node0x600002022b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{68:\l|  %69 = load i32, ptr %12, align 4\l  %70 = and i32 %69, 8\l  store i32 %70, ptr %11, align 4\l  %71 = load i32, ptr %12, align 4\l  %72 = and i32 %71, 7\l  store i32 %72, ptr %12, align 4\l  %73 = load i32, ptr %13, align 4\l  %74 = ashr i32 %73, 3\l  store i32 %74, ptr %15, align 4\l  %75 = load i32, ptr %12, align 4\l  %76 = and i32 %75, 4\l  %77 = icmp ne i32 %76, 0\l  br i1 %77, label %78, label %82\l|{<s0>T|<s1>F}}"];
	Node0x600002022b20:s0 -> Node0x600002022b70[tooltip="68 -> 78\nProbability 50.00%" ];
	Node0x600002022b20:s1 -> Node0x600002022bc0[tooltip="68 -> 82\nProbability 50.00%" ];
	Node0x600002022b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{78:\l|  %79 = load i32, ptr %13, align 4\l  %80 = load i32, ptr %15, align 4\l  %81 = add nsw i32 %80, %79\l  store i32 %81, ptr %15, align 4\l  br label %82\l}"];
	Node0x600002022b70 -> Node0x600002022bc0[tooltip="78 -> 82\nProbability 100.00%" ];
	Node0x600002022bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{82:\l|  %83 = load i32, ptr %12, align 4\l  %84 = and i32 %83, 2\l  %85 = icmp ne i32 %84, 0\l  br i1 %85, label %86, label %91\l|{<s0>T|<s1>F}}"];
	Node0x600002022bc0:s0 -> Node0x600002022c10[tooltip="82 -> 86\nProbability 50.00%" ];
	Node0x600002022bc0:s1 -> Node0x600002022c60[tooltip="82 -> 91\nProbability 50.00%" ];
	Node0x600002022c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{86:\l|  %87 = load i32, ptr %13, align 4\l  %88 = ashr i32 %87, 1\l  %89 = load i32, ptr %15, align 4\l  %90 = add nsw i32 %89, %88\l  store i32 %90, ptr %15, align 4\l  br label %91\l}"];
	Node0x600002022c10 -> Node0x600002022c60[tooltip="86 -> 91\nProbability 100.00%" ];
	Node0x600002022c60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{91:\l|  %92 = load i32, ptr %12, align 4\l  %93 = and i32 %92, 1\l  %94 = icmp ne i32 %93, 0\l  br i1 %94, label %95, label %100\l|{<s0>T|<s1>F}}"];
	Node0x600002022c60:s0 -> Node0x600002022cb0[tooltip="91 -> 95\nProbability 50.00%" ];
	Node0x600002022c60:s1 -> Node0x600002022d00[tooltip="91 -> 100\nProbability 50.00%" ];
	Node0x600002022cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{95:\l|  %96 = load i32, ptr %13, align 4\l  %97 = ashr i32 %96, 2\l  %98 = load i32, ptr %15, align 4\l  %99 = add nsw i32 %98, %97\l  store i32 %99, ptr %15, align 4\l  br label %100\l}"];
	Node0x600002022cb0 -> Node0x600002022d00[tooltip="95 -> 100\nProbability 100.00%" ];
	Node0x600002022d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{100:\l|  %101 = load i32, ptr %11, align 4\l  %102 = icmp ne i32 %101, 0\l  br i1 %102, label %103, label %107\l|{<s0>T|<s1>F}}"];
	Node0x600002022d00:s0 -> Node0x600002022d50[tooltip="100 -> 103\nProbability 62.50%" ];
	Node0x600002022d00:s1 -> Node0x600002022da0[tooltip="100 -> 107\nProbability 37.50%" ];
	Node0x600002022d50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{103:\l|  %104 = load i32, ptr %15, align 4\l  %105 = load i32, ptr %14, align 4\l  %106 = sub nsw i32 %105, %104\l  store i32 %106, ptr %14, align 4\l  br label %111\l}"];
	Node0x600002022d50 -> Node0x600002022df0[tooltip="103 -> 111\nProbability 100.00%" ];
	Node0x600002022da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{107:\l|  %108 = load i32, ptr %15, align 4\l  %109 = load i32, ptr %14, align 4\l  %110 = add nsw i32 %109, %108\l  store i32 %110, ptr %14, align 4\l  br label %111\l}"];
	Node0x600002022da0 -> Node0x600002022df0[tooltip="107 -> 111\nProbability 100.00%" ];
	Node0x600002022df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{111:\l|  %112 = load i32, ptr %14, align 4\l  %113 = icmp sgt i32 %112, 32767\l  br i1 %113, label %114, label %115\l|{<s0>T|<s1>F}}"];
	Node0x600002022df0:s0 -> Node0x600002022e40[tooltip="111 -> 114\nProbability 50.00%" ];
	Node0x600002022df0:s1 -> Node0x600002022e90[tooltip="111 -> 115\nProbability 50.00%" ];
	Node0x600002022e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{114:\l|  store i32 32767, ptr %14, align 4\l  br label %120\l}"];
	Node0x600002022e40 -> Node0x600002022f80[tooltip="114 -> 120\nProbability 100.00%" ];
	Node0x600002022e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{115:\l|  %116 = load i32, ptr %14, align 4\l  %117 = icmp slt i32 %116, -32768\l  br i1 %117, label %118, label %119\l|{<s0>T|<s1>F}}"];
	Node0x600002022e90:s0 -> Node0x600002022ee0[tooltip="115 -> 118\nProbability 50.00%" ];
	Node0x600002022e90:s1 -> Node0x600002022f30[tooltip="115 -> 119\nProbability 50.00%" ];
	Node0x600002022ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{118:\l|  store i32 -32768, ptr %14, align 4\l  br label %119\l}"];
	Node0x600002022ee0 -> Node0x600002022f30[tooltip="118 -> 119\nProbability 100.00%" ];
	Node0x600002022f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{119:\l|  br label %120\l}"];
	Node0x600002022f30 -> Node0x600002022f80[tooltip="119 -> 120\nProbability 100.00%" ];
	Node0x600002022f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{120:\l|  %121 = load i32, ptr %16, align 4\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds [89 x i32], ptr @stepsizeTable, i64 0, i64 %122\l  %124 = load i32, ptr %123, align 4\l  store i32 %124, ptr %13, align 4\l  %125 = load i32, ptr %14, align 4\l  %126 = trunc i32 %125 to i16\l  %127 = load ptr, ptr %10, align 8\l  %128 = getelementptr inbounds i16, ptr %127, i32 1\l  store ptr %128, ptr %10, align 8\l  store i16 %126, ptr %127, align 2\l  br label %129\l}"];
	Node0x600002022f80 -> Node0x600002022fd0[tooltip="120 -> 129\nProbability 100.00%" ];
	Node0x600002022fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{129:\l|  %130 = load i32, ptr %7, align 4\l  %131 = add nsw i32 %130, -1\l  store i32 %131, ptr %7, align 4\l  br label %33\l}"];
	Node0x600002022fd0 -> Node0x6000020228a0[tooltip="129 -> 33\nProbability 100.00%" ];
	Node0x600002023020 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{132:\l|  %133 = load i32, ptr %14, align 4\l  %134 = trunc i32 %133 to i16\l  %135 = load ptr, ptr %8, align 8\l  %136 = getelementptr inbounds %struct.adpcm_state, ptr %135, i32 0, i32 0\l  store i16 %134, ptr %136, align 2\l  %137 = load i32, ptr %16, align 4\l  %138 = trunc i32 %137 to i8\l  %139 = load ptr, ptr %8, align 8\l  %140 = getelementptr inbounds %struct.adpcm_state, ptr %139, i32 0, i32 1\l  store i8 %138, ptr %140, align 2\l  ret void\l}"];
}
