digraph "CFG for 'SolveCubic' function" {
	label="CFG for 'SolveCubic' function";

	Node0x600002fd1ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{6:\l|  %7 = alloca double, align 8\l  %8 = alloca double, align 8\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  %11 = alloca ptr, align 8\l  %12 = alloca ptr, align 8\l  %13 = alloca double, align 8\l  %14 = alloca double, align 8\l  %15 = alloca double, align 8\l  %16 = alloca double, align 8\l  %17 = alloca double, align 8\l  %18 = alloca double, align 8\l  %19 = alloca double, align 8\l  store double %0, ptr %7, align 8\l  store double %1, ptr %8, align 8\l  store double %2, ptr %9, align 8\l  store double %3, ptr %10, align 8\l  store ptr %4, ptr %11, align 8\l  store ptr %5, ptr %12, align 8\l  %20 = load double, ptr %8, align 8\l  %21 = load double, ptr %7, align 8\l  %22 = fdiv double %20, %21\l  store double %22, ptr %13, align 8\l  %23 = load double, ptr %9, align 8\l  %24 = load double, ptr %7, align 8\l  %25 = fdiv double %23, %24\l  store double %25, ptr %14, align 8\l  %26 = load double, ptr %10, align 8\l  %27 = load double, ptr %7, align 8\l  %28 = fdiv double %26, %27\l  store double %28, ptr %15, align 8\l  %29 = load double, ptr %13, align 8\l  %30 = load double, ptr %13, align 8\l  %31 = load double, ptr %14, align 8\l  %32 = fmul double 3.000000e+00, %31\l  %33 = fneg double %32\l  %34 = call double @llvm.fmuladd.f64(double %29, double %30, double %33)\l  %35 = fdiv double %34, 9.000000e+00\l  store double %35, ptr %16, align 8\l  %36 = load double, ptr %13, align 8\l  %37 = fmul double 2.000000e+00, %36\l  %38 = load double, ptr %13, align 8\l  %39 = fmul double %37, %38\l  %40 = load double, ptr %13, align 8\l  %41 = load double, ptr %13, align 8\l  %42 = fmul double 9.000000e+00, %41\l  %43 = load double, ptr %14, align 8\l  %44 = fmul double %42, %43\l  %45 = fneg double %44\l  %46 = call double @llvm.fmuladd.f64(double %39, double %40, double %45)\l  %47 = load double, ptr %15, align 8\l  %48 = call double @llvm.fmuladd.f64(double 2.700000e+01, double %47, double\l... %46)\l  %49 = fdiv double %48, 5.400000e+01\l  store double %49, ptr %17, align 8\l  %50 = load double, ptr %17, align 8\l  %51 = load double, ptr %17, align 8\l  %52 = load double, ptr %16, align 8\l  %53 = load double, ptr %16, align 8\l  %54 = fmul double %52, %53\l  %55 = load double, ptr %16, align 8\l  %56 = fmul double %54, %55\l  %57 = fneg double %56\l  %58 = call double @llvm.fmuladd.f64(double %50, double %51, double %57)\l  store double %58, ptr %18, align 8\l  %59 = load double, ptr %18, align 8\l  %60 = fcmp ole double %59, 0.000000e+00\l  br i1 %60, label %61, label %114\l|{<s0>T|<s1>F}}"];
	Node0x600002fd1ef0:s0 -> Node0x600002fd1f40[tooltip="6 -> 61\nProbability 50.00%" ];
	Node0x600002fd1ef0:s1 -> Node0x600002fd1f90[tooltip="6 -> 114\nProbability 50.00%" ];
	Node0x600002fd1f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{61:\l|  %62 = load ptr, ptr %11, align 8\l  store i32 3, ptr %62, align 4\l  %63 = load double, ptr %17, align 8\l  %64 = load double, ptr %16, align 8\l  %65 = load double, ptr %16, align 8\l  %66 = fmul double %64, %65\l  %67 = load double, ptr %16, align 8\l  %68 = fmul double %66, %67\l  %69 = call double @llvm.sqrt.f64(double %68)\l  %70 = fdiv double %63, %69\l  %71 = call double @llvm.acos.f64(double %70)\l  store double %71, ptr %19, align 8\l  %72 = load double, ptr %16, align 8\l  %73 = call double @llvm.sqrt.f64(double %72)\l  %74 = fmul double -2.000000e+00, %73\l  %75 = load double, ptr %19, align 8\l  %76 = fdiv double %75, 3.000000e+00\l  %77 = call double @llvm.cos.f64(double %76)\l  %78 = load double, ptr %13, align 8\l  %79 = fdiv double %78, 3.000000e+00\l  %80 = fneg double %79\l  %81 = call double @llvm.fmuladd.f64(double %74, double %77, double %80)\l  %82 = load ptr, ptr %12, align 8\l  %83 = getelementptr inbounds double, ptr %82, i64 0\l  store double %81, ptr %83, align 8\l  %84 = load double, ptr %16, align 8\l  %85 = call double @llvm.sqrt.f64(double %84)\l  %86 = fmul double -2.000000e+00, %85\l  %87 = load double, ptr %19, align 8\l  %88 = call double @llvm.atan.f64(double 1.000000e+00)\l  %89 = fmul double 4.000000e+00, %88\l  %90 = call double @llvm.fmuladd.f64(double 2.000000e+00, double %89, double\l... %87)\l  %91 = fdiv double %90, 3.000000e+00\l  %92 = call double @llvm.cos.f64(double %91)\l  %93 = load double, ptr %13, align 8\l  %94 = fdiv double %93, 3.000000e+00\l  %95 = fneg double %94\l  %96 = call double @llvm.fmuladd.f64(double %86, double %92, double %95)\l  %97 = load ptr, ptr %12, align 8\l  %98 = getelementptr inbounds double, ptr %97, i64 1\l  store double %96, ptr %98, align 8\l  %99 = load double, ptr %16, align 8\l  %100 = call double @llvm.sqrt.f64(double %99)\l  %101 = fmul double -2.000000e+00, %100\l  %102 = load double, ptr %19, align 8\l  %103 = call double @llvm.atan.f64(double 1.000000e+00)\l  %104 = fmul double 4.000000e+00, %103\l  %105 = call double @llvm.fmuladd.f64(double 4.000000e+00, double %104,\l... double %102)\l  %106 = fdiv double %105, 3.000000e+00\l  %107 = call double @llvm.cos.f64(double %106)\l  %108 = load double, ptr %13, align 8\l  %109 = fdiv double %108, 3.000000e+00\l  %110 = fneg double %109\l  %111 = call double @llvm.fmuladd.f64(double %101, double %107, double %110)\l  %112 = load ptr, ptr %12, align 8\l  %113 = getelementptr inbounds double, ptr %112, i64 2\l  store double %111, ptr %113, align 8\l  br label %148\l}"];
	Node0x600002fd1f40 -> Node0x600002fd1fe0[tooltip="61 -> 148\nProbability 100.00%" ];
	Node0x600002fd1f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{114:\l|  %115 = load ptr, ptr %11, align 8\l  store i32 1, ptr %115, align 4\l  %116 = load double, ptr %18, align 8\l  %117 = call double @llvm.sqrt.f64(double %116)\l  %118 = load double, ptr %17, align 8\l  %119 = call double @llvm.fabs.f64(double %118)\l  %120 = fadd double %117, %119\l  %121 = call double @llvm.pow.f64(double %120, double 0x3FD5555555555555)\l  %122 = load ptr, ptr %12, align 8\l  %123 = getelementptr inbounds double, ptr %122, i64 0\l  store double %121, ptr %123, align 8\l  %124 = load double, ptr %16, align 8\l  %125 = load ptr, ptr %12, align 8\l  %126 = getelementptr inbounds double, ptr %125, i64 0\l  %127 = load double, ptr %126, align 8\l  %128 = fdiv double %124, %127\l  %129 = load ptr, ptr %12, align 8\l  %130 = getelementptr inbounds double, ptr %129, i64 0\l  %131 = load double, ptr %130, align 8\l  %132 = fadd double %131, %128\l  store double %132, ptr %130, align 8\l  %133 = load double, ptr %17, align 8\l  %134 = fcmp olt double %133, 0.000000e+00\l  %135 = zext i1 %134 to i64\l  %136 = select i1 %134, i32 1, i32 -1\l  %137 = sitofp i32 %136 to double\l  %138 = load ptr, ptr %12, align 8\l  %139 = getelementptr inbounds double, ptr %138, i64 0\l  %140 = load double, ptr %139, align 8\l  %141 = fmul double %140, %137\l  store double %141, ptr %139, align 8\l  %142 = load double, ptr %13, align 8\l  %143 = fdiv double %142, 3.000000e+00\l  %144 = load ptr, ptr %12, align 8\l  %145 = getelementptr inbounds double, ptr %144, i64 0\l  %146 = load double, ptr %145, align 8\l  %147 = fsub double %146, %143\l  store double %147, ptr %145, align 8\l  br label %148\l}"];
	Node0x600002fd1f90 -> Node0x600002fd1fe0[tooltip="114 -> 148\nProbability 100.00%" ];
	Node0x600002fd1fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{148:\l|  ret void\l}"];
}
