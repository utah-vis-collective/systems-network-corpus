digraph "CFG for 'compute_tran_temp' function" {
	label="CFG for 'compute_tran_temp' function";

	Node0x600003aa64e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{12:\l|  %13 = alloca ptr, align 8\l  %14 = alloca ptr, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i32, align 4\l  %22 = alloca i32, align 4\l  %23 = alloca ptr, align 8\l  %24 = alloca ptr, align 8\l  %25 = alloca float, align 4\l  %26 = alloca float, align 4\l  %27 = alloca float, align 4\l  %28 = alloca float, align 4\l  %29 = alloca float, align 4\l  %30 = alloca float, align 4\l  %31 = alloca float, align 4\l  %32 = alloca float, align 4\l  %33 = alloca i32, align 4\l  %34 = alloca i32, align 4\l  %35 = alloca i32, align 4\l  %36 = alloca i32, align 4\l  %37 = alloca [2 x i64], align 8\l  %38 = alloca [2 x i64], align 8\l  %39 = alloca i64, align 8\l  %40 = alloca i32, align 4\l  %41 = alloca i64, align 8\l  %42 = alloca i64, align 8\l  store ptr %0, ptr %13, align 8\l  store ptr %1, ptr %14, align 8\l  store i32 %2, ptr %15, align 4\l  store i32 %3, ptr %16, align 4\l  store i32 %4, ptr %17, align 4\l  store i32 %5, ptr %18, align 4\l  store i32 %6, ptr %19, align 4\l  store i32 %7, ptr %20, align 4\l  store i32 %8, ptr %21, align 4\l  store i32 %9, ptr %22, align 4\l  store ptr %10, ptr %23, align 8\l  store ptr %11, ptr %24, align 8\l  %43 = load i32, ptr %16, align 4\l  %44 = sitofp i32 %43 to float\l  %45 = fdiv float 0x3F90624DE0000000, %44\l  store float %45, ptr %25, align 4\l  %46 = load i32, ptr %15, align 4\l  %47 = sitofp i32 %46 to float\l  %48 = fdiv float 0x3F90624DE0000000, %47\l  store float %48, ptr %26, align 4\l  %49 = load float, ptr %26, align 4\l  %50 = fpext float %49 to double\l  %51 = fmul double 0x407B580015CA2000, %50\l  %52 = load float, ptr %25, align 4\l  %53 = fpext float %52 to double\l  %54 = fmul double %51, %53\l  %55 = fptrunc double %54 to float\l  store float %55, ptr %27, align 4\l  %56 = load float, ptr %26, align 4\l  %57 = fpext float %56 to double\l  %58 = load float, ptr %25, align 4\l  %59 = fpext float %58 to double\l  %60 = fmul double 0x3FB99999AE000000, %59\l  %61 = fdiv double %57, %60\l  %62 = fptrunc double %61 to float\l  store float %62, ptr %28, align 4\l  %63 = load float, ptr %25, align 4\l  %64 = fpext float %63 to double\l  %65 = load float, ptr %26, align 4\l  %66 = fpext float %65 to double\l  %67 = fmul double 0x3FB99999AE000000, %66\l  %68 = fdiv double %64, %67\l  %69 = fptrunc double %68 to float\l  store float %69, ptr %29, align 4\l  %70 = load float, ptr %25, align 4\l  %71 = fmul float 1.000000e+02, %70\l  %72 = load float, ptr %26, align 4\l  %73 = fmul float %71, %72\l  %74 = fdiv float 0x3F40624DE0000000, %73\l  store float %74, ptr %30, align 4\l  store float 0x40BAC92480000000, ptr %31, align 4\l  %75 = load float, ptr %31, align 4\l  %76 = fpext float %75 to double\l  %77 = fdiv double 1.000000e-03, %76\l  %78 = fptrunc double %77 to float\l  store float %78, ptr %32, align 4\l  store i32 0, ptr %34, align 4\l  store i32 1, ptr %35, align 4\l  %79 = load i32, ptr %19, align 4\l  %80 = mul nsw i32 16, %79\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds [2 x i64], ptr %37, i64 0, i64 0\l  store i64 %81, ptr %82, align 8\l  %83 = load i32, ptr %20, align 4\l  %84 = mul nsw i32 16, %83\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds [2 x i64], ptr %37, i64 0, i64 1\l  store i64 %85, ptr %86, align 8\l  %87 = getelementptr inbounds [2 x i64], ptr %38, i64 0, i64 0\l  store i64 16, ptr %87, align 8\l  %88 = getelementptr inbounds [2 x i64], ptr %38, i64 0, i64 1\l  store i64 16, ptr %88, align 8\l  %89 = call i64 @get_time()\l  store i64 %89, ptr %39, align 8\l  store i32 0, ptr %33, align 4\l  br label %90\l}"];
	Node0x600003aa64e0 -> Node0x600003aa6530[tooltip="12 -> 90\nProbability 100.00%" ];
	Node0x600003aa6530 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{90:\l|  %91 = load i32, ptr %33, align 4\l  %92 = load i32, ptr %17, align 4\l  %93 = icmp slt i32 %91, %92\l  br i1 %93, label %94, label %167\l|{<s0>T|<s1>F}}"];
	Node0x600003aa6530:s0 -> Node0x600003aa6580[tooltip="90 -> 94\nProbability 96.88%" ];
	Node0x600003aa6530:s1 -> Node0x600003aa6850[tooltip="90 -> 167\nProbability 3.12%" ];
	Node0x600003aa6580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{94:\l|  %95 = load i32, ptr %18, align 4\l  %96 = load i32, ptr %17, align 4\l  %97 = load i32, ptr %33, align 4\l  %98 = sub nsw i32 %96, %97\l  %99 = icmp sle i32 %95, %98\l  br i1 %99, label %100, label %102\l|{<s0>T|<s1>F}}"];
	Node0x600003aa6580:s0 -> Node0x600003aa65d0[tooltip="94 -> 100\nProbability 50.00%" ];
	Node0x600003aa6580:s1 -> Node0x600003aa6620[tooltip="94 -> 102\nProbability 50.00%" ];
	Node0x600003aa65d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{100:\l|  %101 = load i32, ptr %18, align 4\l  br label %106\l}"];
	Node0x600003aa65d0 -> Node0x600003aa6670[tooltip="100 -> 106\nProbability 100.00%" ];
	Node0x600003aa6620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{102:\l|  %103 = load i32, ptr %17, align 4\l  %104 = load i32, ptr %33, align 4\l  %105 = sub nsw i32 %103, %104\l  br label %106\l}"];
	Node0x600003aa6620 -> Node0x600003aa6670[tooltip="102 -> 106\nProbability 100.00%" ];
	Node0x600003aa6670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{106:\l|  %107 = phi i32 [ %101, %100 ], [ %105, %102 ]\l  store i32 %107, ptr %40, align 4\l  %108 = load ptr, ptr @kernel, align 8\l  %109 = call i32 @clSetKernelArg(ptr noundef %108, i32 noundef 0, i64 noundef\l... 4, ptr noundef %40)\l  %110 = load ptr, ptr @kernel, align 8\l  %111 = call i32 @clSetKernelArg(ptr noundef %110, i32 noundef 1, i64 noundef\l... 8, ptr noundef %13)\l  %112 = load ptr, ptr @kernel, align 8\l  %113 = load ptr, ptr %14, align 8\l  %114 = load i32, ptr %34, align 4\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds ptr, ptr %113, i64 %115\l  %117 = call i32 @clSetKernelArg(ptr noundef %112, i32 noundef 2, i64 noundef\l... 8, ptr noundef %116)\l  %118 = load ptr, ptr @kernel, align 8\l  %119 = load ptr, ptr %14, align 8\l  %120 = load i32, ptr %35, align 4\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds ptr, ptr %119, i64 %121\l  %123 = call i32 @clSetKernelArg(ptr noundef %118, i32 noundef 3, i64 noundef\l... 8, ptr noundef %122)\l  %124 = load ptr, ptr @kernel, align 8\l  %125 = call i32 @clSetKernelArg(ptr noundef %124, i32 noundef 4, i64 noundef\l... 4, ptr noundef %15)\l  %126 = load ptr, ptr @kernel, align 8\l  %127 = call i32 @clSetKernelArg(ptr noundef %126, i32 noundef 5, i64 noundef\l... 4, ptr noundef %16)\l  %128 = load ptr, ptr @kernel, align 8\l  %129 = call i32 @clSetKernelArg(ptr noundef %128, i32 noundef 6, i64 noundef\l... 4, ptr noundef %21)\l  %130 = load ptr, ptr @kernel, align 8\l  %131 = call i32 @clSetKernelArg(ptr noundef %130, i32 noundef 7, i64 noundef\l... 4, ptr noundef %22)\l  %132 = load ptr, ptr @kernel, align 8\l  %133 = call i32 @clSetKernelArg(ptr noundef %132, i32 noundef 8, i64 noundef\l... 4, ptr noundef %27)\l  %134 = load ptr, ptr @kernel, align 8\l  %135 = call i32 @clSetKernelArg(ptr noundef %134, i32 noundef 9, i64 noundef\l... 4, ptr noundef %28)\l  %136 = load ptr, ptr @kernel, align 8\l  %137 = call i32 @clSetKernelArg(ptr noundef %136, i32 noundef 10, i64\l... noundef 4, ptr noundef %29)\l  %138 = load ptr, ptr @kernel, align 8\l  %139 = call i32 @clSetKernelArg(ptr noundef %138, i32 noundef 11, i64\l... noundef 4, ptr noundef %30)\l  %140 = load ptr, ptr @kernel, align 8\l  %141 = call i32 @clSetKernelArg(ptr noundef %140, i32 noundef 12, i64\l... noundef 4, ptr noundef %32)\l  %142 = load ptr, ptr @command_queue, align 8\l  %143 = load ptr, ptr @kernel, align 8\l  %144 = getelementptr inbounds [2 x i64], ptr %37, i64 0, i64 0\l  %145 = getelementptr inbounds [2 x i64], ptr %38, i64 0, i64 0\l  %146 = call i32 @clEnqueueNDRangeKernel(ptr noundef %142, ptr noundef %143,\l... i32 noundef 2, ptr noundef null, ptr noundef %144, ptr noundef %145, i32\l... noundef 0, ptr noundef null, ptr noundef null)\l  store i32 %146, ptr %36, align 4\l  %147 = load i32, ptr %36, align 4\l  %148 = icmp ne i32 %147, 0\l  br i1 %148, label %149, label %151\l|{<s0>T|<s1>F}}"];
	Node0x600003aa6670:s0 -> Node0x600003aa66c0[tooltip="106 -> 149\nProbability 62.50%" ];
	Node0x600003aa6670:s1 -> Node0x600003aa6710[tooltip="106 -> 151\nProbability 37.50%" ];
	Node0x600003aa66c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{149:\l|  %150 = load i32, ptr %36, align 4\l  call void @fatal_CL(i32 noundef %150, i32 noundef 111)\l  br label %151\l}"];
	Node0x600003aa66c0 -> Node0x600003aa6710[tooltip="149 -> 151\nProbability 100.00%" ];
	Node0x600003aa6710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{151:\l|  %152 = load ptr, ptr @command_queue, align 8\l  %153 = call i32 @clFlush(ptr noundef %152)\l  store i32 %153, ptr %36, align 4\l  %154 = load i32, ptr %36, align 4\l  %155 = icmp ne i32 %154, 0\l  br i1 %155, label %156, label %158\l|{<s0>T|<s1>F}}"];
	Node0x600003aa6710:s0 -> Node0x600003aa6760[tooltip="151 -> 156\nProbability 62.50%" ];
	Node0x600003aa6710:s1 -> Node0x600003aa67b0[tooltip="151 -> 158\nProbability 37.50%" ];
	Node0x600003aa6760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{156:\l|  %157 = load i32, ptr %36, align 4\l  call void @fatal_CL(i32 noundef %157, i32 noundef 115)\l  br label %158\l}"];
	Node0x600003aa6760 -> Node0x600003aa67b0[tooltip="156 -> 158\nProbability 100.00%" ];
	Node0x600003aa67b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{158:\l|  %159 = load i32, ptr %34, align 4\l  %160 = sub nsw i32 1, %159\l  store i32 %160, ptr %34, align 4\l  %161 = load i32, ptr %35, align 4\l  %162 = sub nsw i32 1, %161\l  store i32 %162, ptr %35, align 4\l  br label %163\l}"];
	Node0x600003aa67b0 -> Node0x600003aa6800[tooltip="158 -> 163\nProbability 100.00%" ];
	Node0x600003aa6800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{163:\l|  %164 = load i32, ptr %18, align 4\l  %165 = load i32, ptr %33, align 4\l  %166 = add nsw i32 %165, %164\l  store i32 %166, ptr %33, align 4\l  br label %90\l}"];
	Node0x600003aa6800 -> Node0x600003aa6530[tooltip="163 -> 90\nProbability 100.00%" ];
	Node0x600003aa6850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{167:\l|  %168 = load ptr, ptr @command_queue, align 8\l  %169 = call i32 @clFinish(ptr noundef %168)\l  store i32 %169, ptr %36, align 4\l  %170 = load i32, ptr %36, align 4\l  %171 = icmp ne i32 %170, 0\l  br i1 %171, label %172, label %174\l|{<s0>T|<s1>F}}"];
	Node0x600003aa6850:s0 -> Node0x600003aa68a0[tooltip="167 -> 172\nProbability 62.50%" ];
	Node0x600003aa6850:s1 -> Node0x600003aa68f0[tooltip="167 -> 174\nProbability 37.50%" ];
	Node0x600003aa68a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{172:\l|  %173 = load i32, ptr %36, align 4\l  call void @fatal_CL(i32 noundef %173, i32 noundef 124)\l  br label %174\l}"];
	Node0x600003aa68a0 -> Node0x600003aa68f0[tooltip="172 -> 174\nProbability 100.00%" ];
	Node0x600003aa68f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{174:\l|  %175 = call i64 @get_time()\l  store i64 %175, ptr %41, align 8\l  %176 = load i64, ptr %41, align 8\l  %177 = load i64, ptr %39, align 8\l  %178 = sub nsw i64 %176, %177\l  store i64 %178, ptr %42, align 8\l  %179 = load i64, ptr %42, align 8\l  %180 = sitofp i64 %179 to float\l  %181 = fdiv float %180, 1.000000e+06\l  %182 = fpext float %181 to double\l  %183 = call i32 (ptr, ...) @printf(ptr noundef @.str.9, double noundef %182)\l  %184 = load i32, ptr %34, align 4\l  ret i32 %184\l}"];
}
