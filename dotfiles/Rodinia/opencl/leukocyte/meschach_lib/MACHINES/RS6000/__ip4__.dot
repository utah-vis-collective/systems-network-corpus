digraph "CFG for '__ip4__' function" {
	label="CFG for '__ip4__' function";

	Node0x60000046ab70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{7:\l|  %8 = alloca ptr, align 8\l  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca ptr, align 8\l  %12 = alloca ptr, align 8\l  %13 = alloca ptr, align 8\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i32, align 4\l  %17 = alloca double, align 8\l  %18 = alloca double, align 8\l  %19 = alloca double, align 8\l  %20 = alloca double, align 8\l  %21 = alloca double, align 8\l  %22 = alloca double, align 8\l  %23 = alloca double, align 8\l  %24 = alloca double, align 8\l  %25 = alloca double, align 8\l  %26 = alloca double, align 8\l  store ptr %0, ptr %8, align 8\l  store ptr %1, ptr %9, align 8\l  store ptr %2, ptr %10, align 8\l  store ptr %3, ptr %11, align 8\l  store ptr %4, ptr %12, align 8\l  store ptr %5, ptr %13, align 8\l  store i32 %6, ptr %14, align 4\l  %27 = load i32, ptr %14, align 4\l  %28 = sdiv i32 %27, 2\l  store i32 %28, ptr %16, align 4\l  %29 = load i32, ptr %14, align 4\l  %30 = srem i32 %29, 2\l  store i32 %30, ptr %14, align 4\l  store double 0.000000e+00, ptr %20, align 8\l  store double 0.000000e+00, ptr %19, align 8\l  store double 0.000000e+00, ptr %18, align 8\l  store double 0.000000e+00, ptr %17, align 8\l  store double 0.000000e+00, ptr %25, align 8\l  store double 0.000000e+00, ptr %24, align 8\l  store double 0.000000e+00, ptr %23, align 8\l  store double 0.000000e+00, ptr %22, align 8\l  store i32 0, ptr %15, align 4\l  br label %31\l}"];
	Node0x60000046ab70 -> Node0x60000046abc0[tooltip="7 -> 31\nProbability 100.00%" ];
	Node0x60000046abc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{31:\l|  %32 = load i32, ptr %15, align 4\l  %33 = load i32, ptr %16, align 4\l  %34 = icmp slt i32 %32, %33\l  br i1 %34, label %35, label %128\l|{<s0>T|<s1>F}}"];
	Node0x60000046abc0:s0 -> Node0x60000046ac10[tooltip="31 -> 35\nProbability 96.88%" ];
	Node0x60000046abc0:s1 -> Node0x60000046acb0[tooltip="31 -> 128\nProbability 3.12%" ];
	Node0x60000046ac10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{35:\l|  %36 = load ptr, ptr %12, align 8\l  %37 = load i32, ptr %15, align 4\l  %38 = mul nsw i32 2, %37\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds double, ptr %36, i64 %39\l  %41 = load double, ptr %40, align 8\l  store double %41, ptr %21, align 8\l  %42 = load ptr, ptr %12, align 8\l  %43 = load i32, ptr %15, align 4\l  %44 = mul nsw i32 2, %43\l  %45 = add nsw i32 %44, 1\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds double, ptr %42, i64 %46\l  %48 = load double, ptr %47, align 8\l  store double %48, ptr %26, align 8\l  %49 = load ptr, ptr %8, align 8\l  %50 = load i32, ptr %15, align 4\l  %51 = mul nsw i32 2, %50\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, ptr %49, i64 %52\l  %54 = load double, ptr %53, align 8\l  %55 = load double, ptr %21, align 8\l  %56 = load double, ptr %17, align 8\l  %57 = call double @llvm.fmuladd.f64(double %54, double %55, double %56)\l  store double %57, ptr %17, align 8\l  %58 = load ptr, ptr %8, align 8\l  %59 = load i32, ptr %15, align 4\l  %60 = mul nsw i32 2, %59\l  %61 = add nsw i32 %60, 1\l  %62 = sext i32 %61 to i64\l  %63 = getelementptr inbounds double, ptr %58, i64 %62\l  %64 = load double, ptr %63, align 8\l  %65 = load double, ptr %26, align 8\l  %66 = load double, ptr %22, align 8\l  %67 = call double @llvm.fmuladd.f64(double %64, double %65, double %66)\l  store double %67, ptr %22, align 8\l  %68 = load ptr, ptr %9, align 8\l  %69 = load i32, ptr %15, align 4\l  %70 = mul nsw i32 2, %69\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds double, ptr %68, i64 %71\l  %73 = load double, ptr %72, align 8\l  %74 = load double, ptr %21, align 8\l  %75 = load double, ptr %18, align 8\l  %76 = call double @llvm.fmuladd.f64(double %73, double %74, double %75)\l  store double %76, ptr %18, align 8\l  %77 = load ptr, ptr %9, align 8\l  %78 = load i32, ptr %15, align 4\l  %79 = mul nsw i32 2, %78\l  %80 = add nsw i32 %79, 1\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds double, ptr %77, i64 %81\l  %83 = load double, ptr %82, align 8\l  %84 = load double, ptr %26, align 8\l  %85 = load double, ptr %23, align 8\l  %86 = call double @llvm.fmuladd.f64(double %83, double %84, double %85)\l  store double %86, ptr %23, align 8\l  %87 = load ptr, ptr %10, align 8\l  %88 = load i32, ptr %15, align 4\l  %89 = mul nsw i32 2, %88\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds double, ptr %87, i64 %90\l  %92 = load double, ptr %91, align 8\l  %93 = load double, ptr %21, align 8\l  %94 = load double, ptr %19, align 8\l  %95 = call double @llvm.fmuladd.f64(double %92, double %93, double %94)\l  store double %95, ptr %19, align 8\l  %96 = load ptr, ptr %10, align 8\l  %97 = load i32, ptr %15, align 4\l  %98 = mul nsw i32 2, %97\l  %99 = add nsw i32 %98, 1\l  %100 = sext i32 %99 to i64\l  %101 = getelementptr inbounds double, ptr %96, i64 %100\l  %102 = load double, ptr %101, align 8\l  %103 = load double, ptr %26, align 8\l  %104 = load double, ptr %24, align 8\l  %105 = call double @llvm.fmuladd.f64(double %102, double %103, double %104)\l  store double %105, ptr %24, align 8\l  %106 = load ptr, ptr %11, align 8\l  %107 = load i32, ptr %15, align 4\l  %108 = mul nsw i32 2, %107\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds double, ptr %106, i64 %109\l  %111 = load double, ptr %110, align 8\l  %112 = load double, ptr %21, align 8\l  %113 = load double, ptr %20, align 8\l  %114 = call double @llvm.fmuladd.f64(double %111, double %112, double %113)\l  store double %114, ptr %20, align 8\l  %115 = load ptr, ptr %11, align 8\l  %116 = load i32, ptr %15, align 4\l  %117 = mul nsw i32 2, %116\l  %118 = add nsw i32 %117, 1\l  %119 = sext i32 %118 to i64\l  %120 = getelementptr inbounds double, ptr %115, i64 %119\l  %121 = load double, ptr %120, align 8\l  %122 = load double, ptr %26, align 8\l  %123 = load double, ptr %25, align 8\l  %124 = call double @llvm.fmuladd.f64(double %121, double %122, double %123)\l  store double %124, ptr %25, align 8\l  br label %125\l}"];
	Node0x60000046ac10 -> Node0x60000046ac60[tooltip="35 -> 125\nProbability 100.00%" ];
	Node0x60000046ac60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{125:\l|  %126 = load i32, ptr %15, align 4\l  %127 = add nsw i32 %126, 1\l  store i32 %127, ptr %15, align 4\l  br label %31\l}"];
	Node0x60000046ac60 -> Node0x60000046abc0[tooltip="125 -> 31\nProbability 100.00%" ];
	Node0x60000046acb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{128:\l|  %129 = load i32, ptr %16, align 4\l  %130 = mul nsw i32 2, %129\l  %131 = load ptr, ptr %12, align 8\l  %132 = sext i32 %130 to i64\l  %133 = getelementptr inbounds double, ptr %131, i64 %132\l  store ptr %133, ptr %12, align 8\l  %134 = load i32, ptr %16, align 4\l  %135 = mul nsw i32 2, %134\l  %136 = load ptr, ptr %8, align 8\l  %137 = sext i32 %135 to i64\l  %138 = getelementptr inbounds double, ptr %136, i64 %137\l  store ptr %138, ptr %8, align 8\l  %139 = load i32, ptr %16, align 4\l  %140 = mul nsw i32 2, %139\l  %141 = load ptr, ptr %9, align 8\l  %142 = sext i32 %140 to i64\l  %143 = getelementptr inbounds double, ptr %141, i64 %142\l  store ptr %143, ptr %9, align 8\l  %144 = load i32, ptr %16, align 4\l  %145 = mul nsw i32 2, %144\l  %146 = load ptr, ptr %10, align 8\l  %147 = sext i32 %145 to i64\l  %148 = getelementptr inbounds double, ptr %146, i64 %147\l  store ptr %148, ptr %10, align 8\l  %149 = load i32, ptr %16, align 4\l  %150 = mul nsw i32 2, %149\l  %151 = load ptr, ptr %11, align 8\l  %152 = sext i32 %150 to i64\l  %153 = getelementptr inbounds double, ptr %151, i64 %152\l  store ptr %153, ptr %11, align 8\l  store i32 0, ptr %15, align 4\l  br label %154\l}"];
	Node0x60000046acb0 -> Node0x60000046ad00[tooltip="128 -> 154\nProbability 100.00%" ];
	Node0x60000046ad00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{154:\l|  %155 = load i32, ptr %15, align 4\l  %156 = load i32, ptr %14, align 4\l  %157 = icmp slt i32 %155, %156\l  br i1 %157, label %158, label %199\l|{<s0>T|<s1>F}}"];
	Node0x60000046ad00:s0 -> Node0x60000046ad50[tooltip="154 -> 158\nProbability 96.88%" ];
	Node0x60000046ad00:s1 -> Node0x60000046adf0[tooltip="154 -> 199\nProbability 3.12%" ];
	Node0x60000046ad50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{158:\l|  %159 = load ptr, ptr %12, align 8\l  %160 = load i32, ptr %15, align 4\l  %161 = sext i32 %160 to i64\l  %162 = getelementptr inbounds double, ptr %159, i64 %161\l  %163 = load double, ptr %162, align 8\l  store double %163, ptr %21, align 8\l  %164 = load ptr, ptr %8, align 8\l  %165 = load i32, ptr %15, align 4\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds double, ptr %164, i64 %166\l  %168 = load double, ptr %167, align 8\l  %169 = load double, ptr %21, align 8\l  %170 = load double, ptr %17, align 8\l  %171 = call double @llvm.fmuladd.f64(double %168, double %169, double %170)\l  store double %171, ptr %17, align 8\l  %172 = load ptr, ptr %9, align 8\l  %173 = load i32, ptr %15, align 4\l  %174 = sext i32 %173 to i64\l  %175 = getelementptr inbounds double, ptr %172, i64 %174\l  %176 = load double, ptr %175, align 8\l  %177 = load double, ptr %21, align 8\l  %178 = load double, ptr %18, align 8\l  %179 = call double @llvm.fmuladd.f64(double %176, double %177, double %178)\l  store double %179, ptr %18, align 8\l  %180 = load ptr, ptr %10, align 8\l  %181 = load i32, ptr %15, align 4\l  %182 = sext i32 %181 to i64\l  %183 = getelementptr inbounds double, ptr %180, i64 %182\l  %184 = load double, ptr %183, align 8\l  %185 = load double, ptr %21, align 8\l  %186 = load double, ptr %19, align 8\l  %187 = call double @llvm.fmuladd.f64(double %184, double %185, double %186)\l  store double %187, ptr %19, align 8\l  %188 = load ptr, ptr %11, align 8\l  %189 = load i32, ptr %15, align 4\l  %190 = sext i32 %189 to i64\l  %191 = getelementptr inbounds double, ptr %188, i64 %190\l  %192 = load double, ptr %191, align 8\l  %193 = load double, ptr %21, align 8\l  %194 = load double, ptr %20, align 8\l  %195 = call double @llvm.fmuladd.f64(double %192, double %193, double %194)\l  store double %195, ptr %20, align 8\l  br label %196\l}"];
	Node0x60000046ad50 -> Node0x60000046ada0[tooltip="158 -> 196\nProbability 100.00%" ];
	Node0x60000046ada0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{196:\l|  %197 = load i32, ptr %15, align 4\l  %198 = add nsw i32 %197, 1\l  store i32 %198, ptr %15, align 4\l  br label %154\l}"];
	Node0x60000046ada0 -> Node0x60000046ad00[tooltip="196 -> 154\nProbability 100.00%" ];
	Node0x60000046adf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{199:\l|  %200 = load double, ptr %17, align 8\l  %201 = load double, ptr %22, align 8\l  %202 = fadd double %200, %201\l  %203 = load ptr, ptr %13, align 8\l  %204 = getelementptr inbounds double, ptr %203, i64 0\l  store double %202, ptr %204, align 8\l  %205 = load double, ptr %18, align 8\l  %206 = load double, ptr %23, align 8\l  %207 = fadd double %205, %206\l  %208 = load ptr, ptr %13, align 8\l  %209 = getelementptr inbounds double, ptr %208, i64 1\l  store double %207, ptr %209, align 8\l  %210 = load double, ptr %19, align 8\l  %211 = load double, ptr %24, align 8\l  %212 = fadd double %210, %211\l  %213 = load ptr, ptr %13, align 8\l  %214 = getelementptr inbounds double, ptr %213, i64 2\l  store double %212, ptr %214, align 8\l  %215 = load double, ptr %20, align 8\l  %216 = load double, ptr %25, align 8\l  %217 = fadd double %215, %216\l  %218 = load ptr, ptr %13, align 8\l  %219 = getelementptr inbounds double, ptr %218, i64 3\l  store double %217, ptr %219, align 8\l  ret void\l}"];
}
