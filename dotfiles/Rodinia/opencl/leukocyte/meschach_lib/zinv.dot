digraph "CFG for 'zinv' function" {
	label="CFG for 'zinv' function";

	Node0x600000bd6800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca %struct.complex, align 8\l  %3 = alloca %struct.complex, align 8\l  %4 = alloca double, align 8\l  %5 = alloca double, align 8\l  %6 = alloca double, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  store [2 x double] %0, ptr %3, align 8\l  %9 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 0\l  %10 = load double, ptr %9, align 8\l  %11 = fcmp oeq double %10, 0.000000e+00\l  br i1 %11, label %12, label %18\l|{<s0>T|<s1>F}}"];
	Node0x600000bd6800:s0 -> Node0x600000bd6850[tooltip="1 -> 12\nProbability 62.50%" ];
	Node0x600000bd6800:s1 -> Node0x600000bd68f0[tooltip="1 -> 18\nProbability 37.50%" ];
	Node0x600000bd6850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{12:\l|  %13 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 1\l  %14 = load double, ptr %13, align 8\l  %15 = fcmp oeq double %14, 0.000000e+00\l  br i1 %15, label %16, label %18\l|{<s0>T|<s1>F}}"];
	Node0x600000bd6850:s0 -> Node0x600000bd68a0[tooltip="12 -> 16\nProbability 62.50%" ];
	Node0x600000bd6850:s1 -> Node0x600000bd68f0[tooltip="12 -> 18\nProbability 37.50%" ];
	Node0x600000bd68a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{16:\l|  %17 = call i32 @ev_err(ptr noundef @.str, i32 noundef 4, i32 noundef 141,\l... ptr noundef @.str.1, i32 noundef 0)\l  br label %18\l}"];
	Node0x600000bd68a0 -> Node0x600000bd68f0[tooltip="16 -> 18\nProbability 100.00%" ];
	Node0x600000bd68f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{18:\l|  %19 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 0\l  %20 = load double, ptr %19, align 8\l  %21 = fcmp oge double %20, 0.000000e+00\l  br i1 %21, label %22, label %25\l|{<s0>T|<s1>F}}"];
	Node0x600000bd68f0:s0 -> Node0x600000bd6940[tooltip="18 -> 22\nProbability 50.00%" ];
	Node0x600000bd68f0:s1 -> Node0x600000bd6990[tooltip="18 -> 25\nProbability 50.00%" ];
	Node0x600000bd6940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{22:\l|  %23 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 0\l  %24 = load double, ptr %23, align 8\l  br label %29\l}"];
	Node0x600000bd6940 -> Node0x600000bd69e0[tooltip="22 -> 29\nProbability 100.00%" ];
	Node0x600000bd6990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{25:\l|  %26 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 0\l  %27 = load double, ptr %26, align 8\l  %28 = fneg double %27\l  br label %29\l}"];
	Node0x600000bd6990 -> Node0x600000bd69e0[tooltip="25 -> 29\nProbability 100.00%" ];
	Node0x600000bd69e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{29:\l|  %30 = phi double [ %24, %22 ], [ %28, %25 ]\l  store double %30, ptr %4, align 8\l  %31 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 1\l  %32 = load double, ptr %31, align 8\l  %33 = fcmp oge double %32, 0.000000e+00\l  br i1 %33, label %34, label %37\l|{<s0>T|<s1>F}}"];
	Node0x600000bd69e0:s0 -> Node0x600000bd6a30[tooltip="29 -> 34\nProbability 50.00%" ];
	Node0x600000bd69e0:s1 -> Node0x600000bd6a80[tooltip="29 -> 37\nProbability 50.00%" ];
	Node0x600000bd6a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{34:\l|  %35 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 1\l  %36 = load double, ptr %35, align 8\l  br label %41\l}"];
	Node0x600000bd6a30 -> Node0x600000bd6ad0[tooltip="34 -> 41\nProbability 100.00%" ];
	Node0x600000bd6a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{37:\l|  %38 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 1\l  %39 = load double, ptr %38, align 8\l  %40 = fneg double %39\l  br label %41\l}"];
	Node0x600000bd6a80 -> Node0x600000bd6ad0[tooltip="37 -> 41\nProbability 100.00%" ];
	Node0x600000bd6ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{41:\l|  %42 = phi double [ %36, %34 ], [ %40, %37 ]\l  store double %42, ptr %5, align 8\l  %43 = load double, ptr %4, align 8\l  %44 = load double, ptr %5, align 8\l  %45 = fcmp olt double %43, %44\l  br i1 %45, label %46, label %50\l|{<s0>T|<s1>F}}"];
	Node0x600000bd6ad0:s0 -> Node0x600000bd6b20[tooltip="41 -> 46\nProbability 50.00%" ];
	Node0x600000bd6ad0:s1 -> Node0x600000bd6b70[tooltip="41 -> 50\nProbability 50.00%" ];
	Node0x600000bd6b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{46:\l|  %47 = load double, ptr %4, align 8\l  store double %47, ptr %6, align 8\l  %48 = load double, ptr %5, align 8\l  store double %48, ptr %4, align 8\l  %49 = load double, ptr %6, align 8\l  store double %49, ptr %5, align 8\l  br label %50\l}"];
	Node0x600000bd6b20 -> Node0x600000bd6b70[tooltip="46 -> 50\nProbability 100.00%" ];
	Node0x600000bd6b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{50:\l|  %51 = load double, ptr %4, align 8\l  %52 = call double @frexp(double noundef %51, ptr noundef %7) #6\l  store double %52, ptr %4, align 8\l  %53 = load double, ptr %5, align 8\l  %54 = call double @frexp(double noundef %53, ptr noundef %8) #6\l  store double %54, ptr %5, align 8\l  %55 = load double, ptr %5, align 8\l  %56 = load i32, ptr %8, align 4\l  %57 = load i32, ptr %7, align 4\l  %58 = sub nsw i32 %56, %57\l  %59 = call double @ldexp(double noundef %55, i32 noundef %58) #7\l  store double %59, ptr %5, align 8\l  %60 = load double, ptr %4, align 8\l  %61 = load double, ptr %4, align 8\l  %62 = load double, ptr %5, align 8\l  %63 = load double, ptr %5, align 8\l  %64 = fmul double %62, %63\l  %65 = call double @llvm.fmuladd.f64(double %60, double %61, double %64)\l  %66 = fdiv double 1.000000e+00, %65\l  store double %66, ptr %6, align 8\l  %67 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 0\l  %68 = load double, ptr %67, align 8\l  %69 = load double, ptr %6, align 8\l  %70 = fmul double %68, %69\l  %71 = load i32, ptr %7, align 4\l  %72 = mul nsw i32 -2, %71\l  %73 = call double @ldexp(double noundef 1.000000e+00, i32 noundef %72) #7\l  %74 = fmul double %70, %73\l  %75 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 0\l  store double %74, ptr %75, align 8\l  %76 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 1\l  %77 = load double, ptr %76, align 8\l  %78 = fneg double %77\l  %79 = load double, ptr %6, align 8\l  %80 = fmul double %78, %79\l  %81 = load i32, ptr %7, align 4\l  %82 = mul nsw i32 -2, %81\l  %83 = call double @ldexp(double noundef 1.000000e+00, i32 noundef %82) #7\l  %84 = fmul double %80, %83\l  %85 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 1\l  store double %84, ptr %85, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %3, i64 16, i1\l... false)\l  %86 = load %struct.complex, ptr %2, align 8\l  ret %struct.complex %86\l}"];
}
