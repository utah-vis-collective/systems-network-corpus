digraph "CFG for '_zin_prod' function" {
	label="CFG for '_zin_prod' function";

	Node0x600000d8ce60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{4:\l|  %5 = alloca %struct.complex, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  store ptr %0, ptr %6, align 8\l  store ptr %1, ptr %7, align 8\l  store i32 %2, ptr %8, align 4\l  store i32 %3, ptr %9, align 4\l  %11 = load ptr, ptr %6, align 8\l  %12 = icmp eq ptr %11, null\l  br i1 %12, label %16, label %13\l|{<s0>T|<s1>F}}"];
	Node0x600000d8ce60:s0 -> Node0x600000d8cf00[tooltip="4 -> 16\nProbability 37.50%" ];
	Node0x600000d8ce60:s1 -> Node0x600000d8ceb0[tooltip="4 -> 13\nProbability 62.50%" ];
	Node0x600000d8ceb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{13:\l|  %14 = load ptr, ptr %7, align 8\l  %15 = icmp eq ptr %14, null\l  br i1 %15, label %16, label %18\l|{<s0>T|<s1>F}}"];
	Node0x600000d8ceb0:s0 -> Node0x600000d8cf00[tooltip="13 -> 16\nProbability 37.50%" ];
	Node0x600000d8ceb0:s1 -> Node0x600000d8cf50[tooltip="13 -> 18\nProbability 62.50%" ];
	Node0x600000d8cf00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{16:\l|  %17 = call i32 @ev_err(ptr noundef @.str, i32 noundef 8, i32 noundef 49,\l... ptr noundef @.str.1, i32 noundef 0)\l  br label %18\l}"];
	Node0x600000d8cf00 -> Node0x600000d8cf50[tooltip="16 -> 18\nProbability 100.00%" ];
	Node0x600000d8cf50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{18:\l|  %19 = load ptr, ptr %6, align 8\l  %20 = getelementptr inbounds %struct.ZVEC, ptr %19, i32 0, i32 0\l  %21 = load i32, ptr %20, align 8\l  %22 = load ptr, ptr %7, align 8\l  %23 = getelementptr inbounds %struct.ZVEC, ptr %22, i32 0, i32 0\l  %24 = load i32, ptr %23, align 8\l  %25 = icmp ugt i32 %21, %24\l  br i1 %25, label %26, label %30\l|{<s0>T|<s1>F}}"];
	Node0x600000d8cf50:s0 -> Node0x600000d8cfa0[tooltip="18 -> 26\nProbability 50.00%" ];
	Node0x600000d8cf50:s1 -> Node0x600000d8cff0[tooltip="18 -> 30\nProbability 50.00%" ];
	Node0x600000d8cfa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{26:\l|  %27 = load ptr, ptr %7, align 8\l  %28 = getelementptr inbounds %struct.ZVEC, ptr %27, i32 0, i32 0\l  %29 = load i32, ptr %28, align 8\l  br label %34\l}"];
	Node0x600000d8cfa0 -> Node0x600000d8d040[tooltip="26 -> 34\nProbability 100.00%" ];
	Node0x600000d8cff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{30:\l|  %31 = load ptr, ptr %6, align 8\l  %32 = getelementptr inbounds %struct.ZVEC, ptr %31, i32 0, i32 0\l  %33 = load i32, ptr %32, align 8\l  br label %34\l}"];
	Node0x600000d8cff0 -> Node0x600000d8d040[tooltip="30 -> 34\nProbability 100.00%" ];
	Node0x600000d8d040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{34:\l|  %35 = phi i32 [ %29, %26 ], [ %33, %30 ]\l  store i32 %35, ptr %10, align 4\l  %36 = load i32, ptr %8, align 4\l  %37 = load i32, ptr %10, align 4\l  %38 = icmp ugt i32 %36, %37\l  br i1 %38, label %39, label %41\l|{<s0>T|<s1>F}}"];
	Node0x600000d8d040:s0 -> Node0x600000d8d090[tooltip="34 -> 39\nProbability 50.00%" ];
	Node0x600000d8d040:s1 -> Node0x600000d8d0e0[tooltip="34 -> 41\nProbability 50.00%" ];
	Node0x600000d8d090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{39:\l|  %40 = call i32 @ev_err(ptr noundef @.str, i32 noundef 2, i32 noundef 52,\l... ptr noundef @.str.1, i32 noundef 0)\l  br label %41\l}"];
	Node0x600000d8d090 -> Node0x600000d8d0e0[tooltip="39 -> 41\nProbability 100.00%" ];
	Node0x600000d8d0e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{41:\l|  %42 = load ptr, ptr %6, align 8\l  %43 = getelementptr inbounds %struct.ZVEC, ptr %42, i32 0, i32 2\l  %44 = load ptr, ptr %43, align 8\l  %45 = load i32, ptr %8, align 4\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds %struct.complex, ptr %44, i64 %46\l  %48 = load ptr, ptr %7, align 8\l  %49 = getelementptr inbounds %struct.ZVEC, ptr %48, i32 0, i32 2\l  %50 = load ptr, ptr %49, align 8\l  %51 = load i32, ptr %8, align 4\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds %struct.complex, ptr %50, i64 %52\l  %54 = load i32, ptr %10, align 4\l  %55 = load i32, ptr %8, align 4\l  %56 = sub i32 %54, %55\l  %57 = load i32, ptr %9, align 4\l  %58 = call %struct.complex @__zip__(ptr noundef %47, ptr noundef %53, i32\l... noundef %56, i32 noundef %57)\l  %59 = getelementptr inbounds %struct.complex, ptr %5, i32 0, i32 0\l  %60 = extractvalue %struct.complex %58, 0\l  store double %60, ptr %59, align 8\l  %61 = getelementptr inbounds %struct.complex, ptr %5, i32 0, i32 1\l  %62 = extractvalue %struct.complex %58, 1\l  store double %62, ptr %61, align 8\l  %63 = load %struct.complex, ptr %5, align 8\l  ret %struct.complex %63\l}"];
}
