digraph "CFG for '__zip__' function" {
	label="CFG for '__zip__' function";

	Node0x60000207e080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{4:\l|  %5 = alloca %struct.complex, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  store ptr %0, ptr %6, align 8\l  store ptr %1, ptr %7, align 8\l  store i32 %2, ptr %8, align 4\l  store i32 %3, ptr %9, align 4\l  %11 = getelementptr inbounds %struct.complex, ptr %5, i32 0, i32 1\l  store double 0.000000e+00, ptr %11, align 8\l  %12 = getelementptr inbounds %struct.complex, ptr %5, i32 0, i32 0\l  store double 0.000000e+00, ptr %12, align 8\l  %13 = load i32, ptr %9, align 4\l  %14 = icmp ne i32 %13, 0\l  br i1 %14, label %15, label %84\l|{<s0>T|<s1>F}}"];
	Node0x60000207e080:s0 -> Node0x60000207e0d0[tooltip="4 -> 15\nProbability 62.50%" ];
	Node0x60000207e080:s1 -> Node0x60000207e260[tooltip="4 -> 84\nProbability 37.50%" ];
	Node0x60000207e0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{15:\l|  store i32 0, ptr %10, align 4\l  br label %16\l}"];
	Node0x60000207e0d0 -> Node0x60000207e120[tooltip="15 -> 16\nProbability 100.00%" ];
	Node0x60000207e120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{16:\l|  %17 = load i32, ptr %10, align 4\l  %18 = load i32, ptr %8, align 4\l  %19 = icmp slt i32 %17, %18\l  br i1 %19, label %20, label %83\l|{<s0>T|<s1>F}}"];
	Node0x60000207e120:s0 -> Node0x60000207e170[tooltip="16 -> 20\nProbability 96.88%" ];
	Node0x60000207e120:s1 -> Node0x60000207e210[tooltip="16 -> 83\nProbability 3.12%" ];
	Node0x60000207e170 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{20:\l|  %21 = load ptr, ptr %6, align 8\l  %22 = load i32, ptr %10, align 4\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds %struct.complex, ptr %21, i64 %23\l  %25 = getelementptr inbounds %struct.complex, ptr %24, i32 0, i32 0\l  %26 = load double, ptr %25, align 8\l  %27 = load ptr, ptr %7, align 8\l  %28 = load i32, ptr %10, align 4\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds %struct.complex, ptr %27, i64 %29\l  %31 = getelementptr inbounds %struct.complex, ptr %30, i32 0, i32 0\l  %32 = load double, ptr %31, align 8\l  %33 = load ptr, ptr %6, align 8\l  %34 = load i32, ptr %10, align 4\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds %struct.complex, ptr %33, i64 %35\l  %37 = getelementptr inbounds %struct.complex, ptr %36, i32 0, i32 1\l  %38 = load double, ptr %37, align 8\l  %39 = load ptr, ptr %7, align 8\l  %40 = load i32, ptr %10, align 4\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds %struct.complex, ptr %39, i64 %41\l  %43 = getelementptr inbounds %struct.complex, ptr %42, i32 0, i32 1\l  %44 = load double, ptr %43, align 8\l  %45 = fmul double %38, %44\l  %46 = call double @llvm.fmuladd.f64(double %26, double %32, double %45)\l  %47 = getelementptr inbounds %struct.complex, ptr %5, i32 0, i32 0\l  %48 = load double, ptr %47, align 8\l  %49 = fadd double %48, %46\l  store double %49, ptr %47, align 8\l  %50 = load ptr, ptr %6, align 8\l  %51 = load i32, ptr %10, align 4\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds %struct.complex, ptr %50, i64 %52\l  %54 = getelementptr inbounds %struct.complex, ptr %53, i32 0, i32 0\l  %55 = load double, ptr %54, align 8\l  %56 = load ptr, ptr %7, align 8\l  %57 = load i32, ptr %10, align 4\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds %struct.complex, ptr %56, i64 %58\l  %60 = getelementptr inbounds %struct.complex, ptr %59, i32 0, i32 1\l  %61 = load double, ptr %60, align 8\l  %62 = load ptr, ptr %6, align 8\l  %63 = load i32, ptr %10, align 4\l  %64 = sext i32 %63 to i64\l  %65 = getelementptr inbounds %struct.complex, ptr %62, i64 %64\l  %66 = getelementptr inbounds %struct.complex, ptr %65, i32 0, i32 1\l  %67 = load double, ptr %66, align 8\l  %68 = load ptr, ptr %7, align 8\l  %69 = load i32, ptr %10, align 4\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds %struct.complex, ptr %68, i64 %70\l  %72 = getelementptr inbounds %struct.complex, ptr %71, i32 0, i32 0\l  %73 = load double, ptr %72, align 8\l  %74 = fmul double %67, %73\l  %75 = fneg double %74\l  %76 = call double @llvm.fmuladd.f64(double %55, double %61, double %75)\l  %77 = getelementptr inbounds %struct.complex, ptr %5, i32 0, i32 1\l  %78 = load double, ptr %77, align 8\l  %79 = fadd double %78, %76\l  store double %79, ptr %77, align 8\l  br label %80\l}"];
	Node0x60000207e170 -> Node0x60000207e1c0[tooltip="20 -> 80\nProbability 100.00%" ];
	Node0x60000207e1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{80:\l|  %81 = load i32, ptr %10, align 4\l  %82 = add nsw i32 %81, 1\l  store i32 %82, ptr %10, align 4\l  br label %16\l}"];
	Node0x60000207e1c0 -> Node0x60000207e120[tooltip="80 -> 16\nProbability 100.00%" ];
	Node0x60000207e210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{83:\l|  br label %153\l}"];
	Node0x60000207e210 -> Node0x60000207e3f0[tooltip="83 -> 153\nProbability 100.00%" ];
	Node0x60000207e260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{84:\l|  store i32 0, ptr %10, align 4\l  br label %85\l}"];
	Node0x60000207e260 -> Node0x60000207e2b0[tooltip="84 -> 85\nProbability 100.00%" ];
	Node0x60000207e2b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{85:\l|  %86 = load i32, ptr %10, align 4\l  %87 = load i32, ptr %8, align 4\l  %88 = icmp slt i32 %86, %87\l  br i1 %88, label %89, label %152\l|{<s0>T|<s1>F}}"];
	Node0x60000207e2b0:s0 -> Node0x60000207e300[tooltip="85 -> 89\nProbability 96.88%" ];
	Node0x60000207e2b0:s1 -> Node0x60000207e3a0[tooltip="85 -> 152\nProbability 3.12%" ];
	Node0x60000207e300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{89:\l|  %90 = load ptr, ptr %6, align 8\l  %91 = load i32, ptr %10, align 4\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds %struct.complex, ptr %90, i64 %92\l  %94 = getelementptr inbounds %struct.complex, ptr %93, i32 0, i32 0\l  %95 = load double, ptr %94, align 8\l  %96 = load ptr, ptr %7, align 8\l  %97 = load i32, ptr %10, align 4\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds %struct.complex, ptr %96, i64 %98\l  %100 = getelementptr inbounds %struct.complex, ptr %99, i32 0, i32 0\l  %101 = load double, ptr %100, align 8\l  %102 = load ptr, ptr %6, align 8\l  %103 = load i32, ptr %10, align 4\l  %104 = sext i32 %103 to i64\l  %105 = getelementptr inbounds %struct.complex, ptr %102, i64 %104\l  %106 = getelementptr inbounds %struct.complex, ptr %105, i32 0, i32 1\l  %107 = load double, ptr %106, align 8\l  %108 = load ptr, ptr %7, align 8\l  %109 = load i32, ptr %10, align 4\l  %110 = sext i32 %109 to i64\l  %111 = getelementptr inbounds %struct.complex, ptr %108, i64 %110\l  %112 = getelementptr inbounds %struct.complex, ptr %111, i32 0, i32 1\l  %113 = load double, ptr %112, align 8\l  %114 = fmul double %107, %113\l  %115 = fneg double %114\l  %116 = call double @llvm.fmuladd.f64(double %95, double %101, double %115)\l  %117 = getelementptr inbounds %struct.complex, ptr %5, i32 0, i32 0\l  %118 = load double, ptr %117, align 8\l  %119 = fadd double %118, %116\l  store double %119, ptr %117, align 8\l  %120 = load ptr, ptr %6, align 8\l  %121 = load i32, ptr %10, align 4\l  %122 = sext i32 %121 to i64\l  %123 = getelementptr inbounds %struct.complex, ptr %120, i64 %122\l  %124 = getelementptr inbounds %struct.complex, ptr %123, i32 0, i32 0\l  %125 = load double, ptr %124, align 8\l  %126 = load ptr, ptr %7, align 8\l  %127 = load i32, ptr %10, align 4\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds %struct.complex, ptr %126, i64 %128\l  %130 = getelementptr inbounds %struct.complex, ptr %129, i32 0, i32 1\l  %131 = load double, ptr %130, align 8\l  %132 = load ptr, ptr %6, align 8\l  %133 = load i32, ptr %10, align 4\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds %struct.complex, ptr %132, i64 %134\l  %136 = getelementptr inbounds %struct.complex, ptr %135, i32 0, i32 1\l  %137 = load double, ptr %136, align 8\l  %138 = load ptr, ptr %7, align 8\l  %139 = load i32, ptr %10, align 4\l  %140 = sext i32 %139 to i64\l  %141 = getelementptr inbounds %struct.complex, ptr %138, i64 %140\l  %142 = getelementptr inbounds %struct.complex, ptr %141, i32 0, i32 0\l  %143 = load double, ptr %142, align 8\l  %144 = fmul double %137, %143\l  %145 = call double @llvm.fmuladd.f64(double %125, double %131, double %144)\l  %146 = getelementptr inbounds %struct.complex, ptr %5, i32 0, i32 1\l  %147 = load double, ptr %146, align 8\l  %148 = fadd double %147, %145\l  store double %148, ptr %146, align 8\l  br label %149\l}"];
	Node0x60000207e300 -> Node0x60000207e350[tooltip="89 -> 149\nProbability 100.00%" ];
	Node0x60000207e350 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{149:\l|  %150 = load i32, ptr %10, align 4\l  %151 = add nsw i32 %150, 1\l  store i32 %151, ptr %10, align 4\l  br label %85\l}"];
	Node0x60000207e350 -> Node0x60000207e2b0[tooltip="149 -> 85\nProbability 100.00%" ];
	Node0x60000207e3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{152:\l|  br label %153\l}"];
	Node0x60000207e3a0 -> Node0x60000207e3f0[tooltip="152 -> 153\nProbability 100.00%" ];
	Node0x60000207e3f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{153:\l|  %154 = load %struct.complex, ptr %5, align 8\l  ret %struct.complex %154\l}"];
}
