digraph "CFG for 'zrot_cols' function" {
	label="CFG for 'zrot_cols' function";

	Node0x60000012e850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{6:\l|  %7 = alloca %struct.complex, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca double, align 8\l  %12 = alloca ptr, align 8\l  %13 = alloca i32, align 4\l  %14 = alloca %struct.complex, align 8\l  %15 = alloca %struct.complex, align 8\l  store [2 x double] %4, ptr %7, align 8\l  store ptr %0, ptr %8, align 8\l  store i32 %1, ptr %9, align 4\l  store i32 %2, ptr %10, align 4\l  store double %3, ptr %11, align 8\l  store ptr %5, ptr %12, align 8\l  %16 = load ptr, ptr %8, align 8\l  %17 = icmp eq ptr %16, null\l  br i1 %17, label %18, label %20\l|{<s0>T|<s1>F}}"];
	Node0x60000012e850:s0 -> Node0x60000012e8a0[tooltip="6 -> 18\nProbability 37.50%" ];
	Node0x60000012e850:s1 -> Node0x60000012e8f0[tooltip="6 -> 20\nProbability 62.50%" ];
	Node0x60000012e8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{18:\l|  %19 = call i32 @ev_err(ptr noundef @.str, i32 noundef 8, i32 noundef 163,\l... ptr noundef @.str.3, i32 noundef 0)\l  br label %20\l}"];
	Node0x60000012e8a0 -> Node0x60000012e8f0[tooltip="18 -> 20\nProbability 100.00%" ];
	Node0x60000012e8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{20:\l|  %21 = load i32, ptr %9, align 4\l  %22 = icmp slt i32 %21, 0\l  br i1 %22, label %38, label %23\l|{<s0>T|<s1>F}}"];
	Node0x60000012e8f0:s0 -> Node0x60000012ea30[tooltip="20 -> 38\nProbability 37.50%" ];
	Node0x60000012e8f0:s1 -> Node0x60000012e940[tooltip="20 -> 23\nProbability 62.50%" ];
	Node0x60000012e940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{23:\l|  %24 = load i32, ptr %9, align 4\l  %25 = load ptr, ptr %8, align 8\l  %26 = getelementptr inbounds %struct.ZMAT, ptr %25, i32 0, i32 1\l  %27 = load i32, ptr %26, align 4\l  %28 = icmp uge i32 %24, %27\l  br i1 %28, label %38, label %29\l|{<s0>T|<s1>F}}"];
	Node0x60000012e940:s0 -> Node0x60000012ea30[tooltip="23 -> 38\nProbability 50.00%" ];
	Node0x60000012e940:s1 -> Node0x60000012e990[tooltip="23 -> 29\nProbability 50.00%" ];
	Node0x60000012e990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{29:\l|  %30 = load i32, ptr %10, align 4\l  %31 = icmp slt i32 %30, 0\l  br i1 %31, label %38, label %32\l|{<s0>T|<s1>F}}"];
	Node0x60000012e990:s0 -> Node0x60000012ea30[tooltip="29 -> 38\nProbability 37.50%" ];
	Node0x60000012e990:s1 -> Node0x60000012e9e0[tooltip="29 -> 32\nProbability 62.50%" ];
	Node0x60000012e9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170" fontname="Courier",label="{32:\l|  %33 = load i32, ptr %10, align 4\l  %34 = load ptr, ptr %8, align 8\l  %35 = getelementptr inbounds %struct.ZMAT, ptr %34, i32 0, i32 1\l  %36 = load i32, ptr %35, align 4\l  %37 = icmp uge i32 %33, %36\l  br i1 %37, label %38, label %40\l|{<s0>T|<s1>F}}"];
	Node0x60000012e9e0:s0 -> Node0x60000012ea30[tooltip="32 -> 38\nProbability 50.00%" ];
	Node0x60000012e9e0:s1 -> Node0x60000012ea80[tooltip="32 -> 40\nProbability 50.00%" ];
	Node0x60000012ea30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{38:\l|  %39 = call i32 @ev_err(ptr noundef @.str, i32 noundef 10, i32 noundef 165,\l... ptr noundef @.str.3, i32 noundef 0)\l  br label %40\l}"];
	Node0x60000012ea30 -> Node0x60000012ea80[tooltip="38 -> 40\nProbability 100.00%" ];
	Node0x60000012ea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{40:\l|  %41 = load ptr, ptr %8, align 8\l  %42 = load ptr, ptr %12, align 8\l  %43 = icmp ne ptr %41, %42\l  br i1 %43, label %44, label %55\l|{<s0>T|<s1>F}}"];
	Node0x60000012ea80:s0 -> Node0x60000012ead0[tooltip="40 -> 44\nProbability 62.50%" ];
	Node0x60000012ea80:s1 -> Node0x60000012eb20[tooltip="40 -> 55\nProbability 37.50%" ];
	Node0x60000012ead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{44:\l|  %45 = load ptr, ptr %8, align 8\l  %46 = load ptr, ptr %12, align 8\l  %47 = load ptr, ptr %8, align 8\l  %48 = getelementptr inbounds %struct.ZMAT, ptr %47, i32 0, i32 0\l  %49 = load i32, ptr %48, align 8\l  %50 = load ptr, ptr %8, align 8\l  %51 = getelementptr inbounds %struct.ZMAT, ptr %50, i32 0, i32 1\l  %52 = load i32, ptr %51, align 4\l  %53 = call ptr @zm_resize(ptr noundef %46, i32 noundef %49, i32 noundef %52)\l  %54 = call ptr @_zm_copy(ptr noundef %45, ptr noundef %53, i32 noundef 0,\l... i32 noundef 0)\l  store ptr %54, ptr %12, align 8\l  br label %55\l}"];
	Node0x60000012ead0 -> Node0x60000012eb20[tooltip="44 -> 55\nProbability 100.00%" ];
	Node0x60000012eb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{55:\l|  store i32 0, ptr %13, align 4\l  br label %56\l}"];
	Node0x60000012eb20 -> Node0x60000012eb70[tooltip="55 -> 56\nProbability 100.00%" ];
	Node0x60000012eb70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{56:\l|  %57 = load i32, ptr %13, align 4\l  %58 = load ptr, ptr %8, align 8\l  %59 = getelementptr inbounds %struct.ZMAT, ptr %58, i32 0, i32 0\l  %60 = load i32, ptr %59, align 8\l  %61 = icmp ult i32 %57, %60\l  br i1 %61, label %62, label %190\l|{<s0>T|<s1>F}}"];
	Node0x60000012eb70:s0 -> Node0x60000012ebc0[tooltip="56 -> 62\nProbability 96.88%" ];
	Node0x60000012eb70:s1 -> Node0x60000012ec60[tooltip="56 -> 190\nProbability 3.12%" ];
	Node0x60000012ebc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{62:\l|  %63 = load ptr, ptr %12, align 8\l  %64 = getelementptr inbounds %struct.ZMAT, ptr %63, i32 0, i32 6\l  %65 = load ptr, ptr %64, align 8\l  %66 = load i32, ptr %13, align 4\l  %67 = zext i32 %66 to i64\l  %68 = getelementptr inbounds ptr, ptr %65, i64 %67\l  %69 = load ptr, ptr %68, align 8\l  %70 = load i32, ptr %9, align 4\l  %71 = sext i32 %70 to i64\l  %72 = getelementptr inbounds %struct.complex, ptr %69, i64 %71\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %72, i64 16,\l... i1 false)\l  %73 = load ptr, ptr %12, align 8\l  %74 = getelementptr inbounds %struct.ZMAT, ptr %73, i32 0, i32 6\l  %75 = load ptr, ptr %74, align 8\l  %76 = load i32, ptr %13, align 4\l  %77 = zext i32 %76 to i64\l  %78 = getelementptr inbounds ptr, ptr %75, i64 %77\l  %79 = load ptr, ptr %78, align 8\l  %80 = load i32, ptr %10, align 4\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds %struct.complex, ptr %79, i64 %81\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %82, i64 16,\l... i1 false)\l  %83 = load double, ptr %11, align 8\l  %84 = getelementptr inbounds %struct.complex, ptr %14, i32 0, i32 0\l  %85 = load double, ptr %84, align 8\l  %86 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 0\l  %87 = load double, ptr %86, align 8\l  %88 = getelementptr inbounds %struct.complex, ptr %15, i32 0, i32 0\l  %89 = load double, ptr %88, align 8\l  %90 = fmul double %87, %89\l  %91 = fneg double %90\l  %92 = call double @llvm.fmuladd.f64(double %83, double %85, double %91)\l  %93 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 1\l  %94 = load double, ptr %93, align 8\l  %95 = getelementptr inbounds %struct.complex, ptr %15, i32 0, i32 1\l  %96 = load double, ptr %95, align 8\l  %97 = fneg double %94\l  %98 = call double @llvm.fmuladd.f64(double %97, double %96, double %92)\l  %99 = load ptr, ptr %12, align 8\l  %100 = getelementptr inbounds %struct.ZMAT, ptr %99, i32 0, i32 6\l  %101 = load ptr, ptr %100, align 8\l  %102 = load i32, ptr %13, align 4\l  %103 = zext i32 %102 to i64\l  %104 = getelementptr inbounds ptr, ptr %101, i64 %103\l  %105 = load ptr, ptr %104, align 8\l  %106 = load i32, ptr %9, align 4\l  %107 = sext i32 %106 to i64\l  %108 = getelementptr inbounds %struct.complex, ptr %105, i64 %107\l  %109 = getelementptr inbounds %struct.complex, ptr %108, i32 0, i32 0\l  store double %98, ptr %109, align 8\l  %110 = load double, ptr %11, align 8\l  %111 = getelementptr inbounds %struct.complex, ptr %14, i32 0, i32 1\l  %112 = load double, ptr %111, align 8\l  %113 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 0\l  %114 = load double, ptr %113, align 8\l  %115 = getelementptr inbounds %struct.complex, ptr %15, i32 0, i32 1\l  %116 = load double, ptr %115, align 8\l  %117 = fmul double %114, %116\l  %118 = fneg double %117\l  %119 = call double @llvm.fmuladd.f64(double %110, double %112, double %118)\l  %120 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 1\l  %121 = load double, ptr %120, align 8\l  %122 = getelementptr inbounds %struct.complex, ptr %15, i32 0, i32 0\l  %123 = load double, ptr %122, align 8\l  %124 = call double @llvm.fmuladd.f64(double %121, double %123, double %119)\l  %125 = load ptr, ptr %12, align 8\l  %126 = getelementptr inbounds %struct.ZMAT, ptr %125, i32 0, i32 6\l  %127 = load ptr, ptr %126, align 8\l  %128 = load i32, ptr %13, align 4\l  %129 = zext i32 %128 to i64\l  %130 = getelementptr inbounds ptr, ptr %127, i64 %129\l  %131 = load ptr, ptr %130, align 8\l  %132 = load i32, ptr %9, align 4\l  %133 = sext i32 %132 to i64\l  %134 = getelementptr inbounds %struct.complex, ptr %131, i64 %133\l  %135 = getelementptr inbounds %struct.complex, ptr %134, i32 0, i32 1\l  store double %124, ptr %135, align 8\l  %136 = load double, ptr %11, align 8\l  %137 = getelementptr inbounds %struct.complex, ptr %15, i32 0, i32 0\l  %138 = load double, ptr %137, align 8\l  %139 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 0\l  %140 = load double, ptr %139, align 8\l  %141 = getelementptr inbounds %struct.complex, ptr %14, i32 0, i32 0\l  %142 = load double, ptr %141, align 8\l  %143 = fmul double %140, %142\l  %144 = call double @llvm.fmuladd.f64(double %136, double %138, double %143)\l  %145 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 1\l  %146 = load double, ptr %145, align 8\l  %147 = getelementptr inbounds %struct.complex, ptr %14, i32 0, i32 1\l  %148 = load double, ptr %147, align 8\l  %149 = fneg double %146\l  %150 = call double @llvm.fmuladd.f64(double %149, double %148, double %144)\l  %151 = load ptr, ptr %12, align 8\l  %152 = getelementptr inbounds %struct.ZMAT, ptr %151, i32 0, i32 6\l  %153 = load ptr, ptr %152, align 8\l  %154 = load i32, ptr %13, align 4\l  %155 = zext i32 %154 to i64\l  %156 = getelementptr inbounds ptr, ptr %153, i64 %155\l  %157 = load ptr, ptr %156, align 8\l  %158 = load i32, ptr %10, align 4\l  %159 = sext i32 %158 to i64\l  %160 = getelementptr inbounds %struct.complex, ptr %157, i64 %159\l  %161 = getelementptr inbounds %struct.complex, ptr %160, i32 0, i32 0\l  store double %150, ptr %161, align 8\l  %162 = load double, ptr %11, align 8\l  %163 = getelementptr inbounds %struct.complex, ptr %15, i32 0, i32 1\l  %164 = load double, ptr %163, align 8\l  %165 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 0\l  %166 = load double, ptr %165, align 8\l  %167 = getelementptr inbounds %struct.complex, ptr %14, i32 0, i32 1\l  %168 = load double, ptr %167, align 8\l  %169 = fmul double %166, %168\l  %170 = call double @llvm.fmuladd.f64(double %162, double %164, double %169)\l  %171 = getelementptr inbounds %struct.complex, ptr %7, i32 0, i32 1\l  %172 = load double, ptr %171, align 8\l  %173 = getelementptr inbounds %struct.complex, ptr %14, i32 0, i32 0\l  %174 = load double, ptr %173, align 8\l  %175 = call double @llvm.fmuladd.f64(double %172, double %174, double %170)\l  %176 = load ptr, ptr %12, align 8\l  %177 = getelementptr inbounds %struct.ZMAT, ptr %176, i32 0, i32 6\l  %178 = load ptr, ptr %177, align 8\l  %179 = load i32, ptr %13, align 4\l  %180 = zext i32 %179 to i64\l  %181 = getelementptr inbounds ptr, ptr %178, i64 %180\l  %182 = load ptr, ptr %181, align 8\l  %183 = load i32, ptr %10, align 4\l  %184 = sext i32 %183 to i64\l  %185 = getelementptr inbounds %struct.complex, ptr %182, i64 %184\l  %186 = getelementptr inbounds %struct.complex, ptr %185, i32 0, i32 1\l  store double %175, ptr %186, align 8\l  br label %187\l}"];
	Node0x60000012ebc0 -> Node0x60000012ec10[tooltip="62 -> 187\nProbability 100.00%" ];
	Node0x60000012ec10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{187:\l|  %188 = load i32, ptr %13, align 4\l  %189 = add i32 %188, 1\l  store i32 %189, ptr %13, align 4\l  br label %56\l}"];
	Node0x60000012ec10 -> Node0x60000012eb70[tooltip="187 -> 56\nProbability 100.00%" ];
	Node0x60000012ec60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{190:\l|  %191 = load ptr, ptr %12, align 8\l  ret ptr %191\l}"];
}
