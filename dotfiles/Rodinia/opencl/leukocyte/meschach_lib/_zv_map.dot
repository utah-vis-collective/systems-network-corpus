digraph "CFG for '_zv_map' function" {
	label="CFG for '_zv_map' function";

	Node0x600000d8e530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{4:\l|  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca %struct.complex, align 8\l  store ptr %0, ptr %5, align 8\l  store ptr %1, ptr %6, align 8\l  store ptr %2, ptr %7, align 8\l  store ptr %3, ptr %8, align 8\l  %14 = load ptr, ptr %7, align 8\l  %15 = icmp ne ptr %14, null\l  br i1 %15, label %16, label %19\l|{<s0>T|<s1>F}}"];
	Node0x600000d8e530:s0 -> Node0x600000d8e580[tooltip="4 -> 16\nProbability 62.50%" ];
	Node0x600000d8e530:s1 -> Node0x600000d8e5d0[tooltip="4 -> 19\nProbability 37.50%" ];
	Node0x600000d8e580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{16:\l|  %17 = load ptr, ptr %5, align 8\l  %18 = icmp ne ptr %17, null\l  br i1 %18, label %21, label %19\l|{<s0>T|<s1>F}}"];
	Node0x600000d8e580:s0 -> Node0x600000d8e620[tooltip="16 -> 21\nProbability 62.50%" ];
	Node0x600000d8e580:s1 -> Node0x600000d8e5d0[tooltip="16 -> 19\nProbability 37.50%" ];
	Node0x600000d8e5d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{19:\l|  %20 = call i32 @ev_err(ptr noundef @.str, i32 noundef 8, i32 noundef 213,\l... ptr noundef @.str.7, i32 noundef 0)\l  br label %21\l}"];
	Node0x600000d8e5d0 -> Node0x600000d8e620[tooltip="19 -> 21\nProbability 100.00%" ];
	Node0x600000d8e620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{21:\l|  %22 = load ptr, ptr %8, align 8\l  %23 = icmp ne ptr %22, null\l  br i1 %23, label %24, label %32\l|{<s0>T|<s1>F}}"];
	Node0x600000d8e620:s0 -> Node0x600000d8e670[tooltip="21 -> 24\nProbability 62.50%" ];
	Node0x600000d8e620:s1 -> Node0x600000d8e6c0[tooltip="21 -> 32\nProbability 37.50%" ];
	Node0x600000d8e670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{24:\l|  %25 = load ptr, ptr %8, align 8\l  %26 = getelementptr inbounds %struct.ZVEC, ptr %25, i32 0, i32 0\l  %27 = load i32, ptr %26, align 8\l  %28 = load ptr, ptr %7, align 8\l  %29 = getelementptr inbounds %struct.ZVEC, ptr %28, i32 0, i32 0\l  %30 = load i32, ptr %29, align 8\l  %31 = icmp ne i32 %27, %30\l  br i1 %31, label %32, label %38\l|{<s0>T|<s1>F}}"];
	Node0x600000d8e670:s0 -> Node0x600000d8e6c0[tooltip="24 -> 32\nProbability 50.00%" ];
	Node0x600000d8e670:s1 -> Node0x600000d8e710[tooltip="24 -> 38\nProbability 50.00%" ];
	Node0x600000d8e6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{32:\l|  %33 = load ptr, ptr %8, align 8\l  %34 = load ptr, ptr %7, align 8\l  %35 = getelementptr inbounds %struct.ZVEC, ptr %34, i32 0, i32 0\l  %36 = load i32, ptr %35, align 8\l  %37 = call ptr @zv_resize(ptr noundef %33, i32 noundef %36)\l  store ptr %37, ptr %8, align 8\l  br label %38\l}"];
	Node0x600000d8e6c0 -> Node0x600000d8e710[tooltip="32 -> 38\nProbability 100.00%" ];
	Node0x600000d8e710 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{38:\l|  %39 = load ptr, ptr %7, align 8\l  %40 = getelementptr inbounds %struct.ZVEC, ptr %39, i32 0, i32 0\l  %41 = load i32, ptr %40, align 8\l  store i32 %41, ptr %12, align 4\l  %42 = load ptr, ptr %7, align 8\l  %43 = getelementptr inbounds %struct.ZVEC, ptr %42, i32 0, i32 2\l  %44 = load ptr, ptr %43, align 8\l  store ptr %44, ptr %9, align 8\l  %45 = load ptr, ptr %8, align 8\l  %46 = getelementptr inbounds %struct.ZVEC, ptr %45, i32 0, i32 2\l  %47 = load ptr, ptr %46, align 8\l  store ptr %47, ptr %10, align 8\l  store i32 0, ptr %11, align 4\l  br label %48\l}"];
	Node0x600000d8e710 -> Node0x600000d8e760[tooltip="38 -> 48\nProbability 100.00%" ];
	Node0x600000d8e760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{48:\l|  %49 = load i32, ptr %11, align 4\l  %50 = load i32, ptr %12, align 4\l  %51 = icmp slt i32 %49, %50\l  br i1 %51, label %52, label %72\l|{<s0>T|<s1>F}}"];
	Node0x600000d8e760:s0 -> Node0x600000d8e7b0[tooltip="48 -> 52\nProbability 96.88%" ];
	Node0x600000d8e760:s1 -> Node0x600000d8e850[tooltip="48 -> 72\nProbability 3.12%" ];
	Node0x600000d8e7b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{52:\l|  %53 = load ptr, ptr %10, align 8\l  %54 = load i32, ptr %11, align 4\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds %struct.complex, ptr %53, i64 %55\l  %57 = load ptr, ptr %5, align 8\l  %58 = load ptr, ptr %6, align 8\l  %59 = load ptr, ptr %9, align 8\l  %60 = load i32, ptr %11, align 4\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds %struct.complex, ptr %59, i64 %61\l  %63 = load [2 x double], ptr %62, align 8\l  %64 = call %struct.complex %57(ptr noundef %58, [2 x double] %63)\l  %65 = getelementptr inbounds %struct.complex, ptr %13, i32 0, i32 0\l  %66 = extractvalue %struct.complex %64, 0\l  store double %66, ptr %65, align 8\l  %67 = getelementptr inbounds %struct.complex, ptr %13, i32 0, i32 1\l  %68 = extractvalue %struct.complex %64, 1\l  store double %68, ptr %67, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %13, i64 16,\l... i1 false)\l  br label %69\l}"];
	Node0x600000d8e7b0 -> Node0x600000d8e800[tooltip="52 -> 69\nProbability 100.00%" ];
	Node0x600000d8e800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{69:\l|  %70 = load i32, ptr %11, align 4\l  %71 = add nsw i32 %70, 1\l  store i32 %71, ptr %11, align 4\l  br label %48\l}"];
	Node0x600000d8e800 -> Node0x600000d8e760[tooltip="69 -> 48\nProbability 100.00%" ];
	Node0x600000d8e850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{72:\l|  %73 = load ptr, ptr %8, align 8\l  ret ptr %73\l}"];
}
