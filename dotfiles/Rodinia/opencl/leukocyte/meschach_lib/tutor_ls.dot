digraph "CFG for 'tutor_ls' function" {
	label="CFG for 'tutor_ls' function";

	Node0x600000f36cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{0:\l|  %1 = alloca ptr, align 8\l  %2 = alloca ptr, align 8\l  %3 = alloca ptr, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = call i32 (ptr, ...) @printf(ptr noundef @.str.9)\l  %7 = load ptr, ptr @__stdinp, align 8\l  %8 = call ptr @m_finput(ptr noundef %7, ptr noundef null)\l  store ptr %8, ptr %1, align 8\l  %9 = load ptr, ptr %1, align 8\l  %10 = getelementptr inbounds %struct.MAT, ptr %9, i32 0, i32 0\l  %11 = load i32, ptr %10, align 8\l  %12 = load ptr, ptr %1, align 8\l  %13 = getelementptr inbounds %struct.MAT, ptr %12, i32 0, i32 1\l  %14 = load i32, ptr %13, align 4\l  %15 = icmp ult i32 %11, %14\l  br i1 %15, label %16, label %18\l|{<s0>T|<s1>F}}"];
	Node0x600000f36cb0:s0 -> Node0x600000f36e90[tooltip="0 -> 16\nProbability 0.00%" ];
	Node0x600000f36cb0:s1 -> Node0x600000f36ee0[tooltip="0 -> 18\nProbability 100.00%" ];
	Node0x600000f36e90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70" fontname="Courier",label="{16:\l|  %17 = call i32 (ptr, ...) @printf(ptr noundef @.str.10)\l  call void @exit(i32 noundef 0) #5\l  unreachable\l}"];
	Node0x600000f36ee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{18:\l|  %19 = call i32 (ptr, ...) @printf(ptr noundef @.str.11)\l  %20 = load ptr, ptr @__stdoutp, align 8\l  %21 = load ptr, ptr %1, align 8\l  call void @m_foutput(ptr noundef %20, ptr noundef %21)\l  %22 = load ptr, ptr %1, align 8\l  %23 = getelementptr inbounds %struct.MAT, ptr %22, i32 0, i32 0\l  %24 = load i32, ptr %23, align 8\l  %25 = call ptr @v_get(i32 noundef %24)\l  store ptr %25, ptr %5, align 8\l  %26 = load ptr, ptr %1, align 8\l  %27 = call ptr @_m_copy(ptr noundef %26, ptr noundef null, i32 noundef 0,\l... i32 noundef 0)\l  store ptr %27, ptr %2, align 8\l  %28 = load ptr, ptr %2, align 8\l  %29 = load ptr, ptr %5, align 8\l  %30 = call ptr @QRfactor(ptr noundef %28, ptr noundef %29)\l  %31 = call i32 (ptr, ...) @printf(ptr noundef @.str.12)\l  %32 = load ptr, ptr %1, align 8\l  %33 = getelementptr inbounds %struct.MAT, ptr %32, i32 0, i32 0\l  %34 = load i32, ptr %33, align 8\l  %35 = call ptr @v_get(i32 noundef %34)\l  store ptr %35, ptr %3, align 8\l  %36 = load ptr, ptr @__stdinp, align 8\l  %37 = load ptr, ptr %3, align 8\l  %38 = call ptr @v_finput(ptr noundef %36, ptr noundef %37)\l  store ptr %38, ptr %3, align 8\l  %39 = call i32 (ptr, ...) @printf(ptr noundef @.str.13)\l  %40 = load ptr, ptr @__stdoutp, align 8\l  %41 = load ptr, ptr %3, align 8\l  call void @v_foutput(ptr noundef %40, ptr noundef %41)\l  %42 = load ptr, ptr %2, align 8\l  %43 = load ptr, ptr %5, align 8\l  %44 = load ptr, ptr %3, align 8\l  %45 = call ptr @QRsolve(ptr noundef %42, ptr noundef %43, ptr noundef %44,\l... ptr noundef null)\l  store ptr %45, ptr %4, align 8\l  %46 = call i32 (ptr, ...) @printf(ptr noundef @.str.14)\l  %47 = load ptr, ptr @__stdoutp, align 8\l  %48 = load ptr, ptr %4, align 8\l  call void @v_foutput(ptr noundef %47, ptr noundef %48)\l  %49 = load ptr, ptr %1, align 8\l  %50 = load ptr, ptr %4, align 8\l  %51 = call ptr @mv_mlt(ptr noundef %49, ptr noundef %50, ptr noundef null)\l  %52 = load ptr, ptr %3, align 8\l  %53 = call ptr @v_sub(ptr noundef %51, ptr noundef %52, ptr noundef null)\l  %54 = call double @_v_norm2(ptr noundef %53, ptr noundef null)\l  %55 = call i32 (ptr, ...) @printf(ptr noundef @.str.15, double noundef %54)\l  ret void\l}"];
}
