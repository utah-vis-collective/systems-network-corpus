digraph "CFG for 'zexp' function" {
	label="CFG for 'zexp' function";

	Node0x600000bd6cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca %struct.complex, align 8\l  %3 = alloca %struct.complex, align 8\l  %4 = alloca double, align 8\l  store [2 x double] %0, ptr %3, align 8\l  %5 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 0\l  %6 = load double, ptr %5, align 8\l  %7 = call double @llvm.exp.f64(double %6)\l  store double %7, ptr %4, align 8\l  %8 = load double, ptr %4, align 8\l  %9 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 1\l  %10 = load double, ptr %9, align 8\l  %11 = call double @llvm.cos.f64(double %10)\l  %12 = fmul double %8, %11\l  %13 = getelementptr inbounds %struct.complex, ptr %2, i32 0, i32 0\l  store double %12, ptr %13, align 8\l  %14 = load double, ptr %4, align 8\l  %15 = getelementptr inbounds %struct.complex, ptr %3, i32 0, i32 1\l  %16 = load double, ptr %15, align 8\l  %17 = call double @llvm.sin.f64(double %16)\l  %18 = fmul double %14, %17\l  %19 = getelementptr inbounds %struct.complex, ptr %2, i32 0, i32 1\l  store double %18, ptr %19, align 8\l  %20 = load %struct.complex, ptr %2, align 8\l  ret %struct.complex %20\l}"];
}
