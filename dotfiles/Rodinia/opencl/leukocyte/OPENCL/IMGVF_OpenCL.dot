digraph "CFG for 'IMGVF_OpenCL' function" {
	label="CFG for 'IMGVF_OpenCL' function";

	Node0x600001ad1f90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{8:\l|  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca double, align 8\l  %12 = alloca double, align 8\l  %13 = alloca double, align 8\l  %14 = alloca i32, align 4\l  %15 = alloca double, align 8\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca ptr, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca ptr, align 8\l  %21 = alloca i64, align 8\l  %22 = alloca i64, align 8\l  %23 = alloca float, align 4\l  %24 = alloca float, align 4\l  %25 = alloca float, align 4\l  %26 = alloca float, align 4\l  store ptr %0, ptr %9, align 8\l  store ptr %1, ptr %10, align 8\l  store double %2, ptr %11, align 8\l  store double %3, ptr %12, align 8\l  store double %4, ptr %13, align 8\l  store i32 %5, ptr %14, align 4\l  store double %6, ptr %15, align 8\l  store i32 %7, ptr %16, align 4\l  %27 = load ptr, ptr %9, align 8\l  %28 = load i32, ptr %16, align 4\l  call void @IMGVF_OpenCL_init(ptr noundef %27, i32 noundef %28)\l  %29 = load i32, ptr @compiled, align 4\l  %30 = icmp ne i32 %29, 0\l  br i1 %30, label %55, label %31\l|{<s0>T|<s1>F}}"];
	Node0x600001ad1f90:s0 -> Node0x600001ad2120[tooltip="8 -> 55\nProbability 62.50%" ];
	Node0x600001ad1f90:s1 -> Node0x600001ad1fe0[tooltip="8 -> 31\nProbability 37.50%" ];
	Node0x600001ad1fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{31:\l|  %32 = call ptr @load_kernel_source(ptr noundef @.str)\l  store ptr %32, ptr %18, align 8\l  %33 = load ptr, ptr %18, align 8\l  %34 = call i64 @strlen(ptr noundef %33) #5\l  store i64 %34, ptr %19, align 8\l  %35 = load ptr, ptr @context, align 8\l  %36 = call ptr @clCreateProgramWithSource(ptr noundef %35, i32 noundef 1,\l... ptr noundef %18, ptr noundef %19, ptr noundef %17)\l  store ptr %36, ptr %20, align 8\l  %37 = load i32, ptr %17, align 4\l  call void @check_error(i32 noundef %37, ptr noundef @.str.1, i32 noundef 40)\l  %38 = load ptr, ptr %20, align 8\l  %39 = call i32 @clBuildProgram(ptr noundef %38, i32 noundef 1, ptr noundef\l... @device, ptr noundef null, ptr noundef null, ptr noundef null)\l  store i32 %39, ptr %17, align 4\l  call void @llvm.memset.p0.i64(ptr align 1 @IMGVF_OpenCL.log, i8 0, i64\l... 65536, i1 false)\l  %40 = load ptr, ptr %20, align 8\l  %41 = load ptr, ptr @device, align 8\l  %42 = call i32 @clGetProgramBuildInfo(ptr noundef %40, ptr noundef %41, i32\l... noundef 4483, i64 noundef 65535, ptr noundef @IMGVF_OpenCL.log, ptr noundef\l... null)\l  %43 = call ptr @strstr(ptr noundef @IMGVF_OpenCL.log, ptr noundef @.str.2) #5\l  %44 = icmp ne ptr %43, null\l  br i1 %44, label %48, label %45\l|{<s0>T|<s1>F}}"];
	Node0x600001ad1fe0:s0 -> Node0x600001ad2080[tooltip="31 -> 48\nProbability 62.50%" ];
	Node0x600001ad1fe0:s1 -> Node0x600001ad2030[tooltip="31 -> 45\nProbability 37.50%" ];
	Node0x600001ad2030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{45:\l|  %46 = call ptr @strstr(ptr noundef @IMGVF_OpenCL.log, ptr noundef @.str.3)\l... #5\l  %47 = icmp ne ptr %46, null\l  br i1 %47, label %48, label %50\l|{<s0>T|<s1>F}}"];
	Node0x600001ad2030:s0 -> Node0x600001ad2080[tooltip="45 -> 48\nProbability 62.50%" ];
	Node0x600001ad2030:s1 -> Node0x600001ad20d0[tooltip="45 -> 50\nProbability 37.50%" ];
	Node0x600001ad2080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{48:\l|  %49 = call i32 (ptr, ...) @printf(ptr noundef @.str.4, ptr noundef\l... @IMGVF_OpenCL.log)\l  br label %50\l}"];
	Node0x600001ad2080 -> Node0x600001ad20d0[tooltip="48 -> 50\nProbability 100.00%" ];
	Node0x600001ad20d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{50:\l|  %51 = load i32, ptr %17, align 4\l  call void @check_error(i32 noundef %51, ptr noundef @.str.1, i32 noundef 46)\l  %52 = load ptr, ptr %20, align 8\l  %53 = call ptr @clCreateKernel(ptr noundef %52, ptr noundef @.str.5, ptr\l... noundef %17)\l  store ptr %53, ptr @IMGVF_kernel, align 8\l  %54 = load i32, ptr %17, align 4\l  call void @check_error(i32 noundef %54, ptr noundef @.str.1, i32 noundef 50)\l  store i32 1, ptr @compiled, align 4\l  br label %55\l}"];
	Node0x600001ad20d0 -> Node0x600001ad2120[tooltip="50 -> 55\nProbability 100.00%" ];
	Node0x600001ad2120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{55:\l|  %56 = load i32, ptr %16, align 4\l  %57 = sext i32 %56 to i64\l  store i64 %57, ptr %21, align 8\l  %58 = load i64, ptr %21, align 8\l  %59 = mul i64 %58, 256\l  store i64 %59, ptr %22, align 8\l  %60 = load double, ptr %11, align 8\l  %61 = fptrunc double %60 to float\l  store float %61, ptr %23, align 4\l  %62 = load double, ptr %12, align 8\l  %63 = fptrunc double %62 to float\l  store float %63, ptr %24, align 4\l  %64 = load double, ptr %13, align 8\l  %65 = fptrunc double %64 to float\l  store float %65, ptr %25, align 4\l  %66 = load double, ptr %15, align 8\l  %67 = fptrunc double %66 to float\l  store float %67, ptr %26, align 4\l  %68 = load ptr, ptr @IMGVF_kernel, align 8\l  %69 = call i32 @clSetKernelArg(ptr noundef %68, i32 noundef 0, i64 noundef\l... 8, ptr noundef @device_IMGVF_all)\l  %70 = load ptr, ptr @IMGVF_kernel, align 8\l  %71 = call i32 @clSetKernelArg(ptr noundef %70, i32 noundef 1, i64 noundef\l... 8, ptr noundef @device_I_all)\l  %72 = load ptr, ptr @IMGVF_kernel, align 8\l  %73 = call i32 @clSetKernelArg(ptr noundef %72, i32 noundef 2, i64 noundef\l... 8, ptr noundef @device_I_offsets)\l  %74 = load ptr, ptr @IMGVF_kernel, align 8\l  %75 = call i32 @clSetKernelArg(ptr noundef %74, i32 noundef 3, i64 noundef\l... 8, ptr noundef @device_m_array)\l  %76 = load ptr, ptr @IMGVF_kernel, align 8\l  %77 = call i32 @clSetKernelArg(ptr noundef %76, i32 noundef 4, i64 noundef\l... 8, ptr noundef @device_n_array)\l  %78 = load ptr, ptr @IMGVF_kernel, align 8\l  %79 = call i32 @clSetKernelArg(ptr noundef %78, i32 noundef 5, i64 noundef\l... 4, ptr noundef %23)\l  %80 = load ptr, ptr @IMGVF_kernel, align 8\l  %81 = call i32 @clSetKernelArg(ptr noundef %80, i32 noundef 6, i64 noundef\l... 4, ptr noundef %24)\l  %82 = load ptr, ptr @IMGVF_kernel, align 8\l  %83 = call i32 @clSetKernelArg(ptr noundef %82, i32 noundef 7, i64 noundef\l... 4, ptr noundef %25)\l  %84 = load ptr, ptr @IMGVF_kernel, align 8\l  %85 = call i32 @clSetKernelArg(ptr noundef %84, i32 noundef 8, i64 noundef\l... 4, ptr noundef %14)\l  %86 = load ptr, ptr @IMGVF_kernel, align 8\l  %87 = call i32 @clSetKernelArg(ptr noundef %86, i32 noundef 9, i64 noundef\l... 4, ptr noundef %26)\l  %88 = load ptr, ptr @command_queue, align 8\l  %89 = load ptr, ptr @IMGVF_kernel, align 8\l  %90 = call i32 @clEnqueueNDRangeKernel(ptr noundef %88, ptr noundef %89, i32\l... noundef 1, ptr noundef null, ptr noundef %22, ptr noundef @local_work_size,\l... i32 noundef 0, ptr noundef null, ptr noundef null)\l  store i32 %90, ptr %17, align 4\l  %91 = load i32, ptr %17, align 4\l  call void @check_error(i32 noundef %91, ptr noundef @.str.1, i32 noundef 80)\l  %92 = load ptr, ptr @command_queue, align 8\l  %93 = call i32 @clFinish(ptr noundef %92)\l  store i32 %93, ptr %17, align 4\l  %94 = load i32, ptr %17, align 4\l  call void @check_error(i32 noundef %94, ptr noundef @.str.1, i32 noundef 84)\l  %95 = load ptr, ptr %10, align 8\l  %96 = load i32, ptr %16, align 4\l  call void @IMGVF_OpenCL_cleanup(ptr noundef %95, i32 noundef %96)\l  ret void\l}"];
}
