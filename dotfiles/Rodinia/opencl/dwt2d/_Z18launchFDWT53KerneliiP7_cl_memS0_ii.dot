digraph "CFG for '_Z18launchFDWT53KerneliiP7_cl_memS0_ii' function" {
	label="CFG for '_Z18launchFDWT53KerneliiP7_cl_memS0_ii' function";

	Node0x6000006301e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{6:\l|  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca [2 x i64], align 8\l  %17 = alloca [2 x i64], align 8\l  store i32 %0, ptr %7, align 4\l  store i32 %1, ptr %8, align 4\l  store ptr %2, ptr %9, align 8\l  store ptr %3, ptr %10, align 8\l  store i32 %4, ptr %11, align 4\l  store i32 %5, ptr %12, align 4\l  %18 = load i32, ptr %12, align 4\l  %19 = load i32, ptr %8, align 4\l  %20 = mul nsw i32 15, %19\l  %21 = sdiv i32 %18, %20\l  %22 = load i32, ptr %12, align 4\l  %23 = load i32, ptr %8, align 4\l  %24 = mul nsw i32 15, %23\l  %25 = srem i32 %22, %24\l  %26 = icmp ne i32 %25, 0\l  %27 = zext i1 %26 to i64\l  %28 = select i1 %26, i32 1, i32 0\l  %29 = add nsw i32 %21, %28\l  store i32 %29, ptr %13, align 4\l  %30 = load i32, ptr %11, align 4\l  %31 = load i32, ptr %7, align 4\l  %32 = sdiv i32 %30, %31\l  %33 = load i32, ptr %11, align 4\l  %34 = load i32, ptr %7, align 4\l  %35 = srem i32 %33, %34\l  %36 = icmp ne i32 %35, 0\l  %37 = zext i1 %36 to i64\l  %38 = select i1 %36, i32 1, i32 0\l  %39 = add nsw i32 %32, %38\l  store i32 %39, ptr %14, align 4\l  %40 = load i32, ptr %12, align 4\l  %41 = load i32, ptr %8, align 4\l  %42 = load i32, ptr %13, align 4\l  %43 = mul nsw i32 %41, %42\l  %44 = sdiv i32 %40, %43\l  %45 = load i32, ptr %12, align 4\l  %46 = load i32, ptr %8, align 4\l  %47 = load i32, ptr %13, align 4\l  %48 = mul nsw i32 %46, %47\l  %49 = srem i32 %45, %48\l  %50 = icmp ne i32 %49, 0\l  %51 = zext i1 %50 to i64\l  %52 = select i1 %50, i32 1, i32 0\l  %53 = add nsw i32 %44, %52\l  store i32 %53, ptr %15, align 4\l  %54 = load i32, ptr %13, align 4\l  %55 = load i32, ptr %14, align 4\l  %56 = load i32, ptr %15, align 4\l  %57 = call i32 (ptr, ...) @printf(ptr noundef @.str.69, i32 noundef %54, i32\l... noundef %55, i32 noundef %56)\l  %58 = load i32, ptr %14, align 4\l  %59 = sext i32 %58 to i64\l  %60 = load i32, ptr %7, align 4\l  %61 = sext i32 %60 to i64\l  %62 = mul i64 %59, %61\l  store i64 %62, ptr %16, align 8\l  %63 = getelementptr inbounds i64, ptr %16, i64 1\l  %64 = load i32, ptr %15, align 4\l  %65 = sext i32 %64 to i64\l  %66 = mul i64 %65, 1\l  store i64 %66, ptr %63, align 8\l  %67 = load i32, ptr %7, align 4\l  %68 = sext i32 %67 to i64\l  store i64 %68, ptr %17, align 8\l  %69 = getelementptr inbounds i64, ptr %17, i64 1\l  store i64 1, ptr %69, align 8\l  %70 = load ptr, ptr @kl_fdwt53Kernel, align 8\l  %71 = call i32 @clSetKernelArg(ptr noundef %70, i32 noundef 0, i64 noundef\l... 8, ptr noundef %9)\l  store i32 %71, ptr @errNum, align 4\l  %72 = load ptr, ptr @kl_fdwt53Kernel, align 8\l  %73 = call i32 @clSetKernelArg(ptr noundef %72, i32 noundef 1, i64 noundef\l... 8, ptr noundef %10)\l  %74 = load i32, ptr @errNum, align 4\l  %75 = or i32 %74, %73\l  store i32 %75, ptr @errNum, align 4\l  %76 = load ptr, ptr @kl_fdwt53Kernel, align 8\l  %77 = call i32 @clSetKernelArg(ptr noundef %76, i32 noundef 2, i64 noundef\l... 4, ptr noundef %11)\l  %78 = load i32, ptr @errNum, align 4\l  %79 = or i32 %78, %77\l  store i32 %79, ptr @errNum, align 4\l  %80 = load ptr, ptr @kl_fdwt53Kernel, align 8\l  %81 = call i32 @clSetKernelArg(ptr noundef %80, i32 noundef 3, i64 noundef\l... 4, ptr noundef %12)\l  %82 = load i32, ptr @errNum, align 4\l  %83 = or i32 %82, %81\l  store i32 %83, ptr @errNum, align 4\l  %84 = load ptr, ptr @kl_fdwt53Kernel, align 8\l  %85 = call i32 @clSetKernelArg(ptr noundef %84, i32 noundef 4, i64 noundef\l... 4, ptr noundef %13)\l  %86 = load i32, ptr @errNum, align 4\l  %87 = or i32 %86, %85\l  store i32 %87, ptr @errNum, align 4\l  %88 = load ptr, ptr @kl_fdwt53Kernel, align 8\l  %89 = call i32 @clSetKernelArg(ptr noundef %88, i32 noundef 5, i64 noundef\l... 4, ptr noundef %7)\l  %90 = load i32, ptr @errNum, align 4\l  %91 = or i32 %90, %89\l  store i32 %91, ptr @errNum, align 4\l  %92 = load ptr, ptr @kl_fdwt53Kernel, align 8\l  %93 = call i32 @clSetKernelArg(ptr noundef %92, i32 noundef 6, i64 noundef\l... 4, ptr noundef %8)\l  %94 = load i32, ptr @errNum, align 4\l  %95 = or i32 %94, %93\l  store i32 %95, ptr @errNum, align 4\l  %96 = load ptr, ptr @commandQueue, align 8\l  %97 = load ptr, ptr @kl_fdwt53Kernel, align 8\l  %98 = getelementptr inbounds [2 x i64], ptr %16, i64 0, i64 0\l  %99 = getelementptr inbounds [2 x i64], ptr %17, i64 0, i64 0\l  %100 = call i32 @clEnqueueNDRangeKernel(ptr noundef %96, ptr noundef %97,\l... i32 noundef 2, ptr noundef null, ptr noundef %98, ptr noundef %99, i32\l... noundef 0, ptr noundef null, ptr noundef null)\l  store i32 %100, ptr @errNum, align 4\l  %101 = call i32 (ptr, ...) @printf(ptr noundef @.str.70)\l  ret void\l}"];
}
