digraph "CFG for '_Z15rgbToComponentsP7_cl_memS0_S0_Phii' function" {
	label="CFG for '_Z15rgbToComponentsP7_cl_memS0_S0_Phii' function";

	Node0x60000062fcf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{6:\l|  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca ptr, align 8\l  %16 = alloca [1 x i64], align 8\l  %17 = alloca [1 x i64], align 8\l  store ptr %0, ptr %7, align 8\l  store ptr %1, ptr %8, align 8\l  store ptr %2, ptr %9, align 8\l  store ptr %3, ptr %10, align 8\l  store i32 %4, ptr %11, align 4\l  store i32 %5, ptr %12, align 4\l  %18 = load i32, ptr %11, align 4\l  %19 = load i32, ptr %12, align 4\l  %20 = mul nsw i32 %18, %19\l  store i32 %20, ptr %13, align 4\l  %21 = load i32, ptr %11, align 4\l  %22 = load i32, ptr %12, align 4\l  %23 = mul nsw i32 %21, %22\l  %24 = srem i32 %23, 256\l  %25 = icmp ne i32 %24, 0\l  br i1 %25, label %26, label %32\l|{<s0>T|<s1>F}}"];
	Node0x60000062fcf0:s0 -> Node0x60000062fd40[tooltip="6 -> 26\nProbability 62.50%" ];
	Node0x60000062fcf0:s1 -> Node0x60000062fd90[tooltip="6 -> 32\nProbability 37.50%" ];
	Node0x60000062fd40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{26:\l|  %27 = load i32, ptr %11, align 4\l  %28 = load i32, ptr %12, align 4\l  %29 = mul nsw i32 %27, %28\l  %30 = sdiv i32 %29, 256\l  %31 = add nsw i32 %30, 1\l  br label %37\l}"];
	Node0x60000062fd40 -> Node0x60000062fde0[tooltip="26 -> 37\nProbability 100.00%" ];
	Node0x60000062fd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{32:\l|  %33 = load i32, ptr %11, align 4\l  %34 = load i32, ptr %12, align 4\l  %35 = mul nsw i32 %33, %34\l  %36 = sdiv i32 %35, 256\l  br label %37\l}"];
	Node0x60000062fd90 -> Node0x60000062fde0[tooltip="32 -> 37\nProbability 100.00%" ];
	Node0x60000062fde0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{37:\l|  %38 = phi i32 [ %31, %26 ], [ %36, %32 ]\l  %39 = mul nsw i32 %38, 256\l  %40 = mul nsw i32 %39, 3\l  store i32 %40, ptr %14, align 4\l  %41 = load ptr, ptr @context, align 8\l  %42 = load i32, ptr %13, align 4\l  %43 = mul nsw i32 %42, 3\l  %44 = sext i32 %43 to i64\l  %45 = load ptr, ptr %10, align 8\l  %46 = call ptr @clCreateBuffer(ptr noundef %41, i64 noundef 36, i64 noundef\l... %44, ptr noundef %45, ptr noundef @errNum)\l  store ptr %46, ptr %15, align 8\l  %47 = load i32, ptr %14, align 4\l  %48 = sdiv i32 %47, 3\l  %49 = sext i32 %48 to i64\l  store i64 %49, ptr %16, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8\l... @__const._Z15rgbToComponentsP7_cl_memS0_S0_Phii.localWorkSize, i64 8, i1\l... false)\l  %50 = load ptr, ptr @c_CopySrcToComponents, align 8\l  %51 = call i32 @clSetKernelArg(ptr noundef %50, i32 noundef 0, i64 noundef\l... 8, ptr noundef %7)\l  store i32 %51, ptr @errNum, align 4\l  %52 = load ptr, ptr @c_CopySrcToComponents, align 8\l  %53 = call i32 @clSetKernelArg(ptr noundef %52, i32 noundef 1, i64 noundef\l... 8, ptr noundef %8)\l  %54 = load i32, ptr @errNum, align 4\l  %55 = or i32 %54, %53\l  store i32 %55, ptr @errNum, align 4\l  %56 = load ptr, ptr @c_CopySrcToComponents, align 8\l  %57 = call i32 @clSetKernelArg(ptr noundef %56, i32 noundef 2, i64 noundef\l... 8, ptr noundef %9)\l  %58 = load i32, ptr @errNum, align 4\l  %59 = or i32 %58, %57\l  store i32 %59, ptr @errNum, align 4\l  %60 = load ptr, ptr @c_CopySrcToComponents, align 8\l  %61 = call i32 @clSetKernelArg(ptr noundef %60, i32 noundef 3, i64 noundef\l... 8, ptr noundef %15)\l  %62 = load i32, ptr @errNum, align 4\l  %63 = or i32 %62, %61\l  store i32 %63, ptr @errNum, align 4\l  %64 = load ptr, ptr @c_CopySrcToComponents, align 8\l  %65 = call i32 @clSetKernelArg(ptr noundef %64, i32 noundef 4, i64 noundef\l... 4, ptr noundef %13)\l  %66 = load i32, ptr @errNum, align 4\l  %67 = or i32 %66, %65\l  store i32 %67, ptr @errNum, align 4\l  %68 = load ptr, ptr @commandQueue, align 8\l  %69 = load ptr, ptr @c_CopySrcToComponents, align 8\l  %70 = getelementptr inbounds [1 x i64], ptr %16, i64 0, i64 0\l  %71 = getelementptr inbounds [1 x i64], ptr %17, i64 0, i64 0\l  %72 = call i32 @clEnqueueNDRangeKernel(ptr noundef %68, ptr noundef %69, i32\l... noundef 1, ptr noundef null, ptr noundef %70, ptr noundef %71, i32 noundef 0,\l... ptr noundef null, ptr noundef null)\l  store i32 %72, ptr @errNum, align 4\l  %73 = load ptr, ptr %15, align 8\l  %74 = call i32 @clReleaseMemObject(ptr noundef %73)\l  store i32 %74, ptr @errNum, align 4\l  ret void\l}"];
}
