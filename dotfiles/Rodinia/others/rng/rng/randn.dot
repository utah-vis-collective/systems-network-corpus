digraph "CFG for 'randn' function" {
	label="CFG for 'randn' function";

	Node0x60000133c190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca double, align 8\l  %6 = alloca double, align 8\l  %7 = alloca double, align 8\l  %8 = alloca double, align 8\l  store ptr %0, ptr %3, align 8\l  store i32 %1, ptr %4, align 4\l  %9 = load ptr, ptr %3, align 8\l  %10 = load i32, ptr %4, align 4\l  %11 = call double @randu(ptr noundef %9, i32 noundef %10)\l  store double %11, ptr %5, align 8\l  %12 = load ptr, ptr %3, align 8\l  %13 = load i32, ptr %4, align 4\l  %14 = call double @randu(ptr noundef %12, i32 noundef %13)\l  store double %14, ptr %6, align 8\l  %15 = call double @llvm.acos.f64(double -1.000000e+00)\l  %16 = fmul double 2.000000e+00, %15\l  %17 = load double, ptr %6, align 8\l  %18 = fmul double %16, %17\l  %19 = call double @llvm.cos.f64(double %18)\l  store double %19, ptr %7, align 8\l  %20 = load double, ptr %5, align 8\l  %21 = call double @llvm.log.f64(double %20)\l  %22 = fmul double -2.000000e+00, %21\l  store double %22, ptr %8, align 8\l  %23 = load double, ptr %8, align 8\l  %24 = call double @llvm.sqrt.f64(double %23)\l  %25 = load double, ptr %7, align 8\l  %26 = fmul double %24, %25\l  ret double %26\l}"];
}
