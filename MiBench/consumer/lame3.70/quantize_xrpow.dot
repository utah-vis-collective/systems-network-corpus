digraph "CFG for 'quantize_xrpow' function" {
	label="CFG for 'quantize_xrpow' function";

	Node0x600001609040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca double, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  %11 = alloca double, align 8\l  %12 = alloca double, align 8\l  %13 = alloca double, align 8\l  %14 = alloca double, align 8\l  %15 = alloca double, align 8\l  %16 = alloca double, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i32, align 4\l  %22 = alloca i32, align 4\l  %23 = alloca i32, align 4\l  %24 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store ptr %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %25 = load ptr, ptr %6, align 8\l  %26 = getelementptr inbounds %struct.gr_info, ptr %25, i32 0, i32 3\l  %27 = load i32, ptr %26, align 4\l  %28 = zext i32 %27 to i64\l  %29 = getelementptr inbounds [256 x double], ptr @ipow20, i64 0, i64 %28\l  %30 = load double, ptr %29, align 8\l  store double %30, ptr %7, align 8\l  store i32 72, ptr %8, align 4\l  br label %31\l}"];
	Node0x600001609040 -> Node0x600001609090[tooltip="3 -> 31\nProbability 100.00%" ];
	Node0x600001609090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{31:\l|  %32 = load i32, ptr %8, align 4\l  %33 = icmp sgt i32 %32, 0\l  br i1 %33, label %34, label %174\l|{<s0>T|<s1>F}}"];
	Node0x600001609090:s0 -> Node0x6000016090e0[tooltip="31 -> 34\nProbability 96.88%" ];
	Node0x600001609090:s1 -> Node0x600001609180[tooltip="31 -> 174\nProbability 3.12%" ];
	Node0x6000016090e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{34:\l|  %35 = load ptr, ptr %4, align 8\l  %36 = getelementptr inbounds double, ptr %35, i32 1\l  store ptr %36, ptr %4, align 8\l  %37 = load double, ptr %35, align 8\l  %38 = load double, ptr %7, align 8\l  %39 = fmul double %37, %38\l  store double %39, ptr %9, align 8\l  %40 = load ptr, ptr %4, align 8\l  %41 = getelementptr inbounds double, ptr %40, i32 1\l  store ptr %41, ptr %4, align 8\l  %42 = load double, ptr %40, align 8\l  %43 = load double, ptr %7, align 8\l  %44 = fmul double %42, %43\l  store double %44, ptr %10, align 8\l  %45 = load double, ptr %9, align 8\l  %46 = fptosi double %45 to i32\l  store i32 %46, ptr %17, align 4\l  %47 = load ptr, ptr %4, align 8\l  %48 = getelementptr inbounds double, ptr %47, i32 1\l  store ptr %48, ptr %4, align 8\l  %49 = load double, ptr %47, align 8\l  %50 = load double, ptr %7, align 8\l  %51 = fmul double %49, %50\l  store double %51, ptr %11, align 8\l  %52 = load double, ptr %10, align 8\l  %53 = fptosi double %52 to i32\l  store i32 %53, ptr %18, align 4\l  %54 = load ptr, ptr %4, align 8\l  %55 = getelementptr inbounds double, ptr %54, i32 1\l  store ptr %55, ptr %4, align 8\l  %56 = load double, ptr %54, align 8\l  %57 = load double, ptr %7, align 8\l  %58 = fmul double %56, %57\l  store double %58, ptr %12, align 8\l  %59 = load double, ptr %11, align 8\l  %60 = fptosi double %59 to i32\l  store i32 %60, ptr %19, align 4\l  %61 = load ptr, ptr %4, align 8\l  %62 = getelementptr inbounds double, ptr %61, i32 1\l  store ptr %62, ptr %4, align 8\l  %63 = load double, ptr %61, align 8\l  %64 = load double, ptr %7, align 8\l  %65 = fmul double %63, %64\l  store double %65, ptr %13, align 8\l  %66 = load double, ptr %12, align 8\l  %67 = fptosi double %66 to i32\l  store i32 %67, ptr %20, align 4\l  %68 = load ptr, ptr %4, align 8\l  %69 = getelementptr inbounds double, ptr %68, i32 1\l  store ptr %69, ptr %4, align 8\l  %70 = load double, ptr %68, align 8\l  %71 = load double, ptr %7, align 8\l  %72 = fmul double %70, %71\l  store double %72, ptr %14, align 8\l  %73 = load double, ptr %13, align 8\l  %74 = fptosi double %73 to i32\l  store i32 %74, ptr %21, align 4\l  %75 = load ptr, ptr %4, align 8\l  %76 = getelementptr inbounds double, ptr %75, i32 1\l  store ptr %76, ptr %4, align 8\l  %77 = load double, ptr %75, align 8\l  %78 = load double, ptr %7, align 8\l  %79 = fmul double %77, %78\l  store double %79, ptr %15, align 8\l  %80 = load double, ptr %14, align 8\l  %81 = fptosi double %80 to i32\l  store i32 %81, ptr %22, align 4\l  %82 = load ptr, ptr %4, align 8\l  %83 = getelementptr inbounds double, ptr %82, i32 1\l  store ptr %83, ptr %4, align 8\l  %84 = load double, ptr %82, align 8\l  %85 = load double, ptr %7, align 8\l  %86 = fmul double %84, %85\l  store double %86, ptr %16, align 8\l  %87 = load double, ptr %15, align 8\l  %88 = fptosi double %87 to i32\l  store i32 %88, ptr %23, align 4\l  %89 = load i32, ptr %17, align 4\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds [8208 x double], ptr @adj43, i64 0, i64 %90\l  %92 = load double, ptr %91, align 8\l  %93 = load double, ptr %9, align 8\l  %94 = fadd double %93, %92\l  store double %94, ptr %9, align 8\l  %95 = load double, ptr %16, align 8\l  %96 = fptosi double %95 to i32\l  store i32 %96, ptr %24, align 4\l  %97 = load i32, ptr %18, align 4\l  %98 = sext i32 %97 to i64\l  %99 = getelementptr inbounds [8208 x double], ptr @adj43, i64 0, i64 %98\l  %100 = load double, ptr %99, align 8\l  %101 = load double, ptr %10, align 8\l  %102 = fadd double %101, %100\l  store double %102, ptr %10, align 8\l  %103 = load double, ptr %9, align 8\l  %104 = fptosi double %103 to i32\l  %105 = load ptr, ptr %5, align 8\l  %106 = getelementptr inbounds i32, ptr %105, i32 1\l  store ptr %106, ptr %5, align 8\l  store i32 %104, ptr %105, align 4\l  %107 = load i32, ptr %19, align 4\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds [8208 x double], ptr @adj43, i64 0, i64 %108\l  %110 = load double, ptr %109, align 8\l  %111 = load double, ptr %11, align 8\l  %112 = fadd double %111, %110\l  store double %112, ptr %11, align 8\l  %113 = load double, ptr %10, align 8\l  %114 = fptosi double %113 to i32\l  %115 = load ptr, ptr %5, align 8\l  %116 = getelementptr inbounds i32, ptr %115, i32 1\l  store ptr %116, ptr %5, align 8\l  store i32 %114, ptr %115, align 4\l  %117 = load i32, ptr %20, align 4\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds [8208 x double], ptr @adj43, i64 0, i64 %118\l  %120 = load double, ptr %119, align 8\l  %121 = load double, ptr %12, align 8\l  %122 = fadd double %121, %120\l  store double %122, ptr %12, align 8\l  %123 = load double, ptr %11, align 8\l  %124 = fptosi double %123 to i32\l  %125 = load ptr, ptr %5, align 8\l  %126 = getelementptr inbounds i32, ptr %125, i32 1\l  store ptr %126, ptr %5, align 8\l  store i32 %124, ptr %125, align 4\l  %127 = load i32, ptr %21, align 4\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds [8208 x double], ptr @adj43, i64 0, i64 %128\l  %130 = load double, ptr %129, align 8\l  %131 = load double, ptr %13, align 8\l  %132 = fadd double %131, %130\l  store double %132, ptr %13, align 8\l  %133 = load double, ptr %12, align 8\l  %134 = fptosi double %133 to i32\l  %135 = load ptr, ptr %5, align 8\l  %136 = getelementptr inbounds i32, ptr %135, i32 1\l  store ptr %136, ptr %5, align 8\l  store i32 %134, ptr %135, align 4\l  %137 = load i32, ptr %22, align 4\l  %138 = sext i32 %137 to i64\l  %139 = getelementptr inbounds [8208 x double], ptr @adj43, i64 0, i64 %138\l  %140 = load double, ptr %139, align 8\l  %141 = load double, ptr %14, align 8\l  %142 = fadd double %141, %140\l  store double %142, ptr %14, align 8\l  %143 = load double, ptr %13, align 8\l  %144 = fptosi double %143 to i32\l  %145 = load ptr, ptr %5, align 8\l  %146 = getelementptr inbounds i32, ptr %145, i32 1\l  store ptr %146, ptr %5, align 8\l  store i32 %144, ptr %145, align 4\l  %147 = load i32, ptr %23, align 4\l  %148 = sext i32 %147 to i64\l  %149 = getelementptr inbounds [8208 x double], ptr @adj43, i64 0, i64 %148\l  %150 = load double, ptr %149, align 8\l  %151 = load double, ptr %15, align 8\l  %152 = fadd double %151, %150\l  store double %152, ptr %15, align 8\l  %153 = load double, ptr %14, align 8\l  %154 = fptosi double %153 to i32\l  %155 = load ptr, ptr %5, align 8\l  %156 = getelementptr inbounds i32, ptr %155, i32 1\l  store ptr %156, ptr %5, align 8\l  store i32 %154, ptr %155, align 4\l  %157 = load i32, ptr %24, align 4\l  %158 = sext i32 %157 to i64\l  %159 = getelementptr inbounds [8208 x double], ptr @adj43, i64 0, i64 %158\l  %160 = load double, ptr %159, align 8\l  %161 = load double, ptr %16, align 8\l  %162 = fadd double %161, %160\l  store double %162, ptr %16, align 8\l  %163 = load double, ptr %15, align 8\l  %164 = fptosi double %163 to i32\l  %165 = load ptr, ptr %5, align 8\l  %166 = getelementptr inbounds i32, ptr %165, i32 1\l  store ptr %166, ptr %5, align 8\l  store i32 %164, ptr %165, align 4\l  %167 = load double, ptr %16, align 8\l  %168 = fptosi double %167 to i32\l  %169 = load ptr, ptr %5, align 8\l  %170 = getelementptr inbounds i32, ptr %169, i32 1\l  store ptr %170, ptr %5, align 8\l  store i32 %168, ptr %169, align 4\l  br label %171\l}"];
	Node0x6000016090e0 -> Node0x600001609130[tooltip="34 -> 171\nProbability 100.00%" ];
	Node0x600001609130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{171:\l|  %172 = load i32, ptr %8, align 4\l  %173 = add nsw i32 %172, -1\l  store i32 %173, ptr %8, align 4\l  br label %31, !llvm.loop !6\l}"];
	Node0x600001609130 -> Node0x600001609090[tooltip="171 -> 31\nProbability 100.00%" ];
	Node0x600001609180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{174:\l|  ret void\l}"];
}
