digraph "CFG for 'putRGBUAcontig8bittile' function" {
	label="CFG for 'putRGBUAcontig8bittile' function";

	Node0x600002a285a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{9:\l|  %10 = alloca ptr, align 8\l  %11 = alloca ptr, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca ptr, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca i64, align 8\l  %21 = alloca i64, align 8\l  %22 = alloca i64, align 8\l  %23 = alloca i64, align 8\l  store ptr %0, ptr %10, align 8\l  store ptr %1, ptr %11, align 8\l  store i64 %2, ptr %12, align 8\l  store i64 %3, ptr %13, align 8\l  store i64 %4, ptr %14, align 8\l  store i64 %5, ptr %15, align 8\l  store i64 %6, ptr %16, align 8\l  store i64 %7, ptr %17, align 8\l  store ptr %8, ptr %18, align 8\l  %24 = load ptr, ptr %10, align 8\l  %25 = getelementptr inbounds %struct._TIFFRGBAImage, ptr %24, i32 0, i32 7\l  %26 = load i16, ptr %25, align 2\l  %27 = zext i16 %26 to i32\l  store i32 %27, ptr %19, align 4\l  %28 = load i64, ptr %13, align 8\l  %29 = load i32, ptr %19, align 4\l  %30 = sext i32 %29 to i64\l  %31 = load i64, ptr %16, align 8\l  %32 = mul nsw i64 %31, %30\l  store i64 %32, ptr %16, align 8\l  br label %33\l}"];
	Node0x600002a285a0 -> Node0x600002a285f0[tooltip="9 -> 33\nProbability 100.00%" ];
	Node0x600002a285f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{33:\l|  %34 = load i64, ptr %15, align 8\l  %35 = add i64 %34, -1\l  store i64 %35, ptr %15, align 8\l  %36 = icmp ugt i64 %34, 0\l  br i1 %36, label %37, label %92\l|{<s0>T|<s1>F}}"];
	Node0x600002a285f0:s0 -> Node0x600002a28640[tooltip="33 -> 37\nProbability 96.88%" ];
	Node0x600002a285f0:s1 -> Node0x600002a28780[tooltip="33 -> 92\nProbability 3.12%" ];
	Node0x600002a28640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{37:\l|  %38 = load i64, ptr %14, align 8\l  store i64 %38, ptr %12, align 8\l  br label %39\l}"];
	Node0x600002a28640 -> Node0x600002a28690[tooltip="37 -> 39\nProbability 100.00%" ];
	Node0x600002a28690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{39:\l|  %40 = load i64, ptr %12, align 8\l  %41 = add i64 %40, -1\l  store i64 %41, ptr %12, align 8\l  %42 = icmp ugt i64 %40, 0\l  br i1 %42, label %43, label %85\l|{<s0>T|<s1>F}}"];
	Node0x600002a28690:s0 -> Node0x600002a286e0[tooltip="39 -> 43\nProbability 96.88%" ];
	Node0x600002a28690:s1 -> Node0x600002a28730[tooltip="39 -> 85\nProbability 3.12%" ];
	Node0x600002a286e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{43:\l|  %44 = load ptr, ptr %18, align 8\l  %45 = getelementptr inbounds i8, ptr %44, i64 3\l  %46 = load i8, ptr %45, align 1\l  %47 = zext i8 %46 to i64\l  store i64 %47, ptr %23, align 8\l  %48 = load ptr, ptr %18, align 8\l  %49 = getelementptr inbounds i8, ptr %48, i64 0\l  %50 = load i8, ptr %49, align 1\l  %51 = zext i8 %50 to i64\l  %52 = load i64, ptr %23, align 8\l  %53 = mul i64 %51, %52\l  %54 = udiv i64 %53, 255\l  store i64 %54, ptr %20, align 8\l  %55 = load ptr, ptr %18, align 8\l  %56 = getelementptr inbounds i8, ptr %55, i64 1\l  %57 = load i8, ptr %56, align 1\l  %58 = zext i8 %57 to i64\l  %59 = load i64, ptr %23, align 8\l  %60 = mul i64 %58, %59\l  %61 = udiv i64 %60, 255\l  store i64 %61, ptr %21, align 8\l  %62 = load ptr, ptr %18, align 8\l  %63 = getelementptr inbounds i8, ptr %62, i64 2\l  %64 = load i8, ptr %63, align 1\l  %65 = zext i8 %64 to i64\l  %66 = load i64, ptr %23, align 8\l  %67 = mul i64 %65, %66\l  %68 = udiv i64 %67, 255\l  store i64 %68, ptr %22, align 8\l  %69 = load i64, ptr %20, align 8\l  %70 = load i64, ptr %21, align 8\l  %71 = shl i64 %70, 8\l  %72 = or i64 %69, %71\l  %73 = load i64, ptr %22, align 8\l  %74 = shl i64 %73, 16\l  %75 = or i64 %72, %74\l  %76 = load i64, ptr %23, align 8\l  %77 = shl i64 %76, 24\l  %78 = or i64 %75, %77\l  %79 = load ptr, ptr %11, align 8\l  %80 = getelementptr inbounds i64, ptr %79, i32 1\l  store ptr %80, ptr %11, align 8\l  store i64 %78, ptr %79, align 8\l  %81 = load i32, ptr %19, align 4\l  %82 = load ptr, ptr %18, align 8\l  %83 = sext i32 %81 to i64\l  %84 = getelementptr inbounds i8, ptr %82, i64 %83\l  store ptr %84, ptr %18, align 8\l  br label %39\l}"];
	Node0x600002a286e0 -> Node0x600002a28690[tooltip="43 -> 39\nProbability 100.00%" ];
	Node0x600002a28730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{85:\l|  %86 = load i64, ptr %17, align 8\l  %87 = load ptr, ptr %11, align 8\l  %88 = getelementptr inbounds i64, ptr %87, i64 %86\l  store ptr %88, ptr %11, align 8\l  %89 = load i64, ptr %16, align 8\l  %90 = load ptr, ptr %18, align 8\l  %91 = getelementptr inbounds i8, ptr %90, i64 %89\l  store ptr %91, ptr %18, align 8\l  br label %33\l}"];
	Node0x600002a28730 -> Node0x600002a285f0[tooltip="85 -> 33\nProbability 100.00%" ];
	Node0x600002a28780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{92:\l|  ret void\l}"];
}
