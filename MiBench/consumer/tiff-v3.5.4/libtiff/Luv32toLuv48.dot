digraph "CFG for 'Luv32toLuv48' function" {
	label="CFG for 'Luv32toLuv48' function";

	Node0x600000631450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  store ptr %0, ptr %4, align 8\l  store ptr %1, ptr %5, align 8\l  store i32 %2, ptr %6, align 4\l  %11 = load ptr, ptr %4, align 8\l  %12 = getelementptr inbounds %struct.logLuvState, ptr %11, i32 0, i32 2\l  %13 = load ptr, ptr %12, align 8\l  store ptr %13, ptr %7, align 8\l  %14 = load ptr, ptr %5, align 8\l  store ptr %14, ptr %8, align 8\l  br label %15\l}"];
	Node0x600000631450 -> Node0x6000006314a0[tooltip="3 -> 15\nProbability 100.00%" ];
	Node0x6000006314a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{15:\l|  %16 = load i32, ptr %6, align 4\l  %17 = add nsw i32 %16, -1\l  store i32 %17, ptr %6, align 4\l  %18 = icmp sgt i32 %16, 0\l  br i1 %18, label %19, label %51\l|{<s0>T|<s1>F}}"];
	Node0x6000006314a0:s0 -> Node0x6000006314f0[tooltip="15 -> 19\nProbability 96.88%" ];
	Node0x6000006314a0:s1 -> Node0x600000631540[tooltip="15 -> 51\nProbability 3.12%" ];
	Node0x6000006314f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{19:\l|  %20 = load ptr, ptr %7, align 8\l  %21 = load i64, ptr %20, align 8\l  %22 = lshr i64 %21, 16\l  %23 = trunc i64 %22 to i16\l  %24 = load ptr, ptr %8, align 8\l  %25 = getelementptr inbounds i16, ptr %24, i32 1\l  store ptr %25, ptr %8, align 8\l  store i16 %23, ptr %24, align 2\l  %26 = load ptr, ptr %7, align 8\l  %27 = load i64, ptr %26, align 8\l  %28 = lshr i64 %27, 8\l  %29 = and i64 %28, 255\l  %30 = uitofp i64 %29 to double\l  %31 = fadd double %30, 5.000000e-01\l  %32 = fmul double 0x3F63FB013FB013FB, %31\l  store double %32, ptr %9, align 8\l  %33 = load ptr, ptr %7, align 8\l  %34 = load i64, ptr %33, align 8\l  %35 = and i64 %34, 255\l  %36 = uitofp i64 %35 to double\l  %37 = fadd double %36, 5.000000e-01\l  %38 = fmul double 0x3F63FB013FB013FB, %37\l  store double %38, ptr %10, align 8\l  %39 = load double, ptr %9, align 8\l  %40 = fmul double %39, 3.276800e+04\l  %41 = fptosi double %40 to i16\l  %42 = load ptr, ptr %8, align 8\l  %43 = getelementptr inbounds i16, ptr %42, i32 1\l  store ptr %43, ptr %8, align 8\l  store i16 %41, ptr %42, align 2\l  %44 = load double, ptr %10, align 8\l  %45 = fmul double %44, 3.276800e+04\l  %46 = fptosi double %45 to i16\l  %47 = load ptr, ptr %8, align 8\l  %48 = getelementptr inbounds i16, ptr %47, i32 1\l  store ptr %48, ptr %8, align 8\l  store i16 %46, ptr %47, align 2\l  %49 = load ptr, ptr %7, align 8\l  %50 = getelementptr inbounds i64, ptr %49, i32 1\l  store ptr %50, ptr %7, align 8\l  br label %15\l}"];
	Node0x6000006314f0 -> Node0x6000006314a0[tooltip="19 -> 15\nProbability 100.00%" ];
	Node0x600000631540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{51:\l|  ret void\l}"];
}
