digraph "CFG for 'putRGBUAseparate16bittile' function" {
	label="CFG for 'putRGBUAseparate16bittile' function";

	Node0x600002a207d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{12:\l|  %13 = alloca ptr, align 8\l  %14 = alloca ptr, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca i64, align 8\l  %19 = alloca i64, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca ptr, align 8\l  %22 = alloca ptr, align 8\l  %23 = alloca ptr, align 8\l  %24 = alloca ptr, align 8\l  %25 = alloca ptr, align 8\l  %26 = alloca ptr, align 8\l  %27 = alloca ptr, align 8\l  %28 = alloca ptr, align 8\l  %29 = alloca i64, align 8\l  %30 = alloca i64, align 8\l  %31 = alloca i64, align 8\l  %32 = alloca i64, align 8\l  store ptr %0, ptr %13, align 8\l  store ptr %1, ptr %14, align 8\l  store i64 %2, ptr %15, align 8\l  store i64 %3, ptr %16, align 8\l  store i64 %4, ptr %17, align 8\l  store i64 %5, ptr %18, align 8\l  store i64 %6, ptr %19, align 8\l  store i64 %7, ptr %20, align 8\l  store ptr %8, ptr %21, align 8\l  store ptr %9, ptr %22, align 8\l  store ptr %10, ptr %23, align 8\l  store ptr %11, ptr %24, align 8\l  %33 = load ptr, ptr %21, align 8\l  store ptr %33, ptr %25, align 8\l  %34 = load ptr, ptr %22, align 8\l  store ptr %34, ptr %26, align 8\l  %35 = load ptr, ptr %23, align 8\l  store ptr %35, ptr %27, align 8\l  %36 = load ptr, ptr %24, align 8\l  store ptr %36, ptr %28, align 8\l  %37 = load ptr, ptr %13, align 8\l  %38 = load i64, ptr %16, align 8\l  br label %39\l}"];
	Node0x600002a207d0 -> Node0x600002a20820[tooltip="12 -> 39\nProbability 100.00%" ];
	Node0x600002a20820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{39:\l|  %40 = load i64, ptr %18, align 8\l  %41 = add i64 %40, -1\l  store i64 %41, ptr %18, align 8\l  %42 = icmp ugt i64 %40, 0\l  br i1 %42, label %43, label %105\l|{<s0>T|<s1>F}}"];
	Node0x600002a20820:s0 -> Node0x600002a20870[tooltip="39 -> 43\nProbability 96.88%" ];
	Node0x600002a20820:s1 -> Node0x600002a209b0[tooltip="39 -> 105\nProbability 3.12%" ];
	Node0x600002a20870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{43:\l|  %44 = load i64, ptr %17, align 8\l  store i64 %44, ptr %15, align 8\l  br label %45\l}"];
	Node0x600002a20870 -> Node0x600002a208c0[tooltip="43 -> 45\nProbability 100.00%" ];
	Node0x600002a208c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{45:\l|  %46 = load i64, ptr %15, align 8\l  %47 = add i64 %46, -1\l  store i64 %47, ptr %15, align 8\l  %48 = icmp ugt i64 %46, 0\l  br i1 %48, label %49, label %89\l|{<s0>T|<s1>F}}"];
	Node0x600002a208c0:s0 -> Node0x600002a20910[tooltip="45 -> 49\nProbability 96.88%" ];
	Node0x600002a208c0:s1 -> Node0x600002a20960[tooltip="45 -> 89\nProbability 3.12%" ];
	Node0x600002a20910 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{49:\l|  %50 = load ptr, ptr %28, align 8\l  %51 = getelementptr inbounds i16, ptr %50, i32 1\l  store ptr %51, ptr %28, align 8\l  %52 = load i16, ptr %50, align 2\l  %53 = zext i16 %52 to i32\l  %54 = ashr i32 %53, 4\l  %55 = sext i32 %54 to i64\l  store i64 %55, ptr %32, align 8\l  %56 = load ptr, ptr %25, align 8\l  %57 = getelementptr inbounds i16, ptr %56, i32 1\l  store ptr %57, ptr %25, align 8\l  %58 = load i16, ptr %56, align 2\l  %59 = zext i16 %58 to i64\l  %60 = load i64, ptr %32, align 8\l  %61 = mul i64 %59, %60\l  %62 = udiv i64 %61, 69375\l  store i64 %62, ptr %29, align 8\l  %63 = load ptr, ptr %26, align 8\l  %64 = getelementptr inbounds i16, ptr %63, i32 1\l  store ptr %64, ptr %26, align 8\l  %65 = load i16, ptr %63, align 2\l  %66 = zext i16 %65 to i64\l  %67 = load i64, ptr %32, align 8\l  %68 = mul i64 %66, %67\l  %69 = udiv i64 %68, 69375\l  store i64 %69, ptr %30, align 8\l  %70 = load ptr, ptr %27, align 8\l  %71 = getelementptr inbounds i16, ptr %70, i32 1\l  store ptr %71, ptr %27, align 8\l  %72 = load i16, ptr %70, align 2\l  %73 = zext i16 %72 to i64\l  %74 = load i64, ptr %32, align 8\l  %75 = mul i64 %73, %74\l  %76 = udiv i64 %75, 69375\l  store i64 %76, ptr %31, align 8\l  %77 = load i64, ptr %29, align 8\l  %78 = load i64, ptr %30, align 8\l  %79 = shl i64 %78, 8\l  %80 = or i64 %77, %79\l  %81 = load i64, ptr %31, align 8\l  %82 = shl i64 %81, 16\l  %83 = or i64 %80, %82\l  %84 = load i64, ptr %32, align 8\l  %85 = shl i64 %84, 24\l  %86 = or i64 %83, %85\l  %87 = load ptr, ptr %14, align 8\l  %88 = getelementptr inbounds i64, ptr %87, i32 1\l  store ptr %88, ptr %14, align 8\l  store i64 %86, ptr %87, align 8\l  br label %45\l}"];
	Node0x600002a20910 -> Node0x600002a208c0[tooltip="49 -> 45\nProbability 100.00%" ];
	Node0x600002a20960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{89:\l|  %90 = load i64, ptr %19, align 8\l  %91 = load ptr, ptr %25, align 8\l  %92 = getelementptr inbounds i16, ptr %91, i64 %90\l  store ptr %92, ptr %25, align 8\l  %93 = load i64, ptr %19, align 8\l  %94 = load ptr, ptr %26, align 8\l  %95 = getelementptr inbounds i16, ptr %94, i64 %93\l  store ptr %95, ptr %26, align 8\l  %96 = load i64, ptr %19, align 8\l  %97 = load ptr, ptr %27, align 8\l  %98 = getelementptr inbounds i16, ptr %97, i64 %96\l  store ptr %98, ptr %27, align 8\l  %99 = load i64, ptr %19, align 8\l  %100 = load ptr, ptr %28, align 8\l  %101 = getelementptr inbounds i16, ptr %100, i64 %99\l  store ptr %101, ptr %28, align 8\l  %102 = load i64, ptr %20, align 8\l  %103 = load ptr, ptr %14, align 8\l  %104 = getelementptr inbounds i64, ptr %103, i64 %102\l  store ptr %104, ptr %14, align 8\l  br label %39\l}"];
	Node0x600002a20960 -> Node0x600002a20820[tooltip="89 -> 39\nProbability 100.00%" ];
	Node0x600002a209b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{105:\l|  ret void\l}"];
}
