digraph "CFG for 'putRGBcontig8bitMaptile' function" {
	label="CFG for 'putRGBcontig8bitMaptile' function";

	Node0x600002a28e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{9:\l|  %10 = alloca ptr, align 8\l  %11 = alloca ptr, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i64, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i64, align 8\l  %17 = alloca i64, align 8\l  %18 = alloca ptr, align 8\l  %19 = alloca ptr, align 8\l  %20 = alloca i32, align 4\l  store ptr %0, ptr %10, align 8\l  store ptr %1, ptr %11, align 8\l  store i64 %2, ptr %12, align 8\l  store i64 %3, ptr %13, align 8\l  store i64 %4, ptr %14, align 8\l  store i64 %5, ptr %15, align 8\l  store i64 %6, ptr %16, align 8\l  store i64 %7, ptr %17, align 8\l  store ptr %8, ptr %18, align 8\l  %21 = load ptr, ptr %10, align 8\l  %22 = getelementptr inbounds %struct._TIFFRGBAImage, ptr %21, i32 0, i32 15\l  %23 = load ptr, ptr %22, align 8\l  store ptr %23, ptr %19, align 8\l  %24 = load ptr, ptr %10, align 8\l  %25 = getelementptr inbounds %struct._TIFFRGBAImage, ptr %24, i32 0, i32 7\l  %26 = load i16, ptr %25, align 2\l  %27 = zext i16 %26 to i32\l  store i32 %27, ptr %20, align 4\l  %28 = load i64, ptr %13, align 8\l  %29 = load i32, ptr %20, align 4\l  %30 = sext i32 %29 to i64\l  %31 = load i64, ptr %16, align 8\l  %32 = mul nsw i64 %31, %30\l  store i64 %32, ptr %16, align 8\l  br label %33\l}"];
	Node0x600002a28e10 -> Node0x600002a28e60[tooltip="9 -> 33\nProbability 100.00%" ];
	Node0x600002a28e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{33:\l|  %34 = load i64, ptr %15, align 8\l  %35 = add i64 %34, -1\l  store i64 %35, ptr %15, align 8\l  %36 = icmp ugt i64 %34, 0\l  br i1 %36, label %37, label %86\l|{<s0>T|<s1>F}}"];
	Node0x600002a28e60:s0 -> Node0x600002a28eb0[tooltip="33 -> 37\nProbability 96.88%" ];
	Node0x600002a28e60:s1 -> Node0x600002a28ff0[tooltip="33 -> 86\nProbability 3.12%" ];
	Node0x600002a28eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{37:\l|  %38 = load i64, ptr %14, align 8\l  store i64 %38, ptr %12, align 8\l  br label %39\l}"];
	Node0x600002a28eb0 -> Node0x600002a28f00[tooltip="37 -> 39\nProbability 100.00%" ];
	Node0x600002a28f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{39:\l|  %40 = load i64, ptr %12, align 8\l  %41 = add i64 %40, -1\l  store i64 %41, ptr %12, align 8\l  %42 = icmp ugt i64 %40, 0\l  br i1 %42, label %43, label %79\l|{<s0>T|<s1>F}}"];
	Node0x600002a28f00:s0 -> Node0x600002a28f50[tooltip="39 -> 43\nProbability 96.88%" ];
	Node0x600002a28f00:s1 -> Node0x600002a28fa0[tooltip="39 -> 79\nProbability 3.12%" ];
	Node0x600002a28f50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{43:\l|  %44 = load ptr, ptr %19, align 8\l  %45 = load ptr, ptr %18, align 8\l  %46 = getelementptr inbounds i8, ptr %45, i64 0\l  %47 = load i8, ptr %46, align 1\l  %48 = zext i8 %47 to i64\l  %49 = getelementptr inbounds i8, ptr %44, i64 %48\l  %50 = load i8, ptr %49, align 1\l  %51 = zext i8 %50 to i64\l  %52 = load ptr, ptr %19, align 8\l  %53 = load ptr, ptr %18, align 8\l  %54 = getelementptr inbounds i8, ptr %53, i64 1\l  %55 = load i8, ptr %54, align 1\l  %56 = zext i8 %55 to i64\l  %57 = getelementptr inbounds i8, ptr %52, i64 %56\l  %58 = load i8, ptr %57, align 1\l  %59 = zext i8 %58 to i64\l  %60 = shl i64 %59, 8\l  %61 = or i64 %51, %60\l  %62 = load ptr, ptr %19, align 8\l  %63 = load ptr, ptr %18, align 8\l  %64 = getelementptr inbounds i8, ptr %63, i64 2\l  %65 = load i8, ptr %64, align 1\l  %66 = zext i8 %65 to i64\l  %67 = getelementptr inbounds i8, ptr %62, i64 %66\l  %68 = load i8, ptr %67, align 1\l  %69 = zext i8 %68 to i64\l  %70 = shl i64 %69, 16\l  %71 = or i64 %61, %70\l  %72 = or i64 %71, 4278190080\l  %73 = load ptr, ptr %11, align 8\l  %74 = getelementptr inbounds i64, ptr %73, i32 1\l  store ptr %74, ptr %11, align 8\l  store i64 %72, ptr %73, align 8\l  %75 = load i32, ptr %20, align 4\l  %76 = load ptr, ptr %18, align 8\l  %77 = sext i32 %75 to i64\l  %78 = getelementptr inbounds i8, ptr %76, i64 %77\l  store ptr %78, ptr %18, align 8\l  br label %39\l}"];
	Node0x600002a28f50 -> Node0x600002a28f00[tooltip="43 -> 39\nProbability 100.00%" ];
	Node0x600002a28fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{79:\l|  %80 = load i64, ptr %16, align 8\l  %81 = load ptr, ptr %18, align 8\l  %82 = getelementptr inbounds i8, ptr %81, i64 %80\l  store ptr %82, ptr %18, align 8\l  %83 = load i64, ptr %17, align 8\l  %84 = load ptr, ptr %11, align 8\l  %85 = getelementptr inbounds i64, ptr %84, i64 %83\l  store ptr %85, ptr %11, align 8\l  br label %33\l}"];
	Node0x600002a28fa0 -> Node0x600002a28e60[tooltip="79 -> 33\nProbability 100.00%" ];
	Node0x600002a28ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{86:\l|  ret void\l}"];
}
