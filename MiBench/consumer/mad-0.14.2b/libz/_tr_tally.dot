digraph "CFG for '_tr_tally' function" {
	label="CFG for '_tr_tally' function";

	Node0x600002a459a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store i32 %1, ptr %5, align 4\l  store i32 %2, ptr %6, align 4\l  %7 = load i32, ptr %5, align 4\l  %8 = trunc i32 %7 to i16\l  %9 = load ptr, ptr %4, align 8\l  %10 = getelementptr inbounds %struct.internal_state, ptr %9, i32 0, i32 50\l  %11 = load ptr, ptr %10, align 8\l  %12 = load ptr, ptr %4, align 8\l  %13 = getelementptr inbounds %struct.internal_state, ptr %12, i32 0, i32 49\l  %14 = load i32, ptr %13, align 4\l  %15 = zext i32 %14 to i64\l  %16 = getelementptr inbounds i16, ptr %11, i64 %15\l  store i16 %8, ptr %16, align 2\l  %17 = load i32, ptr %6, align 4\l  %18 = trunc i32 %17 to i8\l  %19 = load ptr, ptr %4, align 8\l  %20 = getelementptr inbounds %struct.internal_state, ptr %19, i32 0, i32 47\l  %21 = load ptr, ptr %20, align 8\l  %22 = load ptr, ptr %4, align 8\l  %23 = getelementptr inbounds %struct.internal_state, ptr %22, i32 0, i32 49\l  %24 = load i32, ptr %23, align 4\l  %25 = add i32 %24, 1\l  store i32 %25, ptr %23, align 4\l  %26 = zext i32 %24 to i64\l  %27 = getelementptr inbounds i8, ptr %21, i64 %26\l  store i8 %18, ptr %27, align 1\l  %28 = load i32, ptr %5, align 4\l  %29 = icmp eq i32 %28, 0\l  br i1 %29, label %30, label %39\l|{<s0>T|<s1>F}}"];
	Node0x600002a459a0:s0 -> Node0x600002a459f0[tooltip="3 -> 30\nProbability 37.50%" ];
	Node0x600002a459a0:s1 -> Node0x600002a45a40[tooltip="3 -> 39\nProbability 62.50%" ];
	Node0x600002a459f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{30:\l|  %31 = load ptr, ptr %4, align 8\l  %32 = getelementptr inbounds %struct.internal_state, ptr %31, i32 0, i32 36\l  %33 = load i32, ptr %6, align 4\l  %34 = zext i32 %33 to i64\l  %35 = getelementptr inbounds [573 x %struct.ct_data_s], ptr %32, i64 0, i64\l... %34\l  %36 = getelementptr inbounds %struct.ct_data_s, ptr %35, i32 0, i32 0\l  %37 = load i16, ptr %36, align 4\l  %38 = add i16 %37, 1\l  store i16 %38, ptr %36, align 4\l  br label %85\l}"];
	Node0x600002a459f0 -> Node0x600002a45b80[tooltip="30 -> 85\nProbability 100.00%" ];
	Node0x600002a45a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{39:\l|  %40 = load ptr, ptr %4, align 8\l  %41 = getelementptr inbounds %struct.internal_state, ptr %40, i32 0, i32 53\l  %42 = load i32, ptr %41, align 8\l  %43 = add i32 %42, 1\l  store i32 %43, ptr %41, align 8\l  %44 = load i32, ptr %5, align 4\l  %45 = add i32 %44, -1\l  store i32 %45, ptr %5, align 4\l  %46 = load ptr, ptr %4, align 8\l  %47 = getelementptr inbounds %struct.internal_state, ptr %46, i32 0, i32 36\l  %48 = load i32, ptr %6, align 4\l  %49 = zext i32 %48 to i64\l  %50 = getelementptr inbounds [256 x i8], ptr @_length_code, i64 0, i64 %49\l  %51 = load i8, ptr %50, align 1\l  %52 = zext i8 %51 to i32\l  %53 = add nsw i32 %52, 256\l  %54 = add nsw i32 %53, 1\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds [573 x %struct.ct_data_s], ptr %47, i64 0, i64\l... %55\l  %57 = getelementptr inbounds %struct.ct_data_s, ptr %56, i32 0, i32 0\l  %58 = load i16, ptr %57, align 4\l  %59 = add i16 %58, 1\l  store i16 %59, ptr %57, align 4\l  %60 = load ptr, ptr %4, align 8\l  %61 = getelementptr inbounds %struct.internal_state, ptr %60, i32 0, i32 37\l  %62 = load i32, ptr %5, align 4\l  %63 = icmp ult i32 %62, 256\l  br i1 %63, label %64, label %70\l|{<s0>T|<s1>F}}"];
	Node0x600002a45a40:s0 -> Node0x600002a45a90[tooltip="39 -> 64\nProbability 50.00%" ];
	Node0x600002a45a40:s1 -> Node0x600002a45ae0[tooltip="39 -> 70\nProbability 50.00%" ];
	Node0x600002a45a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{64:\l|  %65 = load i32, ptr %5, align 4\l  %66 = zext i32 %65 to i64\l  %67 = getelementptr inbounds [512 x i8], ptr @_dist_code, i64 0, i64 %66\l  %68 = load i8, ptr %67, align 1\l  %69 = zext i8 %68 to i32\l  br label %78\l}"];
	Node0x600002a45a90 -> Node0x600002a45b30[tooltip="64 -> 78\nProbability 100.00%" ];
	Node0x600002a45ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{70:\l|  %71 = load i32, ptr %5, align 4\l  %72 = lshr i32 %71, 7\l  %73 = add i32 256, %72\l  %74 = zext i32 %73 to i64\l  %75 = getelementptr inbounds [512 x i8], ptr @_dist_code, i64 0, i64 %74\l  %76 = load i8, ptr %75, align 1\l  %77 = zext i8 %76 to i32\l  br label %78\l}"];
	Node0x600002a45ae0 -> Node0x600002a45b30[tooltip="70 -> 78\nProbability 100.00%" ];
	Node0x600002a45b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{78:\l|  %79 = phi i32 [ %69, %64 ], [ %77, %70 ]\l  %80 = sext i32 %79 to i64\l  %81 = getelementptr inbounds [61 x %struct.ct_data_s], ptr %61, i64 0, i64\l... %80\l  %82 = getelementptr inbounds %struct.ct_data_s, ptr %81, i32 0, i32 0\l  %83 = load i16, ptr %82, align 4\l  %84 = add i16 %83, 1\l  store i16 %84, ptr %82, align 4\l  br label %85\l}"];
	Node0x600002a45b30 -> Node0x600002a45b80[tooltip="78 -> 85\nProbability 100.00%" ];
	Node0x600002a45b80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{85:\l|  %86 = load ptr, ptr %4, align 8\l  %87 = getelementptr inbounds %struct.internal_state, ptr %86, i32 0, i32 49\l  %88 = load i32, ptr %87, align 4\l  %89 = load ptr, ptr %4, align 8\l  %90 = getelementptr inbounds %struct.internal_state, ptr %89, i32 0, i32 48\l  %91 = load i32, ptr %90, align 8\l  %92 = sub i32 %91, 1\l  %93 = icmp eq i32 %88, %92\l  %94 = zext i1 %93 to i32\l  ret i32 %94\l}"];
}
