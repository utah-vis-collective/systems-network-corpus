digraph "CFG for 'mad_bit_crc' function" {
	label="CFG for 'mad_bit_crc' function";

	Node0x600001c167b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{3:\l|  %4 = alloca %struct.mad_bitptr, align 8\l  %5 = alloca i32, align 4\l  %6 = alloca i16, align 2\l  %7 = alloca i32, align 4\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  store [2 x i64] %0, ptr %4, align 8\l  store i32 %1, ptr %5, align 4\l  store i16 %2, ptr %6, align 2\l  %10 = load i16, ptr %6, align 2\l  %11 = zext i16 %10 to i32\l  store i32 %11, ptr %7, align 4\l  br label %12\l}"];
	Node0x600001c167b0 -> Node0x600001c16800[tooltip="3 -> 12\nProbability 100.00%" ];
	Node0x600001c16800 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{12:\l|  %13 = load i32, ptr %5, align 4\l  %14 = icmp uge i32 %13, 32\l  br i1 %14, label %15, label %72\l|{<s0>T|<s1>F}}"];
	Node0x600001c16800:s0 -> Node0x600001c16850[tooltip="12 -> 15\nProbability 96.88%" ];
	Node0x600001c16800:s1 -> Node0x600001c168f0[tooltip="12 -> 72\nProbability 3.12%" ];
	Node0x600001c16850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{15:\l|  %16 = call i64 @mad_bit_read(ptr noundef %4, i32 noundef 32)\l  store i64 %16, ptr %8, align 8\l  %17 = load i32, ptr %7, align 4\l  %18 = shl i32 %17, 8\l  %19 = load i32, ptr %7, align 4\l  %20 = lshr i32 %19, 8\l  %21 = zext i32 %20 to i64\l  %22 = load i64, ptr %8, align 8\l  %23 = lshr i64 %22, 24\l  %24 = xor i64 %21, %23\l  %25 = and i64 %24, 255\l  %26 = getelementptr inbounds [256 x i16], ptr @crc_table, i64 0, i64 %25\l  %27 = load i16, ptr %26, align 2\l  %28 = zext i16 %27 to i32\l  %29 = xor i32 %18, %28\l  store i32 %29, ptr %7, align 4\l  %30 = load i32, ptr %7, align 4\l  %31 = shl i32 %30, 8\l  %32 = load i32, ptr %7, align 4\l  %33 = lshr i32 %32, 8\l  %34 = zext i32 %33 to i64\l  %35 = load i64, ptr %8, align 8\l  %36 = lshr i64 %35, 16\l  %37 = xor i64 %34, %36\l  %38 = and i64 %37, 255\l  %39 = getelementptr inbounds [256 x i16], ptr @crc_table, i64 0, i64 %38\l  %40 = load i16, ptr %39, align 2\l  %41 = zext i16 %40 to i32\l  %42 = xor i32 %31, %41\l  store i32 %42, ptr %7, align 4\l  %43 = load i32, ptr %7, align 4\l  %44 = shl i32 %43, 8\l  %45 = load i32, ptr %7, align 4\l  %46 = lshr i32 %45, 8\l  %47 = zext i32 %46 to i64\l  %48 = load i64, ptr %8, align 8\l  %49 = lshr i64 %48, 8\l  %50 = xor i64 %47, %49\l  %51 = and i64 %50, 255\l  %52 = getelementptr inbounds [256 x i16], ptr @crc_table, i64 0, i64 %51\l  %53 = load i16, ptr %52, align 2\l  %54 = zext i16 %53 to i32\l  %55 = xor i32 %44, %54\l  store i32 %55, ptr %7, align 4\l  %56 = load i32, ptr %7, align 4\l  %57 = shl i32 %56, 8\l  %58 = load i32, ptr %7, align 4\l  %59 = lshr i32 %58, 8\l  %60 = zext i32 %59 to i64\l  %61 = load i64, ptr %8, align 8\l  %62 = lshr i64 %61, 0\l  %63 = xor i64 %60, %62\l  %64 = and i64 %63, 255\l  %65 = getelementptr inbounds [256 x i16], ptr @crc_table, i64 0, i64 %64\l  %66 = load i16, ptr %65, align 2\l  %67 = zext i16 %66 to i32\l  %68 = xor i32 %57, %67\l  store i32 %68, ptr %7, align 4\l  br label %69\l}"];
	Node0x600001c16850 -> Node0x600001c168a0[tooltip="15 -> 69\nProbability 100.00%" ];
	Node0x600001c168a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{69:\l|  %70 = load i32, ptr %5, align 4\l  %71 = sub i32 %70, 32\l  store i32 %71, ptr %5, align 4\l  br label %12\l}"];
	Node0x600001c168a0 -> Node0x600001c16800[tooltip="69 -> 12\nProbability 100.00%" ];
	Node0x600001c168f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{72:\l|  %73 = load i32, ptr %5, align 4\l  %74 = udiv i32 %73, 8\l  switch i32 %74, label %117 [\l    i32 3, label %75\l    i32 2, label %88\l    i32 1, label %101\l    i32 0, label %116\l  ]\l|{<s0>def|<s1>3|<s2>2|<s3>1|<s4>0}}"];
	Node0x600001c168f0:s0 -> Node0x600001c16a80[tooltip="72 -> 117\nProbability 20.00%" ];
	Node0x600001c168f0:s1 -> Node0x600001c16940[tooltip="72 -> 75\nProbability 20.00%" ];
	Node0x600001c168f0:s2 -> Node0x600001c16990[tooltip="72 -> 88\nProbability 20.00%" ];
	Node0x600001c168f0:s3 -> Node0x600001c169e0[tooltip="72 -> 101\nProbability 20.00%" ];
	Node0x600001c168f0:s4 -> Node0x600001c16a30[tooltip="72 -> 116\nProbability 20.00%" ];
	Node0x600001c16940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170" fontname="Courier",label="{75:\l|  %76 = load i32, ptr %7, align 4\l  %77 = shl i32 %76, 8\l  %78 = load i32, ptr %7, align 4\l  %79 = lshr i32 %78, 8\l  %80 = zext i32 %79 to i64\l  %81 = call i64 @mad_bit_read(ptr noundef %4, i32 noundef 8)\l  %82 = xor i64 %80, %81\l  %83 = and i64 %82, 255\l  %84 = getelementptr inbounds [256 x i16], ptr @crc_table, i64 0, i64 %83\l  %85 = load i16, ptr %84, align 2\l  %86 = zext i16 %85 to i32\l  %87 = xor i32 %77, %86\l  store i32 %87, ptr %7, align 4\l  br label %88\l}"];
	Node0x600001c16940 -> Node0x600001c16990[tooltip="75 -> 88\nProbability 100.00%" ];
	Node0x600001c16990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70" fontname="Courier",label="{88:\l|  %89 = load i32, ptr %7, align 4\l  %90 = shl i32 %89, 8\l  %91 = load i32, ptr %7, align 4\l  %92 = lshr i32 %91, 8\l  %93 = zext i32 %92 to i64\l  %94 = call i64 @mad_bit_read(ptr noundef %4, i32 noundef 8)\l  %95 = xor i64 %93, %94\l  %96 = and i64 %95, 255\l  %97 = getelementptr inbounds [256 x i16], ptr @crc_table, i64 0, i64 %96\l  %98 = load i16, ptr %97, align 2\l  %99 = zext i16 %98 to i32\l  %100 = xor i32 %90, %99\l  store i32 %100, ptr %7, align 4\l  br label %101\l}"];
	Node0x600001c16990 -> Node0x600001c169e0[tooltip="88 -> 101\nProbability 100.00%" ];
	Node0x600001c169e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{101:\l|  %102 = load i32, ptr %7, align 4\l  %103 = shl i32 %102, 8\l  %104 = load i32, ptr %7, align 4\l  %105 = lshr i32 %104, 8\l  %106 = zext i32 %105 to i64\l  %107 = call i64 @mad_bit_read(ptr noundef %4, i32 noundef 8)\l  %108 = xor i64 %106, %107\l  %109 = and i64 %108, 255\l  %110 = getelementptr inbounds [256 x i16], ptr @crc_table, i64 0, i64 %109\l  %111 = load i16, ptr %110, align 2\l  %112 = zext i16 %111 to i32\l  %113 = xor i32 %103, %112\l  store i32 %113, ptr %7, align 4\l  %114 = load i32, ptr %5, align 4\l  %115 = urem i32 %114, 8\l  store i32 %115, ptr %5, align 4\l  br label %116\l}"];
	Node0x600001c169e0 -> Node0x600001c16a30[tooltip="101 -> 116\nProbability 100.00%" ];
	Node0x600001c16a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{116:\l|  br label %117\l}"];
	Node0x600001c16a30 -> Node0x600001c16a80[tooltip="116 -> 117\nProbability 100.00%" ];
	Node0x600001c16a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{117:\l|  br label %118\l}"];
	Node0x600001c16a80 -> Node0x600001c16ad0[tooltip="117 -> 118\nProbability 100.00%" ];
	Node0x600001c16ad0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{118:\l|  %119 = load i32, ptr %5, align 4\l  %120 = add i32 %119, -1\l  store i32 %120, ptr %5, align 4\l  %121 = icmp ne i32 %119, 0\l  br i1 %121, label %122, label %138\l|{<s0>T|<s1>F}}"];
	Node0x600001c16ad0:s0 -> Node0x600001c16b20[tooltip="118 -> 122\nProbability 96.88%" ];
	Node0x600001c16ad0:s1 -> Node0x600001c16c10[tooltip="118 -> 138\nProbability 3.12%" ];
	Node0x600001c16b20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{122:\l|  %123 = call i64 @mad_bit_read(ptr noundef %4, i32 noundef 1)\l  %124 = load i32, ptr %7, align 4\l  %125 = lshr i32 %124, 15\l  %126 = zext i32 %125 to i64\l  %127 = xor i64 %123, %126\l  %128 = trunc i64 %127 to i32\l  store i32 %128, ptr %9, align 4\l  %129 = load i32, ptr %7, align 4\l  %130 = shl i32 %129, 1\l  store i32 %130, ptr %7, align 4\l  %131 = load i32, ptr %9, align 4\l  %132 = and i32 %131, 1\l  %133 = icmp ne i32 %132, 0\l  br i1 %133, label %134, label %137\l|{<s0>T|<s1>F}}"];
	Node0x600001c16b20:s0 -> Node0x600001c16b70[tooltip="122 -> 134\nProbability 50.00%" ];
	Node0x600001c16b20:s1 -> Node0x600001c16bc0[tooltip="122 -> 137\nProbability 50.00%" ];
	Node0x600001c16b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{134:\l|  %135 = load i32, ptr %7, align 4\l  %136 = xor i32 %135, 32773\l  store i32 %136, ptr %7, align 4\l  br label %137\l}"];
	Node0x600001c16b70 -> Node0x600001c16bc0[tooltip="134 -> 137\nProbability 100.00%" ];
	Node0x600001c16bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{137:\l|  br label %118\l}"];
	Node0x600001c16bc0 -> Node0x600001c16ad0[tooltip="137 -> 118\nProbability 100.00%" ];
	Node0x600001c16c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{138:\l|  %139 = load i32, ptr %7, align 4\l  %140 = and i32 %139, 65535\l  %141 = trunc i32 %140 to i16\l  ret i16 %141\l}"];
}
