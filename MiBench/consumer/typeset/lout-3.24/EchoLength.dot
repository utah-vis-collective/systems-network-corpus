digraph "CFG for 'EchoLength' function" {
	label="CFG for 'EchoLength' function";

	Node0x6000033f5f40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca i32, align 4\l  store i32 %0, ptr %2, align 4\l  %3 = load i32, ptr @EchoLength.i, align 4\l  %4 = add nsw i32 %3, 1\l  %5 = srem i32 %4, 8\l  store i32 %5, ptr @EchoLength.i, align 4\l  %6 = load i32, ptr %2, align 4\l  %7 = icmp eq i32 %6, 8388607\l  br i1 %7, label %8, label %19\l|{<s0>T|<s1>F}}"];
	Node0x6000033f5f40:s0 -> Node0x6000033f5f90[tooltip="1 -> 8\nProbability 50.00%" ];
	Node0x6000033f5f40:s1 -> Node0x6000033f5fe0[tooltip="1 -> 19\nProbability 50.00%" ];
	Node0x6000033f5f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{8:\l|  %9 = load i32, ptr @EchoLength.i, align 4\l  %10 = sext i32 %9 to i64\l  %11 = getelementptr inbounds [8 x [20 x i8]], ptr @EchoLength.buff, i64 0,\l... i64 %10\l  %12 = getelementptr inbounds [20 x i8], ptr %11, i64 0, i64 0\l  %13 = load i32, ptr @EchoLength.i, align 4\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds [8 x [20 x i8]], ptr @EchoLength.buff, i64 0,\l... i64 %14\l  %16 = getelementptr inbounds [20 x i8], ptr %15, i64 0, i64 0\l  %17 = call i64 @llvm.objectsize.i64.p0(ptr %16, i1 false, i1 true, i1 false)\l  %18 = call i32 (ptr, i32, i64, ptr, ...) @__sprintf_chk(ptr noundef %12, i32\l... noundef 0, i64 noundef %17, ptr noundef @.str, ptr noundef @.str.1)\l  br label %28\l}"];
	Node0x6000033f5f90 -> Node0x6000033f6030[tooltip="8 -> 28\nProbability 100.00%" ];
	Node0x6000033f5fe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{19:\l|  %20 = load ptr, ptr @BackEnd, align 8\l  %21 = getelementptr inbounds %struct.back_end_rec, ptr %20, i32 0, i32 11\l  %22 = load ptr, ptr %21, align 8\l  %23 = load i32, ptr @EchoLength.i, align 4\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds [8 x [20 x i8]], ptr @EchoLength.buff, i64 0,\l... i64 %24\l  %26 = getelementptr inbounds [20 x i8], ptr %25, i64 0, i64 0\l  %27 = load i32, ptr %2, align 4\l  call void %22(ptr noundef %26, i32 noundef %27, i32 noundef 1)\l  br label %28\l}"];
	Node0x6000033f5fe0 -> Node0x6000033f6030[tooltip="19 -> 28\nProbability 100.00%" ];
	Node0x6000033f6030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{28:\l|  %29 = load i32, ptr @EchoLength.i, align 4\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds [8 x [20 x i8]], ptr @EchoLength.buff, i64 0,\l... i64 %30\l  %32 = getelementptr inbounds [20 x i8], ptr %31, i64 0, i64 0\l  ret ptr %32\l}"];
}
