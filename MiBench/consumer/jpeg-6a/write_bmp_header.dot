digraph "CFG for 'write_bmp_header' function" {
	label="CFG for 'write_bmp_header' function";

	Node0x6000032035c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca [14 x i8], align 1\l  %6 = alloca [40 x i8], align 1\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  store ptr %0, ptr %3, align 8\l  store ptr %1, ptr %4, align 8\l  %11 = load ptr, ptr %3, align 8\l  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %11, i32 0,\l... i32 10\l  %13 = load i32, ptr %12, align 8\l  %14 = icmp eq i32 %13, 2\l  br i1 %14, label %15, label %23\l|{<s0>T|<s1>F}}"];
	Node0x6000032035c0:s0 -> Node0x600003203610[tooltip="2 -> 15\nProbability 50.00%" ];
	Node0x6000032035c0:s1 -> Node0x600003203750[tooltip="2 -> 23\nProbability 50.00%" ];
	Node0x600003203610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{15:\l|  %16 = load ptr, ptr %3, align 8\l  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %16, i32 0,\l... i32 19\l  %18 = load i32, ptr %17, align 4\l  %19 = icmp ne i32 %18, 0\l  br i1 %19, label %20, label %21\l|{<s0>T|<s1>F}}"];
	Node0x600003203610:s0 -> Node0x600003203660[tooltip="15 -> 20\nProbability 62.50%" ];
	Node0x600003203610:s1 -> Node0x6000032036b0[tooltip="15 -> 21\nProbability 37.50%" ];
	Node0x600003203660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{20:\l|  store i32 8, ptr %9, align 4\l  store i32 256, ptr %10, align 4\l  br label %22\l}"];
	Node0x600003203660 -> Node0x600003203700[tooltip="20 -> 22\nProbability 100.00%" ];
	Node0x6000032036b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{21:\l|  store i32 24, ptr %9, align 4\l  store i32 0, ptr %10, align 4\l  br label %22\l}"];
	Node0x6000032036b0 -> Node0x600003203700[tooltip="21 -> 22\nProbability 100.00%" ];
	Node0x600003203700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{22:\l|  br label %24\l}"];
	Node0x600003203700 -> Node0x6000032037a0[tooltip="22 -> 24\nProbability 100.00%" ];
	Node0x600003203750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{23:\l|  store i32 8, ptr %9, align 4\l  store i32 256, ptr %10, align 4\l  br label %24\l}"];
	Node0x600003203750 -> Node0x6000032037a0[tooltip="23 -> 24\nProbability 100.00%" ];
	Node0x6000032037a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{24:\l|  %25 = load i32, ptr %10, align 4\l  %26 = mul nsw i32 %25, 4\l  %27 = add nsw i32 54, %26\l  %28 = sext i32 %27 to i64\l  store i64 %28, ptr %7, align 8\l  %29 = load i64, ptr %7, align 8\l  %30 = load ptr, ptr %4, align 8\l  %31 = getelementptr inbounds %struct.bmp_dest_struct, ptr %30, i32 0, i32 4\l  %32 = load i32, ptr %31, align 4\l  %33 = zext i32 %32 to i64\l  %34 = load ptr, ptr %3, align 8\l  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %34, i32 0,\l... i32 27\l  %36 = load i32, ptr %35, align 4\l  %37 = zext i32 %36 to i64\l  %38 = mul nsw i64 %33, %37\l  %39 = add nsw i64 %29, %38\l  store i64 %39, ptr %8, align 8\l  %40 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 0\l  call void @llvm.memset.p0.i64(ptr align 1 %40, i8 0, i64 14, i1 false)\l  %41 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 0\l  call void @llvm.memset.p0.i64(ptr align 1 %41, i8 0, i64 40, i1 false)\l  %42 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 0\l  store i8 66, ptr %42, align 1\l  %43 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 1\l  store i8 77, ptr %43, align 1\l  %44 = load i64, ptr %8, align 8\l  %45 = and i64 %44, 255\l  %46 = trunc i64 %45 to i8\l  %47 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 2\l  store i8 %46, ptr %47, align 1\l  %48 = load i64, ptr %8, align 8\l  %49 = ashr i64 %48, 8\l  %50 = and i64 %49, 255\l  %51 = trunc i64 %50 to i8\l  %52 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 3\l  store i8 %51, ptr %52, align 1\l  %53 = load i64, ptr %8, align 8\l  %54 = ashr i64 %53, 16\l  %55 = and i64 %54, 255\l  %56 = trunc i64 %55 to i8\l  %57 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 4\l  store i8 %56, ptr %57, align 1\l  %58 = load i64, ptr %8, align 8\l  %59 = ashr i64 %58, 24\l  %60 = and i64 %59, 255\l  %61 = trunc i64 %60 to i8\l  %62 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 5\l  store i8 %61, ptr %62, align 1\l  %63 = load i64, ptr %7, align 8\l  %64 = and i64 %63, 255\l  %65 = trunc i64 %64 to i8\l  %66 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 10\l  store i8 %65, ptr %66, align 1\l  %67 = load i64, ptr %7, align 8\l  %68 = ashr i64 %67, 8\l  %69 = and i64 %68, 255\l  %70 = trunc i64 %69 to i8\l  %71 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 11\l  store i8 %70, ptr %71, align 1\l  %72 = load i64, ptr %7, align 8\l  %73 = ashr i64 %72, 16\l  %74 = and i64 %73, 255\l  %75 = trunc i64 %74 to i8\l  %76 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 12\l  store i8 %75, ptr %76, align 1\l  %77 = load i64, ptr %7, align 8\l  %78 = ashr i64 %77, 24\l  %79 = and i64 %78, 255\l  %80 = trunc i64 %79 to i8\l  %81 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 13\l  store i8 %80, ptr %81, align 1\l  %82 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 0\l  store i8 40, ptr %82, align 1\l  %83 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 1\l  store i8 0, ptr %83, align 1\l  %84 = load ptr, ptr %3, align 8\l  %85 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %84, i32 0,\l... i32 26\l  %86 = load i32, ptr %85, align 8\l  %87 = and i32 %86, 255\l  %88 = trunc i32 %87 to i8\l  %89 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 4\l  store i8 %88, ptr %89, align 1\l  %90 = load ptr, ptr %3, align 8\l  %91 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %90, i32 0,\l... i32 26\l  %92 = load i32, ptr %91, align 8\l  %93 = lshr i32 %92, 8\l  %94 = and i32 %93, 255\l  %95 = trunc i32 %94 to i8\l  %96 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 5\l  store i8 %95, ptr %96, align 1\l  %97 = load ptr, ptr %3, align 8\l  %98 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %97, i32 0,\l... i32 26\l  %99 = load i32, ptr %98, align 8\l  %100 = lshr i32 %99, 16\l  %101 = and i32 %100, 255\l  %102 = trunc i32 %101 to i8\l  %103 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 6\l  store i8 %102, ptr %103, align 1\l  %104 = load ptr, ptr %3, align 8\l  %105 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %104, i32\l... 0, i32 26\l  %106 = load i32, ptr %105, align 8\l  %107 = lshr i32 %106, 24\l  %108 = and i32 %107, 255\l  %109 = trunc i32 %108 to i8\l  %110 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 7\l  store i8 %109, ptr %110, align 1\l  %111 = load ptr, ptr %3, align 8\l  %112 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %111, i32\l... 0, i32 27\l  %113 = load i32, ptr %112, align 4\l  %114 = and i32 %113, 255\l  %115 = trunc i32 %114 to i8\l  %116 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 8\l  store i8 %115, ptr %116, align 1\l  %117 = load ptr, ptr %3, align 8\l  %118 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %117, i32\l... 0, i32 27\l  %119 = load i32, ptr %118, align 4\l  %120 = lshr i32 %119, 8\l  %121 = and i32 %120, 255\l  %122 = trunc i32 %121 to i8\l  %123 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 9\l  store i8 %122, ptr %123, align 1\l  %124 = load ptr, ptr %3, align 8\l  %125 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %124, i32\l... 0, i32 27\l  %126 = load i32, ptr %125, align 4\l  %127 = lshr i32 %126, 16\l  %128 = and i32 %127, 255\l  %129 = trunc i32 %128 to i8\l  %130 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 10\l  store i8 %129, ptr %130, align 1\l  %131 = load ptr, ptr %3, align 8\l  %132 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %131, i32\l... 0, i32 27\l  %133 = load i32, ptr %132, align 4\l  %134 = lshr i32 %133, 24\l  %135 = and i32 %134, 255\l  %136 = trunc i32 %135 to i8\l  %137 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 11\l  store i8 %136, ptr %137, align 1\l  %138 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 12\l  store i8 1, ptr %138, align 1\l  %139 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 13\l  store i8 0, ptr %139, align 1\l  %140 = load i32, ptr %9, align 4\l  %141 = and i32 %140, 255\l  %142 = trunc i32 %141 to i8\l  %143 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 14\l  store i8 %142, ptr %143, align 1\l  %144 = load i32, ptr %9, align 4\l  %145 = ashr i32 %144, 8\l  %146 = and i32 %145, 255\l  %147 = trunc i32 %146 to i8\l  %148 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 15\l  store i8 %147, ptr %148, align 1\l  %149 = load ptr, ptr %3, align 8\l  %150 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %149, i32\l... 0, i32 51\l  %151 = load i8, ptr %150, align 8\l  %152 = zext i8 %151 to i32\l  %153 = icmp eq i32 %152, 2\l  br i1 %153, label %154, label %233\l|{<s0>T|<s1>F}}"];
	Node0x6000032037a0:s0 -> Node0x6000032037f0[tooltip="24 -> 154\nProbability 50.00%" ];
	Node0x6000032037a0:s1 -> Node0x600003203840[tooltip="24 -> 233\nProbability 50.00%" ];
	Node0x6000032037f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{154:\l|  %155 = load ptr, ptr %3, align 8\l  %156 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %155, i32\l... 0, i32 52\l  %157 = load i16, ptr %156, align 2\l  %158 = zext i16 %157 to i32\l  %159 = mul nsw i32 %158, 100\l  %160 = sext i32 %159 to i64\l  %161 = and i64 %160, 255\l  %162 = trunc i64 %161 to i8\l  %163 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 24\l  store i8 %162, ptr %163, align 1\l  %164 = load ptr, ptr %3, align 8\l  %165 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %164, i32\l... 0, i32 52\l  %166 = load i16, ptr %165, align 2\l  %167 = zext i16 %166 to i32\l  %168 = mul nsw i32 %167, 100\l  %169 = sext i32 %168 to i64\l  %170 = ashr i64 %169, 8\l  %171 = and i64 %170, 255\l  %172 = trunc i64 %171 to i8\l  %173 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 25\l  store i8 %172, ptr %173, align 1\l  %174 = load ptr, ptr %3, align 8\l  %175 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %174, i32\l... 0, i32 52\l  %176 = load i16, ptr %175, align 2\l  %177 = zext i16 %176 to i32\l  %178 = mul nsw i32 %177, 100\l  %179 = sext i32 %178 to i64\l  %180 = ashr i64 %179, 16\l  %181 = and i64 %180, 255\l  %182 = trunc i64 %181 to i8\l  %183 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 26\l  store i8 %182, ptr %183, align 1\l  %184 = load ptr, ptr %3, align 8\l  %185 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %184, i32\l... 0, i32 52\l  %186 = load i16, ptr %185, align 2\l  %187 = zext i16 %186 to i32\l  %188 = mul nsw i32 %187, 100\l  %189 = sext i32 %188 to i64\l  %190 = ashr i64 %189, 24\l  %191 = and i64 %190, 255\l  %192 = trunc i64 %191 to i8\l  %193 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 27\l  store i8 %192, ptr %193, align 1\l  %194 = load ptr, ptr %3, align 8\l  %195 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %194, i32\l... 0, i32 53\l  %196 = load i16, ptr %195, align 4\l  %197 = zext i16 %196 to i32\l  %198 = mul nsw i32 %197, 100\l  %199 = sext i32 %198 to i64\l  %200 = and i64 %199, 255\l  %201 = trunc i64 %200 to i8\l  %202 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 28\l  store i8 %201, ptr %202, align 1\l  %203 = load ptr, ptr %3, align 8\l  %204 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %203, i32\l... 0, i32 53\l  %205 = load i16, ptr %204, align 4\l  %206 = zext i16 %205 to i32\l  %207 = mul nsw i32 %206, 100\l  %208 = sext i32 %207 to i64\l  %209 = ashr i64 %208, 8\l  %210 = and i64 %209, 255\l  %211 = trunc i64 %210 to i8\l  %212 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 29\l  store i8 %211, ptr %212, align 1\l  %213 = load ptr, ptr %3, align 8\l  %214 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %213, i32\l... 0, i32 53\l  %215 = load i16, ptr %214, align 4\l  %216 = zext i16 %215 to i32\l  %217 = mul nsw i32 %216, 100\l  %218 = sext i32 %217 to i64\l  %219 = ashr i64 %218, 16\l  %220 = and i64 %219, 255\l  %221 = trunc i64 %220 to i8\l  %222 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 30\l  store i8 %221, ptr %222, align 1\l  %223 = load ptr, ptr %3, align 8\l  %224 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %223, i32\l... 0, i32 53\l  %225 = load i16, ptr %224, align 4\l  %226 = zext i16 %225 to i32\l  %227 = mul nsw i32 %226, 100\l  %228 = sext i32 %227 to i64\l  %229 = ashr i64 %228, 24\l  %230 = and i64 %229, 255\l  %231 = trunc i64 %230 to i8\l  %232 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 31\l  store i8 %231, ptr %232, align 1\l  br label %233\l}"];
	Node0x6000032037f0 -> Node0x600003203840[tooltip="154 -> 233\nProbability 100.00%" ];
	Node0x600003203840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{233:\l|  %234 = load i32, ptr %10, align 4\l  %235 = and i32 %234, 255\l  %236 = trunc i32 %235 to i8\l  %237 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 32\l  store i8 %236, ptr %237, align 1\l  %238 = load i32, ptr %10, align 4\l  %239 = ashr i32 %238, 8\l  %240 = and i32 %239, 255\l  %241 = trunc i32 %240 to i8\l  %242 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 33\l  store i8 %241, ptr %242, align 1\l  %243 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 0\l  %244 = load ptr, ptr %4, align 8\l  %245 = getelementptr inbounds %struct.bmp_dest_struct, ptr %244, i32 0, i32 0\l  %246 = getelementptr inbounds %struct.djpeg_dest_struct, ptr %245, i32 0,\l... i32 3\l  %247 = load ptr, ptr %246, align 8\l  %248 = call i64 @\"\\01_fwrite\"(ptr noundef %243, i64 noundef 1, i64 noundef\l... 14, ptr noundef %247)\l  %249 = icmp ne i64 %248, 14\l  br i1 %249, label %250, label %261\l|{<s0>T|<s1>F}}"];
	Node0x600003203840:s0 -> Node0x600003203890[tooltip="233 -> 250\nProbability 50.00%" ];
	Node0x600003203840:s1 -> Node0x6000032038e0[tooltip="233 -> 261\nProbability 50.00%" ];
	Node0x600003203890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{250:\l|  %251 = load ptr, ptr %3, align 8\l  %252 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %251, i32\l... 0, i32 0\l  %253 = load ptr, ptr %252, align 8\l  %254 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %253, i32 0, i32 5\l  store i32 36, ptr %254, align 8\l  %255 = load ptr, ptr %3, align 8\l  %256 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %255, i32\l... 0, i32 0\l  %257 = load ptr, ptr %256, align 8\l  %258 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %257, i32 0, i32 0\l  %259 = load ptr, ptr %258, align 8\l  %260 = load ptr, ptr %3, align 8\l  call void %259(ptr noundef %260)\l  br label %261\l}"];
	Node0x600003203890 -> Node0x6000032038e0[tooltip="250 -> 261\nProbability 100.00%" ];
	Node0x6000032038e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{261:\l|  %262 = getelementptr inbounds [40 x i8], ptr %6, i64 0, i64 0\l  %263 = load ptr, ptr %4, align 8\l  %264 = getelementptr inbounds %struct.bmp_dest_struct, ptr %263, i32 0, i32 0\l  %265 = getelementptr inbounds %struct.djpeg_dest_struct, ptr %264, i32 0,\l... i32 3\l  %266 = load ptr, ptr %265, align 8\l  %267 = call i64 @\"\\01_fwrite\"(ptr noundef %262, i64 noundef 1, i64 noundef\l... 40, ptr noundef %266)\l  %268 = icmp ne i64 %267, 40\l  br i1 %268, label %269, label %280\l|{<s0>T|<s1>F}}"];
	Node0x6000032038e0:s0 -> Node0x600003203930[tooltip="261 -> 269\nProbability 50.00%" ];
	Node0x6000032038e0:s1 -> Node0x600003203980[tooltip="261 -> 280\nProbability 50.00%" ];
	Node0x600003203930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{269:\l|  %270 = load ptr, ptr %3, align 8\l  %271 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %270, i32\l... 0, i32 0\l  %272 = load ptr, ptr %271, align 8\l  %273 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %272, i32 0, i32 5\l  store i32 36, ptr %273, align 8\l  %274 = load ptr, ptr %3, align 8\l  %275 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %274, i32\l... 0, i32 0\l  %276 = load ptr, ptr %275, align 8\l  %277 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %276, i32 0, i32 0\l  %278 = load ptr, ptr %277, align 8\l  %279 = load ptr, ptr %3, align 8\l  call void %278(ptr noundef %279)\l  br label %280\l}"];
	Node0x600003203930 -> Node0x600003203980[tooltip="269 -> 280\nProbability 100.00%" ];
	Node0x600003203980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{280:\l|  %281 = load i32, ptr %10, align 4\l  %282 = icmp sgt i32 %281, 0\l  br i1 %282, label %283, label %287\l|{<s0>T|<s1>F}}"];
	Node0x600003203980:s0 -> Node0x6000032039d0[tooltip="280 -> 283\nProbability 62.50%" ];
	Node0x600003203980:s1 -> Node0x600003203a20[tooltip="280 -> 287\nProbability 37.50%" ];
	Node0x6000032039d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{283:\l|  %284 = load ptr, ptr %3, align 8\l  %285 = load ptr, ptr %4, align 8\l  %286 = load i32, ptr %10, align 4\l  call void @write_colormap(ptr noundef %284, ptr noundef %285, i32 noundef\l... %286, i32 noundef 4)\l  br label %287\l}"];
	Node0x6000032039d0 -> Node0x600003203a20[tooltip="283 -> 287\nProbability 100.00%" ];
	Node0x600003203a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{287:\l|  ret void\l}"];
}
