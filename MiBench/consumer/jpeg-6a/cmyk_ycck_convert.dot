digraph "CFG for 'cmyk_ycck_convert' function" {
	label="CFG for 'cmyk_ycck_convert' function";

	Node0x600001b03c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{5:\l|  %6 = alloca ptr, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca ptr, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca ptr, align 8\l  %16 = alloca ptr, align 8\l  %17 = alloca ptr, align 8\l  %18 = alloca ptr, align 8\l  %19 = alloca ptr, align 8\l  %20 = alloca ptr, align 8\l  %21 = alloca i32, align 4\l  %22 = alloca i32, align 4\l  store ptr %0, ptr %6, align 8\l  store ptr %1, ptr %7, align 8\l  store ptr %2, ptr %8, align 8\l  store i32 %3, ptr %9, align 4\l  store i32 %4, ptr %10, align 4\l  %23 = load ptr, ptr %6, align 8\l  %24 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %23, i32 0,\l... i32 56\l  %25 = load ptr, ptr %24, align 8\l  store ptr %25, ptr %11, align 8\l  %26 = load ptr, ptr %11, align 8\l  %27 = getelementptr inbounds %struct.my_color_converter, ptr %26, i32 0, i32\l... 1\l  %28 = load ptr, ptr %27, align 8\l  store ptr %28, ptr %15, align 8\l  %29 = load ptr, ptr %6, align 8\l  %30 = getelementptr inbounds %struct.jpeg_compress_struct, ptr %29, i32 0,\l... i32 6\l  %31 = load i32, ptr %30, align 8\l  store i32 %31, ptr %22, align 4\l  br label %32\l}"];
	Node0x600001b03c50 -> Node0x600001b03ca0[tooltip="5 -> 32\nProbability 100.00%" ];
	Node0x600001b03ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{32:\l|  %33 = load i32, ptr %10, align 4\l  %34 = add nsw i32 %33, -1\l  store i32 %34, ptr %10, align 4\l  %35 = icmp sge i32 %34, 0\l  br i1 %35, label %36, label %181\l|{<s0>T|<s1>F}}"];
	Node0x600001b03ca0:s0 -> Node0x600001b03cf0[tooltip="32 -> 36\nProbability 96.88%" ];
	Node0x600001b03ca0:s1 -> Node0x600001b03e80[tooltip="32 -> 181\nProbability 3.12%" ];
	Node0x600001b03cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{36:\l|  %37 = load ptr, ptr %7, align 8\l  %38 = getelementptr inbounds ptr, ptr %37, i32 1\l  store ptr %38, ptr %7, align 8\l  %39 = load ptr, ptr %37, align 8\l  store ptr %39, ptr %16, align 8\l  %40 = load ptr, ptr %8, align 8\l  %41 = getelementptr inbounds ptr, ptr %40, i64 0\l  %42 = load ptr, ptr %41, align 8\l  %43 = load i32, ptr %9, align 4\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds ptr, ptr %42, i64 %44\l  %46 = load ptr, ptr %45, align 8\l  store ptr %46, ptr %17, align 8\l  %47 = load ptr, ptr %8, align 8\l  %48 = getelementptr inbounds ptr, ptr %47, i64 1\l  %49 = load ptr, ptr %48, align 8\l  %50 = load i32, ptr %9, align 4\l  %51 = zext i32 %50 to i64\l  %52 = getelementptr inbounds ptr, ptr %49, i64 %51\l  %53 = load ptr, ptr %52, align 8\l  store ptr %53, ptr %18, align 8\l  %54 = load ptr, ptr %8, align 8\l  %55 = getelementptr inbounds ptr, ptr %54, i64 2\l  %56 = load ptr, ptr %55, align 8\l  %57 = load i32, ptr %9, align 4\l  %58 = zext i32 %57 to i64\l  %59 = getelementptr inbounds ptr, ptr %56, i64 %58\l  %60 = load ptr, ptr %59, align 8\l  store ptr %60, ptr %19, align 8\l  %61 = load ptr, ptr %8, align 8\l  %62 = getelementptr inbounds ptr, ptr %61, i64 3\l  %63 = load ptr, ptr %62, align 8\l  %64 = load i32, ptr %9, align 4\l  %65 = zext i32 %64 to i64\l  %66 = getelementptr inbounds ptr, ptr %63, i64 %65\l  %67 = load ptr, ptr %66, align 8\l  store ptr %67, ptr %20, align 8\l  %68 = load i32, ptr %9, align 4\l  %69 = add i32 %68, 1\l  store i32 %69, ptr %9, align 4\l  store i32 0, ptr %21, align 4\l  br label %70\l}"];
	Node0x600001b03cf0 -> Node0x600001b03d40[tooltip="36 -> 70\nProbability 100.00%" ];
	Node0x600001b03d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{70:\l|  %71 = load i32, ptr %21, align 4\l  %72 = load i32, ptr %22, align 4\l  %73 = icmp ult i32 %71, %72\l  br i1 %73, label %74, label %180\l|{<s0>T|<s1>F}}"];
	Node0x600001b03d40:s0 -> Node0x600001b03d90[tooltip="70 -> 74\nProbability 96.88%" ];
	Node0x600001b03d40:s1 -> Node0x600001b03e30[tooltip="70 -> 180\nProbability 3.12%" ];
	Node0x600001b03d90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{74:\l|  %75 = load ptr, ptr %16, align 8\l  %76 = getelementptr inbounds i8, ptr %75, i64 0\l  %77 = load i8, ptr %76, align 1\l  %78 = zext i8 %77 to i32\l  %79 = sub nsw i32 255, %78\l  store i32 %79, ptr %12, align 4\l  %80 = load ptr, ptr %16, align 8\l  %81 = getelementptr inbounds i8, ptr %80, i64 1\l  %82 = load i8, ptr %81, align 1\l  %83 = zext i8 %82 to i32\l  %84 = sub nsw i32 255, %83\l  store i32 %84, ptr %13, align 4\l  %85 = load ptr, ptr %16, align 8\l  %86 = getelementptr inbounds i8, ptr %85, i64 2\l  %87 = load i8, ptr %86, align 1\l  %88 = zext i8 %87 to i32\l  %89 = sub nsw i32 255, %88\l  store i32 %89, ptr %14, align 4\l  %90 = load ptr, ptr %16, align 8\l  %91 = getelementptr inbounds i8, ptr %90, i64 3\l  %92 = load i8, ptr %91, align 1\l  %93 = load ptr, ptr %20, align 8\l  %94 = load i32, ptr %21, align 4\l  %95 = zext i32 %94 to i64\l  %96 = getelementptr inbounds i8, ptr %93, i64 %95\l  store i8 %92, ptr %96, align 1\l  %97 = load ptr, ptr %16, align 8\l  %98 = getelementptr inbounds i8, ptr %97, i64 4\l  store ptr %98, ptr %16, align 8\l  %99 = load ptr, ptr %15, align 8\l  %100 = load i32, ptr %12, align 4\l  %101 = add nsw i32 %100, 0\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds i64, ptr %99, i64 %102\l  %104 = load i64, ptr %103, align 8\l  %105 = load ptr, ptr %15, align 8\l  %106 = load i32, ptr %13, align 4\l  %107 = add nsw i32 %106, 256\l  %108 = sext i32 %107 to i64\l  %109 = getelementptr inbounds i64, ptr %105, i64 %108\l  %110 = load i64, ptr %109, align 8\l  %111 = add nsw i64 %104, %110\l  %112 = load ptr, ptr %15, align 8\l  %113 = load i32, ptr %14, align 4\l  %114 = add nsw i32 %113, 512\l  %115 = sext i32 %114 to i64\l  %116 = getelementptr inbounds i64, ptr %112, i64 %115\l  %117 = load i64, ptr %116, align 8\l  %118 = add nsw i64 %111, %117\l  %119 = ashr i64 %118, 16\l  %120 = trunc i64 %119 to i8\l  %121 = load ptr, ptr %17, align 8\l  %122 = load i32, ptr %21, align 4\l  %123 = zext i32 %122 to i64\l  %124 = getelementptr inbounds i8, ptr %121, i64 %123\l  store i8 %120, ptr %124, align 1\l  %125 = load ptr, ptr %15, align 8\l  %126 = load i32, ptr %12, align 4\l  %127 = add nsw i32 %126, 768\l  %128 = sext i32 %127 to i64\l  %129 = getelementptr inbounds i64, ptr %125, i64 %128\l  %130 = load i64, ptr %129, align 8\l  %131 = load ptr, ptr %15, align 8\l  %132 = load i32, ptr %13, align 4\l  %133 = add nsw i32 %132, 1024\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds i64, ptr %131, i64 %134\l  %136 = load i64, ptr %135, align 8\l  %137 = add nsw i64 %130, %136\l  %138 = load ptr, ptr %15, align 8\l  %139 = load i32, ptr %14, align 4\l  %140 = add nsw i32 %139, 1280\l  %141 = sext i32 %140 to i64\l  %142 = getelementptr inbounds i64, ptr %138, i64 %141\l  %143 = load i64, ptr %142, align 8\l  %144 = add nsw i64 %137, %143\l  %145 = ashr i64 %144, 16\l  %146 = trunc i64 %145 to i8\l  %147 = load ptr, ptr %18, align 8\l  %148 = load i32, ptr %21, align 4\l  %149 = zext i32 %148 to i64\l  %150 = getelementptr inbounds i8, ptr %147, i64 %149\l  store i8 %146, ptr %150, align 1\l  %151 = load ptr, ptr %15, align 8\l  %152 = load i32, ptr %12, align 4\l  %153 = add nsw i32 %152, 1280\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds i64, ptr %151, i64 %154\l  %156 = load i64, ptr %155, align 8\l  %157 = load ptr, ptr %15, align 8\l  %158 = load i32, ptr %13, align 4\l  %159 = add nsw i32 %158, 1536\l  %160 = sext i32 %159 to i64\l  %161 = getelementptr inbounds i64, ptr %157, i64 %160\l  %162 = load i64, ptr %161, align 8\l  %163 = add nsw i64 %156, %162\l  %164 = load ptr, ptr %15, align 8\l  %165 = load i32, ptr %14, align 4\l  %166 = add nsw i32 %165, 1792\l  %167 = sext i32 %166 to i64\l  %168 = getelementptr inbounds i64, ptr %164, i64 %167\l  %169 = load i64, ptr %168, align 8\l  %170 = add nsw i64 %163, %169\l  %171 = ashr i64 %170, 16\l  %172 = trunc i64 %171 to i8\l  %173 = load ptr, ptr %19, align 8\l  %174 = load i32, ptr %21, align 4\l  %175 = zext i32 %174 to i64\l  %176 = getelementptr inbounds i8, ptr %173, i64 %175\l  store i8 %172, ptr %176, align 1\l  br label %177\l}"];
	Node0x600001b03d90 -> Node0x600001b03de0[tooltip="74 -> 177\nProbability 100.00%" ];
	Node0x600001b03de0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{177:\l|  %178 = load i32, ptr %21, align 4\l  %179 = add i32 %178, 1\l  store i32 %179, ptr %21, align 4\l  br label %70, !llvm.loop !6\l}"];
	Node0x600001b03de0 -> Node0x600001b03d40[tooltip="177 -> 70\nProbability 100.00%" ];
	Node0x600001b03e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{180:\l|  br label %32, !llvm.loop !8\l}"];
	Node0x600001b03e30 -> Node0x600001b03ca0[tooltip="180 -> 32\nProbability 100.00%" ];
	Node0x600001b03e80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370" fontname="Courier",label="{181:\l|  ret void\l}"];
}
