digraph "CFG for 'Gsm_RPE_Decoding' function" {
	label="CFG for 'Gsm_RPE_Decoding' function";

	Node0x600002d5cfa0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{5:\l|  %6 = alloca ptr, align 8\l  %7 = alloca i16, align 2\l  %8 = alloca i16, align 2\l  %9 = alloca ptr, align 8\l  %10 = alloca ptr, align 8\l  %11 = alloca i16, align 2\l  %12 = alloca i16, align 2\l  %13 = alloca [13 x i16], align 2\l  store ptr %0, ptr %6, align 8\l  store i16 %1, ptr %7, align 2\l  store i16 %2, ptr %8, align 2\l  store ptr %3, ptr %9, align 8\l  store ptr %4, ptr %10, align 8\l  %14 = load i16, ptr %7, align 2\l  call void @APCM_quantization_xmaxc_to_exp_mant(i16 noundef signext %14, ptr\l... noundef %11, ptr noundef %12)\l  %15 = load ptr, ptr %9, align 8\l  %16 = load i16, ptr %12, align 2\l  %17 = load i16, ptr %11, align 2\l  %18 = getelementptr inbounds [13 x i16], ptr %13, i64 0, i64 0\l  call void @APCM_inverse_quantization(ptr noundef %15, i16 noundef signext\l... %16, i16 noundef signext %17, ptr noundef %18)\l  %19 = load i16, ptr %8, align 2\l  %20 = getelementptr inbounds [13 x i16], ptr %13, i64 0, i64 0\l  %21 = load ptr, ptr %10, align 8\l  call void @RPE_grid_positioning(i16 noundef signext %19, ptr noundef %20,\l... ptr noundef %21)\l  ret void\l}"];
}
