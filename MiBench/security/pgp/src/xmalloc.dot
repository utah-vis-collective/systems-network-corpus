digraph "CFG for 'xmalloc' function" {
	label="CFG for 'xmalloc' function";

	Node0x6000019735c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca i32, align 4\l  %3 = alloca ptr, align 8\l  store i32 %0, ptr %2, align 4\l  %4 = load i32, ptr %2, align 4\l  %5 = icmp eq i32 %4, 0\l  br i1 %5, label %6, label %9\l|{<s0>T|<s1>F}}"];
	Node0x6000019735c0:s0 -> Node0x600001973610[tooltip="1 -> 6\nProbability 37.50%" ];
	Node0x6000019735c0:s1 -> Node0x600001973660[tooltip="1 -> 9\nProbability 62.50%" ];
	Node0x600001973610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{6:\l|  %7 = load i32, ptr %2, align 4\l  %8 = add i32 %7, 1\l  store i32 %8, ptr %2, align 4\l  br label %9\l}"];
	Node0x600001973610 -> Node0x600001973660[tooltip="6 -> 9\nProbability 100.00%" ];
	Node0x600001973660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{9:\l|  %10 = load i32, ptr %2, align 4\l  %11 = zext i32 %10 to i64\l  %12 = call ptr @malloc(i64 noundef %11) #8\l  store ptr %12, ptr %3, align 8\l  %13 = load ptr, ptr %3, align 8\l  %14 = icmp eq ptr %13, null\l  br i1 %14, label %15, label %19\l|{<s0>T|<s1>F}}"];
	Node0x600001973660:s0 -> Node0x6000019736b0[tooltip="9 -> 15\nProbability 37.50%" ];
	Node0x600001973660:s1 -> Node0x600001973700[tooltip="9 -> 19\nProbability 62.50%" ];
	Node0x6000019736b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{15:\l|  %16 = load ptr, ptr @__stderrp, align 8\l  %17 = call ptr @LANG(ptr noundef @.str.13)\l  %18 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef %17) #9\l  call void @exitPGP(i32 noundef 1)\l  br label %19\l}"];
	Node0x6000019736b0 -> Node0x600001973700[tooltip="15 -> 19\nProbability 100.00%" ];
	Node0x600001973700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{19:\l|  %20 = load ptr, ptr %3, align 8\l  ret ptr %20\l}"];
}
