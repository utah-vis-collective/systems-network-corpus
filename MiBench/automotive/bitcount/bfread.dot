digraph "CFG for 'bfread' function" {
	label="CFG for 'bfread' function";

	Node0x600001e2a1c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca ptr, align 8\l  store ptr %0, ptr %2, align 8\l  %3 = load ptr, ptr %2, align 8\l  %4 = getelementptr inbounds %struct.bfile, ptr %3, i32 0, i32 2\l  %5 = load i8, ptr %4, align 1\l  %6 = sext i8 %5 to i32\l  %7 = icmp eq i32 0, %6\l  br i1 %7, label %8, label %18\l|{<s0>T|<s1>F}}"];
	Node0x600001e2a1c0:s0 -> Node0x600001e2a210[tooltip="1 -> 8\nProbability 50.00%" ];
	Node0x600001e2a1c0:s1 -> Node0x600001e2a260[tooltip="1 -> 18\nProbability 50.00%" ];
	Node0x600001e2a210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{8:\l|  %9 = load ptr, ptr %2, align 8\l  %10 = getelementptr inbounds %struct.bfile, ptr %9, i32 0, i32 0\l  %11 = load ptr, ptr %10, align 8\l  %12 = call i32 @fgetc(ptr noundef %11)\l  %13 = trunc i32 %12 to i8\l  %14 = load ptr, ptr %2, align 8\l  %15 = getelementptr inbounds %struct.bfile, ptr %14, i32 0, i32 1\l  store i8 %13, ptr %15, align 8\l  %16 = load ptr, ptr %2, align 8\l  %17 = getelementptr inbounds %struct.bfile, ptr %16, i32 0, i32 2\l  store i8 8, ptr %17, align 1\l  br label %18\l}"];
	Node0x600001e2a210 -> Node0x600001e2a260[tooltip="8 -> 18\nProbability 100.00%" ];
	Node0x600001e2a260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{18:\l|  %19 = load ptr, ptr %2, align 8\l  %20 = getelementptr inbounds %struct.bfile, ptr %19, i32 0, i32 2\l  %21 = load i8, ptr %20, align 1\l  %22 = add i8 %21, -1\l  store i8 %22, ptr %20, align 1\l  %23 = load ptr, ptr %2, align 8\l  %24 = getelementptr inbounds %struct.bfile, ptr %23, i32 0, i32 1\l  %25 = load i8, ptr %24, align 8\l  %26 = sext i8 %25 to i32\l  %27 = load ptr, ptr %2, align 8\l  %28 = getelementptr inbounds %struct.bfile, ptr %27, i32 0, i32 2\l  %29 = load i8, ptr %28, align 1\l  %30 = sext i8 %29 to i32\l  %31 = shl i32 1, %30\l  %32 = and i32 %26, %31\l  %33 = icmp ne i32 %32, 0\l  %34 = zext i1 %33 to i32\l  ret i32 %34\l}"];
}
