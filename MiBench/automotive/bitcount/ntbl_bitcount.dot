digraph "CFG for 'ntbl_bitcount' function" {
	label="CFG for 'ntbl_bitcount' function";

	Node0x600001d80000 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca i64, align 8\l  store i64 %0, ptr %2, align 8\l  %3 = load i64, ptr %2, align 8\l  %4 = and i64 %3, 15\l  %5 = trunc i64 %4 to i32\l  %6 = sext i32 %5 to i64\l  %7 = getelementptr inbounds [256 x i8], ptr @bits, i64 0, i64 %6\l  %8 = load i8, ptr %7, align 1\l  %9 = sext i8 %8 to i32\l  %10 = load i64, ptr %2, align 8\l  %11 = and i64 %10, 240\l  %12 = lshr i64 %11, 4\l  %13 = trunc i64 %12 to i32\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds [256 x i8], ptr @bits, i64 0, i64 %14\l  %16 = load i8, ptr %15, align 1\l  %17 = sext i8 %16 to i32\l  %18 = add nsw i32 %9, %17\l  %19 = load i64, ptr %2, align 8\l  %20 = and i64 %19, 3840\l  %21 = lshr i64 %20, 8\l  %22 = trunc i64 %21 to i32\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds [256 x i8], ptr @bits, i64 0, i64 %23\l  %25 = load i8, ptr %24, align 1\l  %26 = sext i8 %25 to i32\l  %27 = add nsw i32 %18, %26\l  %28 = load i64, ptr %2, align 8\l  %29 = and i64 %28, 61440\l  %30 = lshr i64 %29, 12\l  %31 = trunc i64 %30 to i32\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds [256 x i8], ptr @bits, i64 0, i64 %32\l  %34 = load i8, ptr %33, align 1\l  %35 = sext i8 %34 to i32\l  %36 = add nsw i32 %27, %35\l  %37 = load i64, ptr %2, align 8\l  %38 = and i64 %37, 983040\l  %39 = lshr i64 %38, 16\l  %40 = trunc i64 %39 to i32\l  %41 = sext i32 %40 to i64\l  %42 = getelementptr inbounds [256 x i8], ptr @bits, i64 0, i64 %41\l  %43 = load i8, ptr %42, align 1\l  %44 = sext i8 %43 to i32\l  %45 = add nsw i32 %36, %44\l  %46 = load i64, ptr %2, align 8\l  %47 = and i64 %46, 15728640\l  %48 = lshr i64 %47, 20\l  %49 = trunc i64 %48 to i32\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds [256 x i8], ptr @bits, i64 0, i64 %50\l  %52 = load i8, ptr %51, align 1\l  %53 = sext i8 %52 to i32\l  %54 = add nsw i32 %45, %53\l  %55 = load i64, ptr %2, align 8\l  %56 = and i64 %55, 251658240\l  %57 = lshr i64 %56, 24\l  %58 = trunc i64 %57 to i32\l  %59 = sext i32 %58 to i64\l  %60 = getelementptr inbounds [256 x i8], ptr @bits, i64 0, i64 %59\l  %61 = load i8, ptr %60, align 1\l  %62 = sext i8 %61 to i32\l  %63 = add nsw i32 %54, %62\l  %64 = load i64, ptr %2, align 8\l  %65 = and i64 %64, 4026531840\l  %66 = lshr i64 %65, 28\l  %67 = trunc i64 %66 to i32\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds [256 x i8], ptr @bits, i64 0, i64 %68\l  %70 = load i8, ptr %69, align 1\l  %71 = sext i8 %70 to i32\l  %72 = add nsw i32 %63, %71\l  ret i32 %72\l}"];
}
