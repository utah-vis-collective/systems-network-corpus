digraph "CFG for 'mem_planar_copy_mono' function" {
	label="CFG for 'mem_planar_copy_mono' function";

	Node0x600003592350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{11:\l|  %12 = alloca ptr, align 8\l  %13 = alloca ptr, align 8\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i64, align 8\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i64, align 8\l  %22 = alloca i64, align 8\l  %23 = alloca ptr, align 8\l  %24 = alloca i32, align 4\l  store ptr %0, ptr %12, align 8\l  store ptr %1, ptr %13, align 8\l  store i32 %2, ptr %14, align 4\l  store i32 %3, ptr %15, align 4\l  store i64 %4, ptr %16, align 8\l  store i32 %5, ptr %17, align 4\l  store i32 %6, ptr %18, align 4\l  store i32 %7, ptr %19, align 4\l  store i32 %8, ptr %20, align 4\l  store i64 %9, ptr %21, align 8\l  store i64 %10, ptr %22, align 8\l  %25 = load ptr, ptr %12, align 8\l  %26 = getelementptr inbounds %struct.gx_device_memory_s, ptr %25, i32 0, i32\l... 27\l  %27 = load ptr, ptr %26, align 8\l  store ptr %27, ptr %23, align 8\l  store i32 0, ptr %24, align 4\l  br label %28\l}"];
	Node0x600003592350 -> Node0x6000035923a0[tooltip="11 -> 28\nProbability 100.00%" ];
	Node0x6000035923a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{28:\l|  %29 = load i32, ptr %24, align 4\l  %30 = load ptr, ptr %12, align 8\l  %31 = getelementptr inbounds %struct.gx_device_s, ptr %30, i32 0, i32 7\l  %32 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %31, i32 0,\l... i32 1\l  %33 = load i32, ptr %32, align 4\l  %34 = icmp slt i32 %29, %33\l  br i1 %34, label %35, label %80\l|{<s0>T|<s1>F}}"];
	Node0x6000035923a0:s0 -> Node0x6000035923f0[tooltip="28 -> 35\nProbability 96.88%" ];
	Node0x6000035923a0:s1 -> Node0x600003592670[tooltip="28 -> 80\nProbability 3.12%" ];
	Node0x6000035923f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{35:\l|  %36 = load ptr, ptr getelementptr inbounds (%struct.gx_device_procs_s, ptr\l... getelementptr inbounds (%struct.gx_device_memory_s, ptr @mem_mono_device, i32\l... 0, i32 21), i32 0, i32 9), align 8\l  %37 = load ptr, ptr %12, align 8\l  %38 = load ptr, ptr %13, align 8\l  %39 = load i32, ptr %14, align 4\l  %40 = load i32, ptr %15, align 4\l  %41 = load i64, ptr %16, align 8\l  %42 = load i32, ptr %17, align 4\l  %43 = load i32, ptr %18, align 4\l  %44 = load i32, ptr %19, align 4\l  %45 = load i32, ptr %20, align 4\l  %46 = load i64, ptr %21, align 8\l  %47 = icmp eq i64 %46, -1\l  br i1 %47, label %48, label %49\l|{<s0>T|<s1>F}}"];
	Node0x6000035923f0:s0 -> Node0x600003592440[tooltip="35 -> 48\nProbability 37.50%" ];
	Node0x6000035923f0:s1 -> Node0x600003592490[tooltip="35 -> 49\nProbability 62.50%" ];
	Node0x600003592440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{48:\l|  br label %55\l}"];
	Node0x600003592440 -> Node0x6000035924e0[tooltip="48 -> 55\nProbability 100.00%" ];
	Node0x600003592490 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{49:\l|  %50 = load i64, ptr %21, align 8\l  %51 = load i32, ptr %24, align 4\l  %52 = zext i32 %51 to i64\l  %53 = lshr i64 %50, %52\l  %54 = and i64 %53, 1\l  br label %55\l}"];
	Node0x600003592490 -> Node0x6000035924e0[tooltip="49 -> 55\nProbability 100.00%" ];
	Node0x6000035924e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{55:\l|  %56 = phi i64 [ -1, %48 ], [ %54, %49 ]\l  %57 = load i64, ptr %22, align 8\l  %58 = icmp eq i64 %57, -1\l  br i1 %58, label %59, label %60\l|{<s0>T|<s1>F}}"];
	Node0x6000035924e0:s0 -> Node0x600003592530[tooltip="55 -> 59\nProbability 37.50%" ];
	Node0x6000035924e0:s1 -> Node0x600003592580[tooltip="55 -> 60\nProbability 62.50%" ];
	Node0x600003592530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{59:\l|  br label %66\l}"];
	Node0x600003592530 -> Node0x6000035925d0[tooltip="59 -> 66\nProbability 100.00%" ];
	Node0x600003592580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{60:\l|  %61 = load i64, ptr %22, align 8\l  %62 = load i32, ptr %24, align 4\l  %63 = zext i32 %62 to i64\l  %64 = lshr i64 %61, %63\l  %65 = and i64 %64, 1\l  br label %66\l}"];
	Node0x600003592580 -> Node0x6000035925d0[tooltip="60 -> 66\nProbability 100.00%" ];
	Node0x6000035925d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{66:\l|  %67 = phi i64 [ -1, %59 ], [ %65, %60 ]\l  %68 = call i32 %36(ptr noundef %37, ptr noundef %38, i32 noundef %39, i32\l... noundef %40, i64 noundef %41, i32 noundef %42, i32 noundef %43, i32 noundef\l... %44, i32 noundef %45, i64 noundef %56, i64 noundef %67)\l  br label %69\l}"];
	Node0x6000035925d0 -> Node0x600003592620[tooltip="66 -> 69\nProbability 100.00%" ];
	Node0x600003592620 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{69:\l|  %70 = load i32, ptr %24, align 4\l  %71 = add nsw i32 %70, 1\l  store i32 %71, ptr %24, align 4\l  %72 = load ptr, ptr %12, align 8\l  %73 = getelementptr inbounds %struct.gx_device_s, ptr %72, i32 0, i32 9\l  %74 = load i32, ptr %73, align 4\l  %75 = load ptr, ptr %12, align 8\l  %76 = getelementptr inbounds %struct.gx_device_memory_s, ptr %75, i32 0, i32\l... 27\l  %77 = load ptr, ptr %76, align 8\l  %78 = sext i32 %74 to i64\l  %79 = getelementptr inbounds ptr, ptr %77, i64 %78\l  store ptr %79, ptr %76, align 8\l  br label %28\l}"];
	Node0x600003592620 -> Node0x6000035923a0[tooltip="69 -> 28\nProbability 100.00%" ];
	Node0x600003592670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{80:\l|  %81 = load ptr, ptr %23, align 8\l  %82 = load ptr, ptr %12, align 8\l  %83 = getelementptr inbounds %struct.gx_device_memory_s, ptr %82, i32 0, i32\l... 27\l  store ptr %81, ptr %83, align 8\l  ret i32 0\l}"];
}
