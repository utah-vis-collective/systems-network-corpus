digraph "CFG for 'gdev_pcl_map_color_rgb' function" {
	label="CFG for 'gdev_pcl_map_color_rgb' function";

	Node0x600001507bb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca i16, align 2\l  %8 = alloca i16, align 2\l  %9 = alloca i16, align 2\l  %10 = alloca i16, align 2\l  %11 = alloca i16, align 2\l  %12 = alloca i16, align 2\l  store ptr %0, ptr %4, align 8\l  store i64 %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %13 = load ptr, ptr %4, align 8\l  %14 = getelementptr inbounds %struct.gx_device_s, ptr %13, i32 0, i32 7\l  %15 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %14, i32 0,\l... i32 1\l  %16 = load i32, ptr %15, align 4\l  switch i32 %16, label %253 [\l    i32 1, label %17\l    i32 8, label %30\l    i32 16, label %84\l    i32 24, label %156\l    i32 32, label %200\l  ]\l|{<s0>def|<s1>1|<s2>8|<s3>16|<s4>24|<s5>32}}"];
	Node0x600001507bb0:s0 -> Node0x600001507e80[tooltip="3 -> 253\nProbability 16.67%" ];
	Node0x600001507bb0:s1 -> Node0x600001507c00[tooltip="3 -> 17\nProbability 16.67%" ];
	Node0x600001507bb0:s2 -> Node0x600001507c50[tooltip="3 -> 30\nProbability 16.67%" ];
	Node0x600001507bb0:s3 -> Node0x600001507d90[tooltip="3 -> 84\nProbability 16.67%" ];
	Node0x600001507bb0:s4 -> Node0x600001507de0[tooltip="3 -> 156\nProbability 16.67%" ];
	Node0x600001507bb0:s5 -> Node0x600001507e30[tooltip="3 -> 200\nProbability 16.67%" ];
	Node0x600001507c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{17:\l|  %18 = load i64, ptr %5, align 8\l  %19 = trunc i64 %18 to i16\l  %20 = zext i16 %19 to i32\l  %21 = xor i32 %20, 1\l  %22 = sub nsw i32 0, %21\l  %23 = trunc i32 %22 to i16\l  %24 = load ptr, ptr %6, align 8\l  %25 = getelementptr inbounds i16, ptr %24, i64 2\l  store i16 %23, ptr %25, align 2\l  %26 = load ptr, ptr %6, align 8\l  %27 = getelementptr inbounds i16, ptr %26, i64 1\l  store i16 %23, ptr %27, align 2\l  %28 = load ptr, ptr %6, align 8\l  %29 = getelementptr inbounds i16, ptr %28, i64 0\l  store i16 %23, ptr %29, align 2\l  br label %253\l}"];
	Node0x600001507c00 -> Node0x600001507e80[tooltip="17 -> 253\nProbability 100.00%" ];
	Node0x600001507c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{30:\l|  %31 = load ptr, ptr %4, align 8\l  %32 = getelementptr inbounds %struct.gx_device_s, ptr %31, i32 0, i32 7\l  %33 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %32, i32 0,\l... i32 0\l  %34 = load i32, ptr %33, align 8\l  %35 = icmp sge i32 %34, 3\l  br i1 %35, label %36, label %64\l|{<s0>T|<s1>F}}"];
	Node0x600001507c50:s0 -> Node0x600001507ca0[tooltip="30 -> 36\nProbability 50.00%" ];
	Node0x600001507c50:s1 -> Node0x600001507cf0[tooltip="30 -> 64\nProbability 50.00%" ];
	Node0x600001507ca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{36:\l|  %37 = load i64, ptr %5, align 8\l  %38 = trunc i64 %37 to i16\l  %39 = zext i16 %38 to i32\l  %40 = xor i32 %39, 7\l  %41 = trunc i32 %40 to i16\l  store i16 %41, ptr %7, align 2\l  %42 = load i16, ptr %7, align 2\l  %43 = zext i16 %42 to i32\l  %44 = and i32 %43, 1\l  %45 = sub nsw i32 0, %44\l  %46 = trunc i32 %45 to i16\l  %47 = load ptr, ptr %6, align 8\l  %48 = getelementptr inbounds i16, ptr %47, i64 0\l  store i16 %46, ptr %48, align 2\l  %49 = load i16, ptr %7, align 2\l  %50 = zext i16 %49 to i32\l  %51 = ashr i32 %50, 1\l  %52 = and i32 %51, 1\l  %53 = sub nsw i32 0, %52\l  %54 = trunc i32 %53 to i16\l  %55 = load ptr, ptr %6, align 8\l  %56 = getelementptr inbounds i16, ptr %55, i64 1\l  store i16 %54, ptr %56, align 2\l  %57 = load i16, ptr %7, align 2\l  %58 = zext i16 %57 to i32\l  %59 = ashr i32 %58, 2\l  %60 = sub nsw i32 0, %59\l  %61 = trunc i32 %60 to i16\l  %62 = load ptr, ptr %6, align 8\l  %63 = getelementptr inbounds i16, ptr %62, i64 2\l  store i16 %61, ptr %63, align 2\l  br label %83\l}"];
	Node0x600001507ca0 -> Node0x600001507d40[tooltip="36 -> 83\nProbability 100.00%" ];
	Node0x600001507cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{64:\l|  %65 = load i64, ptr %5, align 8\l  %66 = trunc i64 %65 to i16\l  %67 = zext i16 %66 to i32\l  %68 = xor i32 %67, 255\l  %69 = trunc i32 %68 to i16\l  store i16 %69, ptr %8, align 2\l  %70 = load i16, ptr %8, align 2\l  %71 = zext i16 %70 to i32\l  %72 = shl i32 %71, 8\l  %73 = load i16, ptr %8, align 2\l  %74 = zext i16 %73 to i32\l  %75 = add nsw i32 %72, %74\l  %76 = trunc i32 %75 to i16\l  %77 = load ptr, ptr %6, align 8\l  %78 = getelementptr inbounds i16, ptr %77, i64 2\l  store i16 %76, ptr %78, align 2\l  %79 = load ptr, ptr %6, align 8\l  %80 = getelementptr inbounds i16, ptr %79, i64 1\l  store i16 %76, ptr %80, align 2\l  %81 = load ptr, ptr %6, align 8\l  %82 = getelementptr inbounds i16, ptr %81, i64 0\l  store i16 %76, ptr %82, align 2\l  br label %83\l}"];
	Node0x600001507cf0 -> Node0x600001507d40[tooltip="64 -> 83\nProbability 100.00%" ];
	Node0x600001507d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{83:\l|  br label %253\l}"];
	Node0x600001507d40 -> Node0x600001507e80[tooltip="83 -> 253\nProbability 100.00%" ];
	Node0x600001507d90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{84:\l|  %85 = load i64, ptr %5, align 8\l  %86 = trunc i64 %85 to i16\l  %87 = zext i16 %86 to i32\l  %88 = xor i32 %87, 65535\l  %89 = trunc i32 %88 to i16\l  store i16 %89, ptr %9, align 2\l  %90 = load i16, ptr %9, align 2\l  %91 = zext i16 %90 to i32\l  %92 = ashr i32 %91, 11\l  %93 = trunc i32 %92 to i16\l  store i16 %93, ptr %10, align 2\l  %94 = load i16, ptr %10, align 2\l  %95 = zext i16 %94 to i32\l  %96 = shl i32 %95, 11\l  %97 = load i16, ptr %10, align 2\l  %98 = zext i16 %97 to i32\l  %99 = shl i32 %98, 6\l  %100 = add nsw i32 %96, %99\l  %101 = load i16, ptr %10, align 2\l  %102 = zext i16 %101 to i32\l  %103 = shl i32 %102, 1\l  %104 = add nsw i32 %100, %103\l  %105 = load i16, ptr %10, align 2\l  %106 = zext i16 %105 to i32\l  %107 = ashr i32 %106, 4\l  %108 = add nsw i32 %104, %107\l  %109 = ashr i32 %108, 0\l  %110 = trunc i32 %109 to i16\l  %111 = load ptr, ptr %6, align 8\l  %112 = getelementptr inbounds i16, ptr %111, i64 0\l  store i16 %110, ptr %112, align 2\l  %113 = load i16, ptr %9, align 2\l  %114 = zext i16 %113 to i32\l  %115 = ashr i32 %114, 6\l  %116 = and i32 %115, 63\l  %117 = trunc i32 %116 to i16\l  store i16 %117, ptr %10, align 2\l  %118 = load i16, ptr %10, align 2\l  %119 = zext i16 %118 to i32\l  %120 = shl i32 %119, 10\l  %121 = load i16, ptr %10, align 2\l  %122 = zext i16 %121 to i32\l  %123 = shl i32 %122, 4\l  %124 = add nsw i32 %120, %123\l  %125 = load i16, ptr %10, align 2\l  %126 = zext i16 %125 to i32\l  %127 = ashr i32 %126, 2\l  %128 = add nsw i32 %124, %127\l  %129 = ashr i32 %128, 0\l  %130 = trunc i32 %129 to i16\l  %131 = load ptr, ptr %6, align 8\l  %132 = getelementptr inbounds i16, ptr %131, i64 1\l  store i16 %130, ptr %132, align 2\l  %133 = load i16, ptr %9, align 2\l  %134 = zext i16 %133 to i32\l  %135 = and i32 %134, 31\l  %136 = trunc i32 %135 to i16\l  store i16 %136, ptr %10, align 2\l  %137 = load i16, ptr %10, align 2\l  %138 = zext i16 %137 to i32\l  %139 = shl i32 %138, 11\l  %140 = load i16, ptr %10, align 2\l  %141 = zext i16 %140 to i32\l  %142 = shl i32 %141, 6\l  %143 = add nsw i32 %139, %142\l  %144 = load i16, ptr %10, align 2\l  %145 = zext i16 %144 to i32\l  %146 = shl i32 %145, 1\l  %147 = add nsw i32 %143, %146\l  %148 = load i16, ptr %10, align 2\l  %149 = zext i16 %148 to i32\l  %150 = ashr i32 %149, 4\l  %151 = add nsw i32 %147, %150\l  %152 = ashr i32 %151, 0\l  %153 = trunc i32 %152 to i16\l  %154 = load ptr, ptr %6, align 8\l  %155 = getelementptr inbounds i16, ptr %154, i64 2\l  store i16 %153, ptr %155, align 2\l  br label %253\l}"];
	Node0x600001507d90 -> Node0x600001507e80[tooltip="84 -> 253\nProbability 100.00%" ];
	Node0x600001507de0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{156:\l|  %157 = load i64, ptr %5, align 8\l  %158 = trunc i64 %157 to i16\l  %159 = zext i16 %158 to i32\l  %160 = xor i32 %159, 16777215\l  %161 = trunc i32 %160 to i16\l  store i16 %161, ptr %11, align 2\l  %162 = load i16, ptr %11, align 2\l  %163 = zext i16 %162 to i32\l  %164 = ashr i32 %163, 16\l  %165 = shl i32 %164, 8\l  %166 = load i16, ptr %11, align 2\l  %167 = zext i16 %166 to i32\l  %168 = ashr i32 %167, 16\l  %169 = ashr i32 %168, 0\l  %170 = add nsw i32 %165, %169\l  %171 = trunc i32 %170 to i16\l  %172 = load ptr, ptr %6, align 8\l  %173 = getelementptr inbounds i16, ptr %172, i64 0\l  store i16 %171, ptr %173, align 2\l  %174 = load i16, ptr %11, align 2\l  %175 = zext i16 %174 to i32\l  %176 = ashr i32 %175, 8\l  %177 = and i32 %176, 255\l  %178 = shl i32 %177, 8\l  %179 = load i16, ptr %11, align 2\l  %180 = zext i16 %179 to i32\l  %181 = ashr i32 %180, 8\l  %182 = and i32 %181, 255\l  %183 = ashr i32 %182, 0\l  %184 = add nsw i32 %178, %183\l  %185 = trunc i32 %184 to i16\l  %186 = load ptr, ptr %6, align 8\l  %187 = getelementptr inbounds i16, ptr %186, i64 1\l  store i16 %185, ptr %187, align 2\l  %188 = load i16, ptr %11, align 2\l  %189 = zext i16 %188 to i32\l  %190 = and i32 %189, 255\l  %191 = shl i32 %190, 8\l  %192 = load i16, ptr %11, align 2\l  %193 = zext i16 %192 to i32\l  %194 = and i32 %193, 255\l  %195 = ashr i32 %194, 0\l  %196 = add nsw i32 %191, %195\l  %197 = trunc i32 %196 to i16\l  %198 = load ptr, ptr %6, align 8\l  %199 = getelementptr inbounds i16, ptr %198, i64 2\l  store i16 %197, ptr %199, align 2\l  br label %253\l}"];
	Node0x600001507de0 -> Node0x600001507e80[tooltip="156 -> 253\nProbability 100.00%" ];
	Node0x600001507e30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{200:\l|  %201 = load i64, ptr %5, align 8\l  %202 = lshr i64 %201, 24\l  %203 = shl i64 %202, 8\l  %204 = load i64, ptr %5, align 8\l  %205 = lshr i64 %204, 24\l  %206 = lshr i64 %205, 0\l  %207 = add i64 %203, %206\l  %208 = sub i64 65535, %207\l  %209 = trunc i64 %208 to i16\l  store i16 %209, ptr %12, align 2\l  %210 = load i16, ptr %12, align 2\l  %211 = zext i16 %210 to i64\l  %212 = load i64, ptr %5, align 8\l  %213 = lshr i64 %212, 16\l  %214 = and i64 %213, 255\l  %215 = shl i64 %214, 8\l  %216 = load i64, ptr %5, align 8\l  %217 = lshr i64 %216, 16\l  %218 = and i64 %217, 255\l  %219 = lshr i64 %218, 0\l  %220 = add i64 %215, %219\l  %221 = sub i64 %211, %220\l  %222 = trunc i64 %221 to i16\l  %223 = load ptr, ptr %6, align 8\l  %224 = getelementptr inbounds i16, ptr %223, i64 0\l  store i16 %222, ptr %224, align 2\l  %225 = load i16, ptr %12, align 2\l  %226 = zext i16 %225 to i64\l  %227 = load i64, ptr %5, align 8\l  %228 = lshr i64 %227, 8\l  %229 = and i64 %228, 255\l  %230 = shl i64 %229, 8\l  %231 = load i64, ptr %5, align 8\l  %232 = lshr i64 %231, 8\l  %233 = and i64 %232, 255\l  %234 = lshr i64 %233, 0\l  %235 = add i64 %230, %234\l  %236 = sub i64 %226, %235\l  %237 = trunc i64 %236 to i16\l  %238 = load ptr, ptr %6, align 8\l  %239 = getelementptr inbounds i16, ptr %238, i64 1\l  store i16 %237, ptr %239, align 2\l  %240 = load i16, ptr %12, align 2\l  %241 = zext i16 %240 to i64\l  %242 = load i64, ptr %5, align 8\l  %243 = and i64 %242, 255\l  %244 = shl i64 %243, 8\l  %245 = load i64, ptr %5, align 8\l  %246 = and i64 %245, 255\l  %247 = lshr i64 %246, 0\l  %248 = add i64 %244, %247\l  %249 = sub i64 %241, %248\l  %250 = trunc i64 %249 to i16\l  %251 = load ptr, ptr %6, align 8\l  %252 = getelementptr inbounds i16, ptr %251, i64 2\l  store i16 %250, ptr %252, align 2\l  br label %253\l}"];
	Node0x600001507e30 -> Node0x600001507e80[tooltip="200 -> 253\nProbability 100.00%" ];
	Node0x600001507e80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{253:\l|  ret i32 0\l}"];
}
