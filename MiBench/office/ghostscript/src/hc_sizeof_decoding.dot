digraph "CFG for 'hc_sizeof_decoding' function" {
	label="CFG for 'hc_sizeof_decoding' function";

	Node0x600000198af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  store ptr %0, ptr %3, align 8\l  store i32 %1, ptr %4, align 4\l  %9 = load i32, ptr %4, align 4\l  %10 = shl i32 1, %9\l  store i32 %10, ptr %5, align 4\l  store i32 0, ptr %6, align 4\l  store i32 -2, ptr %7, align 4\l  %11 = load i32, ptr %4, align 4\l  %12 = add nsw i32 %11, 1\l  store i32 %12, ptr %8, align 4\l  br label %13\l}"];
	Node0x600000198af0 -> Node0x600000198e60[tooltip="2 -> 13\nProbability 100.00%" ];
	Node0x600000198e60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{13:\l|  %14 = load i32, ptr %8, align 4\l  %15 = load ptr, ptr %3, align 8\l  %16 = getelementptr inbounds %struct.hc_definition_s, ptr %15, i32 0, i32 1\l  %17 = load i32, ptr %16, align 8\l  %18 = icmp ule i32 %14, %17\l  br i1 %18, label %19, label %46\l|{<s0>T|<s1>F}}"];
	Node0x600000198e60:s0 -> Node0x600000198eb0[tooltip="13 -> 19\nProbability 96.88%" ];
	Node0x600000198e60:s1 -> Node0x600000198f50[tooltip="13 -> 46\nProbability 3.12%" ];
	Node0x600000198eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{19:\l|  %20 = load ptr, ptr %3, align 8\l  %21 = getelementptr inbounds %struct.hc_definition_s, ptr %20, i32 0, i32 0\l  %22 = load ptr, ptr %21, align 8\l  %23 = load i32, ptr %8, align 4\l  %24 = zext i32 %23 to i64\l  %25 = getelementptr inbounds i16, ptr %22, i64 %24\l  %26 = load i16, ptr %25, align 2\l  %27 = zext i16 %26 to i32\l  %28 = load i32, ptr %6, align 4\l  %29 = add i32 %28, %27\l  store i32 %29, ptr %6, align 4\l  %30 = load i32, ptr %6, align 4\l  %31 = load i32, ptr %7, align 4\l  %32 = and i32 %30, %31\l  %33 = load i32, ptr %5, align 4\l  %34 = add i32 %33, %32\l  store i32 %34, ptr %5, align 4\l  %35 = load i32, ptr %7, align 4\l  %36 = xor i32 %35, -1\l  %37 = load i32, ptr %6, align 4\l  %38 = and i32 %37, %36\l  store i32 %38, ptr %6, align 4\l  br label %39\l}"];
	Node0x600000198eb0 -> Node0x600000198f00[tooltip="19 -> 39\nProbability 100.00%" ];
	Node0x600000198f00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{39:\l|  %40 = load i32, ptr %8, align 4\l  %41 = add i32 %40, 1\l  store i32 %41, ptr %8, align 4\l  %42 = load i32, ptr %6, align 4\l  %43 = shl i32 %42, 1\l  store i32 %43, ptr %6, align 4\l  %44 = load i32, ptr %7, align 4\l  %45 = shl i32 %44, 1\l  store i32 %45, ptr %7, align 4\l  br label %13\l}"];
	Node0x600000198f00 -> Node0x600000198e60[tooltip="39 -> 13\nProbability 100.00%" ];
	Node0x600000198f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{46:\l|  %47 = load i32, ptr %5, align 4\l  ret i32 %47\l}"];
}
