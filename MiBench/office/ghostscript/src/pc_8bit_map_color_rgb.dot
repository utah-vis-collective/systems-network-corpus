digraph "CFG for 'pc_8bit_map_color_rgb' function" {
	label="CFG for 'pc_8bit_map_color_rgb' function";

	Node0x600000ae67b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca ptr, align 8\l  store ptr %0, ptr %4, align 8\l  store i64 %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %7 = load i64, ptr %5, align 8\l  %8 = trunc i64 %7 to i32\l  %9 = icmp uge i32 %8, 249\l  br i1 %9, label %10, label %23\l|{<s0>T|<s1>F}}"];
	Node0x600000ae67b0:s0 -> Node0x600000ae6800[tooltip="3 -> 10\nProbability 50.00%" ];
	Node0x600000ae67b0:s1 -> Node0x600000ae6850[tooltip="3 -> 23\nProbability 50.00%" ];
	Node0x600000ae6800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{10:\l|  %11 = load i64, ptr %5, align 8\l  %12 = trunc i64 %11 to i32\l  %13 = sub i32 %12, 249\l  %14 = zext i32 %13 to i64\l  %15 = getelementptr inbounds [8 x i16], ptr @pc_8bit_map_color_rgb.ramp7,\l... i64 0, i64 %14\l  %16 = load i16, ptr %15, align 2\l  %17 = load ptr, ptr %6, align 8\l  %18 = getelementptr inbounds i16, ptr %17, i64 2\l  store i16 %16, ptr %18, align 2\l  %19 = load ptr, ptr %6, align 8\l  %20 = getelementptr inbounds i16, ptr %19, i64 1\l  store i16 %16, ptr %20, align 2\l  %21 = load ptr, ptr %6, align 8\l  %22 = getelementptr inbounds i16, ptr %21, i64 0\l  store i16 %16, ptr %22, align 2\l  br label %49\l}"];
	Node0x600000ae6800 -> Node0x600000ae68a0[tooltip="10 -> 49\nProbability 100.00%" ];
	Node0x600000ae6850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{23:\l|  %24 = load i64, ptr %5, align 8\l  %25 = trunc i64 %24 to i32\l  %26 = udiv i32 %25, 35\l  %27 = zext i32 %26 to i64\l  %28 = getelementptr inbounds [8 x i16], ptr @pc_8bit_map_color_rgb.ramp7,\l... i64 0, i64 %27\l  %29 = load i16, ptr %28, align 2\l  %30 = load ptr, ptr %6, align 8\l  %31 = getelementptr inbounds i16, ptr %30, i64 0\l  store i16 %29, ptr %31, align 2\l  %32 = load i64, ptr %5, align 8\l  %33 = trunc i64 %32 to i32\l  %34 = udiv i32 %33, 5\l  %35 = urem i32 %34, 7\l  %36 = zext i32 %35 to i64\l  %37 = getelementptr inbounds [8 x i16], ptr @pc_8bit_map_color_rgb.ramp7,\l... i64 0, i64 %36\l  %38 = load i16, ptr %37, align 2\l  %39 = load ptr, ptr %6, align 8\l  %40 = getelementptr inbounds i16, ptr %39, i64 1\l  store i16 %38, ptr %40, align 2\l  %41 = load i64, ptr %5, align 8\l  %42 = trunc i64 %41 to i32\l  %43 = urem i32 %42, 5\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds [5 x i16], ptr @pc_8bit_map_color_rgb.ramp5,\l... i64 0, i64 %44\l  %46 = load i16, ptr %45, align 2\l  %47 = load ptr, ptr %6, align 8\l  %48 = getelementptr inbounds i16, ptr %47, i64 2\l  store i16 %46, ptr %48, align 2\l  br label %49\l}"];
	Node0x600000ae6850 -> Node0x600000ae68a0[tooltip="23 -> 49\nProbability 100.00%" ];
	Node0x600000ae68a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{49:\l|  ret i32 0\l}"];
}
