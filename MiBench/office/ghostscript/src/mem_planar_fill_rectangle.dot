digraph "CFG for 'mem_planar_fill_rectangle' function" {
	label="CFG for 'mem_planar_fill_rectangle' function";

	Node0x6000035921c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{6:\l|  %7 = alloca ptr, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i64, align 8\l  %13 = alloca ptr, align 8\l  %14 = alloca i32, align 4\l  store ptr %0, ptr %7, align 8\l  store i32 %1, ptr %8, align 4\l  store i32 %2, ptr %9, align 4\l  store i32 %3, ptr %10, align 4\l  store i32 %4, ptr %11, align 4\l  store i64 %5, ptr %12, align 8\l  %15 = load ptr, ptr %7, align 8\l  %16 = getelementptr inbounds %struct.gx_device_memory_s, ptr %15, i32 0, i32\l... 27\l  %17 = load ptr, ptr %16, align 8\l  store ptr %17, ptr %13, align 8\l  store i32 0, ptr %14, align 4\l  br label %18\l}"];
	Node0x6000035921c0 -> Node0x600003592210[tooltip="6 -> 18\nProbability 100.00%" ];
	Node0x600003592210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{18:\l|  %19 = load i32, ptr %14, align 4\l  %20 = load ptr, ptr %7, align 8\l  %21 = getelementptr inbounds %struct.gx_device_s, ptr %20, i32 0, i32 7\l  %22 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %21, i32 0,\l... i32 1\l  %23 = load i32, ptr %22, align 4\l  %24 = icmp slt i32 %19, %23\l  br i1 %24, label %25, label %49\l|{<s0>T|<s1>F}}"];
	Node0x600003592210:s0 -> Node0x600003592260[tooltip="18 -> 25\nProbability 96.88%" ];
	Node0x600003592210:s1 -> Node0x600003592300[tooltip="18 -> 49\nProbability 3.12%" ];
	Node0x600003592260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{25:\l|  %26 = load ptr, ptr getelementptr inbounds (%struct.gx_device_procs_s, ptr\l... getelementptr inbounds (%struct.gx_device_memory_s, ptr @mem_mono_device, i32\l... 0, i32 21), i32 0, i32 7), align 8\l  %27 = load ptr, ptr %7, align 8\l  %28 = load i32, ptr %8, align 4\l  %29 = load i32, ptr %9, align 4\l  %30 = load i32, ptr %10, align 4\l  %31 = load i32, ptr %11, align 4\l  %32 = load i64, ptr %12, align 8\l  %33 = load i32, ptr %14, align 4\l  %34 = zext i32 %33 to i64\l  %35 = lshr i64 %32, %34\l  %36 = and i64 %35, 1\l  %37 = call i32 %26(ptr noundef %27, i32 noundef %28, i32 noundef %29, i32\l... noundef %30, i32 noundef %31, i64 noundef %36)\l  br label %38\l}"];
	Node0x600003592260 -> Node0x6000035922b0[tooltip="25 -> 38\nProbability 100.00%" ];
	Node0x6000035922b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{38:\l|  %39 = load i32, ptr %14, align 4\l  %40 = add nsw i32 %39, 1\l  store i32 %40, ptr %14, align 4\l  %41 = load ptr, ptr %7, align 8\l  %42 = getelementptr inbounds %struct.gx_device_s, ptr %41, i32 0, i32 9\l  %43 = load i32, ptr %42, align 4\l  %44 = load ptr, ptr %7, align 8\l  %45 = getelementptr inbounds %struct.gx_device_memory_s, ptr %44, i32 0, i32\l... 27\l  %46 = load ptr, ptr %45, align 8\l  %47 = sext i32 %43 to i64\l  %48 = getelementptr inbounds ptr, ptr %46, i64 %47\l  store ptr %48, ptr %45, align 8\l  br label %18\l}"];
	Node0x6000035922b0 -> Node0x600003592210[tooltip="38 -> 18\nProbability 100.00%" ];
	Node0x600003592300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{49:\l|  %50 = load ptr, ptr %13, align 8\l  %51 = load ptr, ptr %7, align 8\l  %52 = getelementptr inbounds %struct.gx_device_memory_s, ptr %51, i32 0, i32\l... 27\l  store ptr %50, ptr %52, align 8\l  ret i32 0\l}"];
}
