digraph "CFG for 'rop_texture_copy_color' function" {
	label="CFG for 'rop_texture_copy_color' function";

	Node0x600001f05090 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{9:\l|  %10 = alloca ptr, align 8\l  %11 = alloca ptr, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i64, align 8\l  %15 = alloca i32, align 4\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca %struct.gx_rop_source_s, align 8\l  store ptr %0, ptr %10, align 8\l  store ptr %1, ptr %11, align 8\l  store i32 %2, ptr %12, align 4\l  store i32 %3, ptr %13, align 4\l  store i64 %4, ptr %14, align 8\l  store i32 %5, ptr %15, align 4\l  store i32 %6, ptr %16, align 4\l  store i32 %7, ptr %17, align 4\l  store i32 %8, ptr %18, align 4\l  %20 = load ptr, ptr %11, align 8\l  %21 = getelementptr inbounds %struct.gx_rop_source_s, ptr %19, i32 0, i32 0\l  store ptr %20, ptr %21, align 8\l  %22 = load i32, ptr %12, align 4\l  %23 = getelementptr inbounds %struct.gx_rop_source_s, ptr %19, i32 0, i32 1\l  store i32 %22, ptr %23, align 8\l  %24 = load i32, ptr %13, align 4\l  %25 = getelementptr inbounds %struct.gx_rop_source_s, ptr %19, i32 0, i32 2\l  store i32 %24, ptr %25, align 4\l  %26 = load i64, ptr %14, align 8\l  %27 = getelementptr inbounds %struct.gx_rop_source_s, ptr %19, i32 0, i32 3\l  store i64 %26, ptr %27, align 8\l  %28 = getelementptr inbounds %struct.gx_rop_source_s, ptr %19, i32 0, i32 4\l  %29 = getelementptr inbounds [2 x i64], ptr %28, i64 0, i64 1\l  store i64 -1, ptr %29, align 8\l  %30 = getelementptr inbounds %struct.gx_rop_source_s, ptr %19, i32 0, i32 4\l  %31 = getelementptr inbounds [2 x i64], ptr %30, i64 0, i64 0\l  store i64 -1, ptr %31, align 8\l  %32 = getelementptr inbounds %struct.gx_rop_source_s, ptr %19, i32 0, i32 5\l  store i32 1, ptr %32, align 8\l  %33 = load ptr, ptr %10, align 8\l  %34 = getelementptr inbounds %struct.gx_device_rop_texture_s, ptr %33, i32\l... 0, i32 24\l  %35 = load ptr, ptr %34, align 8\l  %36 = getelementptr inbounds %struct.gx_device_color_s, ptr %35, i32 0, i32 0\l  %37 = load ptr, ptr %36, align 8\l  %38 = getelementptr inbounds %struct.gx_device_color_procs_s, ptr %37, i32\l... 0, i32 1\l  %39 = load ptr, ptr %38, align 8\l  %40 = load ptr, ptr %10, align 8\l  %41 = getelementptr inbounds %struct.gx_device_rop_texture_s, ptr %40, i32\l... 0, i32 24\l  %42 = load ptr, ptr %41, align 8\l  %43 = load i32, ptr %15, align 4\l  %44 = load i32, ptr %16, align 4\l  %45 = load i32, ptr %17, align 4\l  %46 = load i32, ptr %18, align 4\l  %47 = load ptr, ptr %10, align 8\l  %48 = getelementptr inbounds %struct.gx_device_rop_texture_s, ptr %47, i32\l... 0, i32 22\l  %49 = load ptr, ptr %48, align 8\l  %50 = load ptr, ptr %10, align 8\l  %51 = getelementptr inbounds %struct.gx_device_rop_texture_s, ptr %50, i32\l... 0, i32 23\l  %52 = load i32, ptr %51, align 8\l  %53 = call i32 %39(ptr noundef %42, i32 noundef %43, i32 noundef %44, i32\l... noundef %45, i32 noundef %46, ptr noundef %49, i32 noundef %52, ptr noundef\l... %19)\l  ret i32 %53\l}"];
}
