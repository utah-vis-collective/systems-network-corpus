digraph "CFG for 'mem_true16_map_color_rgb' function" {
	label="CFG for 'mem_true16_map_color_rgb' function";

	Node0x600002e1a120 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca ptr, align 8\l  %7 = alloca i16, align 2\l  store ptr %0, ptr %4, align 8\l  store i64 %1, ptr %5, align 8\l  store ptr %2, ptr %6, align 8\l  %8 = load i64, ptr %5, align 8\l  %9 = lshr i64 %8, 11\l  %10 = trunc i64 %9 to i16\l  store i16 %10, ptr %7, align 2\l  %11 = load i16, ptr %7, align 2\l  %12 = zext i16 %11 to i32\l  %13 = shl i32 %12, 11\l  %14 = load i16, ptr %7, align 2\l  %15 = zext i16 %14 to i32\l  %16 = shl i32 %15, 6\l  %17 = add nsw i32 %13, %16\l  %18 = load i16, ptr %7, align 2\l  %19 = zext i16 %18 to i32\l  %20 = shl i32 %19, 1\l  %21 = add nsw i32 %17, %20\l  %22 = load i16, ptr %7, align 2\l  %23 = zext i16 %22 to i32\l  %24 = ashr i32 %23, 4\l  %25 = add nsw i32 %21, %24\l  %26 = ashr i32 %25, 0\l  %27 = trunc i32 %26 to i16\l  %28 = load ptr, ptr %6, align 8\l  %29 = getelementptr inbounds i16, ptr %28, i64 0\l  store i16 %27, ptr %29, align 2\l  %30 = load i64, ptr %5, align 8\l  %31 = lshr i64 %30, 6\l  %32 = and i64 %31, 127\l  %33 = trunc i64 %32 to i16\l  store i16 %33, ptr %7, align 2\l  %34 = load i16, ptr %7, align 2\l  %35 = zext i16 %34 to i32\l  %36 = shl i32 %35, 10\l  %37 = load i16, ptr %7, align 2\l  %38 = zext i16 %37 to i32\l  %39 = shl i32 %38, 4\l  %40 = add nsw i32 %36, %39\l  %41 = load i16, ptr %7, align 2\l  %42 = zext i16 %41 to i32\l  %43 = ashr i32 %42, 2\l  %44 = add nsw i32 %40, %43\l  %45 = ashr i32 %44, 0\l  %46 = trunc i32 %45 to i16\l  %47 = load ptr, ptr %6, align 8\l  %48 = getelementptr inbounds i16, ptr %47, i64 1\l  store i16 %46, ptr %48, align 2\l  %49 = load i64, ptr %5, align 8\l  %50 = and i64 %49, 63\l  %51 = trunc i64 %50 to i16\l  store i16 %51, ptr %7, align 2\l  %52 = load i16, ptr %7, align 2\l  %53 = zext i16 %52 to i32\l  %54 = shl i32 %53, 11\l  %55 = load i16, ptr %7, align 2\l  %56 = zext i16 %55 to i32\l  %57 = shl i32 %56, 6\l  %58 = add nsw i32 %54, %57\l  %59 = load i16, ptr %7, align 2\l  %60 = zext i16 %59 to i32\l  %61 = shl i32 %60, 1\l  %62 = add nsw i32 %58, %61\l  %63 = load i16, ptr %7, align 2\l  %64 = zext i16 %63 to i32\l  %65 = ashr i32 %64, 4\l  %66 = add nsw i32 %62, %65\l  %67 = ashr i32 %66, 0\l  %68 = trunc i32 %67 to i16\l  %69 = load ptr, ptr %6, align 8\l  %70 = getelementptr inbounds i16, ptr %69, i64 2\l  store i16 %68, ptr %70, align 2\l  ret i32 0\l}"];
}
