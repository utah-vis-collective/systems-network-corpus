digraph "CFG for 'gx_stroke_fill' function" {
	label="CFG for 'gx_stroke_fill' function";

	Node0x6000023e1fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca %struct.gx_stroke_params_s, align 4\l  store ptr %0, ptr %3, align 8\l  store ptr %1, ptr %4, align 8\l  %7 = load ptr, ptr %4, align 8\l  %8 = getelementptr inbounds %struct.gs_state_s, ptr %7, i32 0, i32 43\l  %9 = load ptr, ptr %8, align 8\l  store ptr %9, ptr %5, align 8\l  %10 = load ptr, ptr %4, align 8\l  %11 = getelementptr inbounds %struct.gs_state_s, ptr %10, i32 0, i32 39\l  %12 = load i8, ptr %11, align 4\l  %13 = zext i8 %12 to i32\l  %14 = icmp sgt i32 %13, 1\l  br i1 %14, label %15, label %16\l|{<s0>T|<s1>F}}"];
	Node0x6000023e1fe0:s0 -> Node0x6000023e2030[tooltip="2 -> 15\nProbability 50.00%" ];
	Node0x6000023e1fe0:s1 -> Node0x6000023e2080[tooltip="2 -> 16\nProbability 50.00%" ];
	Node0x6000023e2030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{15:\l|  br label %21\l}"];
	Node0x6000023e2030 -> Node0x6000023e20d0[tooltip="15 -> 21\nProbability 100.00%" ];
	Node0x6000023e2080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{16:\l|  %17 = load ptr, ptr %4, align 8\l  %18 = getelementptr inbounds %struct.gs_state_s, ptr %17, i32 0, i32 6\l  %19 = load float, ptr %18, align 4\l  %20 = fpext float %19 to double\l  br label %21\l}"];
	Node0x6000023e2080 -> Node0x6000023e20d0[tooltip="16 -> 21\nProbability 100.00%" ];
	Node0x6000023e20d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{21:\l|  %22 = phi double [ 0.000000e+00, %15 ], [ %20, %16 ]\l  %23 = fptrunc double %22 to float\l  %24 = getelementptr inbounds %struct.gx_stroke_params_s, ptr %6, i32 0, i32 0\l  store float %23, ptr %24, align 4\l  %25 = load ptr, ptr %5, align 8\l  %26 = getelementptr inbounds %struct.gx_device_s, ptr %25, i32 0, i32 21\l  %27 = getelementptr inbounds %struct.gx_device_procs_s, ptr %26, i32 0, i32\l... 25\l  %28 = load ptr, ptr %27, align 8\l  %29 = load ptr, ptr %5, align 8\l  %30 = load ptr, ptr %4, align 8\l  %31 = load ptr, ptr %3, align 8\l  %32 = load ptr, ptr %4, align 8\l  %33 = getelementptr inbounds %struct.gs_state_s, ptr %32, i32 0, i32 34\l  %34 = load ptr, ptr %33, align 8\l  %35 = load ptr, ptr %4, align 8\l  %36 = getelementptr inbounds %struct.gs_state_s, ptr %35, i32 0, i32 29\l  %37 = load ptr, ptr %36, align 8\l  %38 = call i32 %28(ptr noundef %29, ptr noundef %30, ptr noundef %31, ptr\l... noundef %6, ptr noundef %34, ptr noundef %37)\l  ret i32 %38\l}"];
}
