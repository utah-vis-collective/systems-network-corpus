digraph "CFG for 'png_handle_tEXt' function" {
	label="CFG for 'png_handle_tEXt' function";

	Node0x600001f7dc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{3:\l|  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca ptr, align 8\l  %8 = alloca ptr, align 8\l  store ptr %0, ptr %4, align 8\l  store ptr %1, ptr %5, align 8\l  store i64 %2, ptr %6, align 8\l  %9 = load ptr, ptr %4, align 8\l  %10 = getelementptr inbounds %struct.png_struct_def, ptr %9, i32 0, i32 7\l  %11 = load i8, ptr %10, align 8\l  %12 = zext i8 %11 to i32\l  %13 = and i32 %12, 1\l  %14 = icmp ne i32 %13, 0\l  br i1 %14, label %17, label %15\l|{<s0>T|<s1>F}}"];
	Node0x600001f7dc70:s0 -> Node0x600001f7dd10[tooltip="3 -> 17\nProbability 50.00%" ];
	Node0x600001f7dc70:s1 -> Node0x600001f7dcc0[tooltip="3 -> 15\nProbability 50.00%" ];
	Node0x600001f7dcc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{15:\l|  %16 = load ptr, ptr %4, align 8\l  call void @png_error(ptr noundef %16, ptr noundef @.str.37)\l  br label %17\l}"];
	Node0x600001f7dcc0 -> Node0x600001f7dd10[tooltip="15 -> 17\nProbability 100.00%" ];
	Node0x600001f7dd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{17:\l|  %18 = load ptr, ptr %4, align 8\l  %19 = load i64, ptr %6, align 8\l  %20 = add i64 %19, 1\l  %21 = call ptr @png_large_malloc(ptr noundef %18, i64 noundef %20)\l  store ptr %21, ptr %7, align 8\l  %22 = load ptr, ptr %4, align 8\l  %23 = load ptr, ptr %7, align 8\l  %24 = load i64, ptr %6, align 8\l  call void @png_crc_read(ptr noundef %22, ptr noundef %23, i64 noundef %24)\l  %25 = load ptr, ptr %7, align 8\l  %26 = load i64, ptr %6, align 8\l  %27 = getelementptr inbounds i8, ptr %25, i64 %26\l  store i8 0, ptr %27, align 1\l  %28 = load ptr, ptr %7, align 8\l  store ptr %28, ptr %8, align 8\l  br label %29\l}"];
	Node0x600001f7dd10 -> Node0x600001f7dd60[tooltip="17 -> 29\nProbability 100.00%" ];
	Node0x600001f7dd60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{29:\l|  %30 = load ptr, ptr %8, align 8\l  %31 = load i8, ptr %30, align 1\l  %32 = icmp ne i8 %31, 0\l  br i1 %32, label %33, label %37\l|{<s0>T|<s1>F}}"];
	Node0x600001f7dd60:s0 -> Node0x600001f7ddb0[tooltip="29 -> 33\nProbability 96.88%" ];
	Node0x600001f7dd60:s1 -> Node0x600001f7de50[tooltip="29 -> 37\nProbability 3.12%" ];
	Node0x600001f7ddb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{33:\l|  br label %34\l}"];
	Node0x600001f7ddb0 -> Node0x600001f7de00[tooltip="33 -> 34\nProbability 100.00%" ];
	Node0x600001f7de00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{34:\l|  %35 = load ptr, ptr %8, align 8\l  %36 = getelementptr inbounds i8, ptr %35, i32 1\l  store ptr %36, ptr %8, align 8\l  br label %29\l}"];
	Node0x600001f7de00 -> Node0x600001f7dd60[tooltip="34 -> 29\nProbability 100.00%" ];
	Node0x600001f7de50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{37:\l|  %38 = load ptr, ptr %8, align 8\l  %39 = load ptr, ptr %7, align 8\l  %40 = load i64, ptr %6, align 8\l  %41 = getelementptr inbounds i8, ptr %39, i64 %40\l  %42 = icmp ne ptr %38, %41\l  br i1 %42, label %43, label %46\l|{<s0>T|<s1>F}}"];
	Node0x600001f7de50:s0 -> Node0x600001f7dea0[tooltip="37 -> 43\nProbability 62.50%" ];
	Node0x600001f7de50:s1 -> Node0x600001f7def0[tooltip="37 -> 46\nProbability 37.50%" ];
	Node0x600001f7dea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670" fontname="Courier",label="{43:\l|  %44 = load ptr, ptr %8, align 8\l  %45 = getelementptr inbounds i8, ptr %44, i32 1\l  store ptr %45, ptr %8, align 8\l  br label %46\l}"];
	Node0x600001f7dea0 -> Node0x600001f7def0[tooltip="43 -> 46\nProbability 100.00%" ];
	Node0x600001f7def0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{46:\l|  %47 = load ptr, ptr %4, align 8\l  %48 = load ptr, ptr %5, align 8\l  %49 = load ptr, ptr %7, align 8\l  %50 = load ptr, ptr %8, align 8\l  %51 = load i64, ptr %6, align 8\l  %52 = load ptr, ptr %8, align 8\l  %53 = load ptr, ptr %7, align 8\l  %54 = ptrtoint ptr %52 to i64\l  %55 = ptrtoint ptr %53 to i64\l  %56 = sub i64 %54, %55\l  %57 = sub i64 %51, %56\l  call void @png_read_tEXt(ptr noundef %47, ptr noundef %48, ptr noundef %49,\l... ptr noundef %50, i64 noundef %57)\l  ret void\l}"];
}
