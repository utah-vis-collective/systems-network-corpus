digraph "CFG for 'write_os2_header' function" {
	label="CFG for 'write_os2_header' function";

	Node0x60000123f160 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{2:\l|  %3 = alloca ptr, align 8\l  %4 = alloca ptr, align 8\l  %5 = alloca [14 x i8], align 1\l  %6 = alloca [12 x i8], align 1\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  store ptr %0, ptr %3, align 8\l  store ptr %1, ptr %4, align 8\l  %11 = load ptr, ptr %3, align 8\l  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %11, i32 0,\l... i32 10\l  %13 = load i32, ptr %12, align 8\l  %14 = icmp eq i32 %13, 2\l  br i1 %14, label %15, label %23\l|{<s0>T|<s1>F}}"];
	Node0x60000123f160:s0 -> Node0x60000123f1b0[tooltip="2 -> 15\nProbability 50.00%" ];
	Node0x60000123f160:s1 -> Node0x60000123f2f0[tooltip="2 -> 23\nProbability 50.00%" ];
	Node0x60000123f1b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{15:\l|  %16 = load ptr, ptr %3, align 8\l  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %16, i32 0,\l... i32 19\l  %18 = load i32, ptr %17, align 4\l  %19 = icmp ne i32 %18, 0\l  br i1 %19, label %20, label %21\l|{<s0>T|<s1>F}}"];
	Node0x60000123f1b0:s0 -> Node0x60000123f200[tooltip="15 -> 20\nProbability 62.50%" ];
	Node0x60000123f1b0:s1 -> Node0x60000123f250[tooltip="15 -> 21\nProbability 37.50%" ];
	Node0x60000123f200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{20:\l|  store i32 8, ptr %9, align 4\l  store i32 256, ptr %10, align 4\l  br label %22\l}"];
	Node0x60000123f200 -> Node0x60000123f2a0[tooltip="20 -> 22\nProbability 100.00%" ];
	Node0x60000123f250 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{21:\l|  store i32 24, ptr %9, align 4\l  store i32 0, ptr %10, align 4\l  br label %22\l}"];
	Node0x60000123f250 -> Node0x60000123f2a0[tooltip="21 -> 22\nProbability 100.00%" ];
	Node0x60000123f2a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{22:\l|  br label %24\l}"];
	Node0x60000123f2a0 -> Node0x60000123f340[tooltip="22 -> 24\nProbability 100.00%" ];
	Node0x60000123f2f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{23:\l|  store i32 8, ptr %9, align 4\l  store i32 256, ptr %10, align 4\l  br label %24\l}"];
	Node0x60000123f2f0 -> Node0x60000123f340[tooltip="23 -> 24\nProbability 100.00%" ];
	Node0x60000123f340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{24:\l|  %25 = load i32, ptr %10, align 4\l  %26 = mul nsw i32 %25, 3\l  %27 = add nsw i32 26, %26\l  %28 = sext i32 %27 to i64\l  store i64 %28, ptr %7, align 8\l  %29 = load i64, ptr %7, align 8\l  %30 = load ptr, ptr %4, align 8\l  %31 = getelementptr inbounds %struct.bmp_dest_struct, ptr %30, i32 0, i32 4\l  %32 = load i32, ptr %31, align 4\l  %33 = zext i32 %32 to i64\l  %34 = load ptr, ptr %3, align 8\l  %35 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %34, i32 0,\l... i32 27\l  %36 = load i32, ptr %35, align 4\l  %37 = zext i32 %36 to i64\l  %38 = mul nsw i64 %33, %37\l  %39 = add nsw i64 %29, %38\l  store i64 %39, ptr %8, align 8\l  %40 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 0\l  call void @llvm.memset.p0.i64(ptr align 1 %40, i8 0, i64 14, i1 false)\l  %41 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 0\l  call void @llvm.memset.p0.i64(ptr align 1 %41, i8 0, i64 12, i1 false)\l  %42 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 0\l  store i8 66, ptr %42, align 1\l  %43 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 1\l  store i8 77, ptr %43, align 1\l  %44 = load i64, ptr %8, align 8\l  %45 = and i64 %44, 255\l  %46 = trunc i64 %45 to i8\l  %47 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 2\l  store i8 %46, ptr %47, align 1\l  %48 = load i64, ptr %8, align 8\l  %49 = ashr i64 %48, 8\l  %50 = and i64 %49, 255\l  %51 = trunc i64 %50 to i8\l  %52 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 3\l  store i8 %51, ptr %52, align 1\l  %53 = load i64, ptr %8, align 8\l  %54 = ashr i64 %53, 16\l  %55 = and i64 %54, 255\l  %56 = trunc i64 %55 to i8\l  %57 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 4\l  store i8 %56, ptr %57, align 1\l  %58 = load i64, ptr %8, align 8\l  %59 = ashr i64 %58, 24\l  %60 = and i64 %59, 255\l  %61 = trunc i64 %60 to i8\l  %62 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 5\l  store i8 %61, ptr %62, align 1\l  %63 = load i64, ptr %7, align 8\l  %64 = and i64 %63, 255\l  %65 = trunc i64 %64 to i8\l  %66 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 10\l  store i8 %65, ptr %66, align 1\l  %67 = load i64, ptr %7, align 8\l  %68 = ashr i64 %67, 8\l  %69 = and i64 %68, 255\l  %70 = trunc i64 %69 to i8\l  %71 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 11\l  store i8 %70, ptr %71, align 1\l  %72 = load i64, ptr %7, align 8\l  %73 = ashr i64 %72, 16\l  %74 = and i64 %73, 255\l  %75 = trunc i64 %74 to i8\l  %76 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 12\l  store i8 %75, ptr %76, align 1\l  %77 = load i64, ptr %7, align 8\l  %78 = ashr i64 %77, 24\l  %79 = and i64 %78, 255\l  %80 = trunc i64 %79 to i8\l  %81 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 13\l  store i8 %80, ptr %81, align 1\l  %82 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 0\l  store i8 12, ptr %82, align 1\l  %83 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 1\l  store i8 0, ptr %83, align 1\l  %84 = load ptr, ptr %3, align 8\l  %85 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %84, i32 0,\l... i32 26\l  %86 = load i32, ptr %85, align 8\l  %87 = and i32 %86, 255\l  %88 = trunc i32 %87 to i8\l  %89 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 4\l  store i8 %88, ptr %89, align 1\l  %90 = load ptr, ptr %3, align 8\l  %91 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %90, i32 0,\l... i32 26\l  %92 = load i32, ptr %91, align 8\l  %93 = lshr i32 %92, 8\l  %94 = and i32 %93, 255\l  %95 = trunc i32 %94 to i8\l  %96 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 5\l  store i8 %95, ptr %96, align 1\l  %97 = load ptr, ptr %3, align 8\l  %98 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %97, i32 0,\l... i32 27\l  %99 = load i32, ptr %98, align 4\l  %100 = and i32 %99, 255\l  %101 = trunc i32 %100 to i8\l  %102 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 6\l  store i8 %101, ptr %102, align 1\l  %103 = load ptr, ptr %3, align 8\l  %104 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %103, i32\l... 0, i32 27\l  %105 = load i32, ptr %104, align 4\l  %106 = lshr i32 %105, 8\l  %107 = and i32 %106, 255\l  %108 = trunc i32 %107 to i8\l  %109 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 7\l  store i8 %108, ptr %109, align 1\l  %110 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 8\l  store i8 1, ptr %110, align 1\l  %111 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 9\l  store i8 0, ptr %111, align 1\l  %112 = load i32, ptr %9, align 4\l  %113 = and i32 %112, 255\l  %114 = trunc i32 %113 to i8\l  %115 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 10\l  store i8 %114, ptr %115, align 1\l  %116 = load i32, ptr %9, align 4\l  %117 = ashr i32 %116, 8\l  %118 = and i32 %117, 255\l  %119 = trunc i32 %118 to i8\l  %120 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 11\l  store i8 %119, ptr %120, align 1\l  %121 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 0\l  %122 = load ptr, ptr %4, align 8\l  %123 = getelementptr inbounds %struct.bmp_dest_struct, ptr %122, i32 0, i32 0\l  %124 = getelementptr inbounds %struct.djpeg_dest_struct, ptr %123, i32 0,\l... i32 3\l  %125 = load ptr, ptr %124, align 8\l  %126 = call i64 @\"\\01_fwrite\"(ptr noundef %121, i64 noundef 1, i64 noundef\l... 14, ptr noundef %125)\l  %127 = icmp ne i64 %126, 14\l  br i1 %127, label %128, label %139\l|{<s0>T|<s1>F}}"];
	Node0x60000123f340:s0 -> Node0x60000123f390[tooltip="24 -> 128\nProbability 50.00%" ];
	Node0x60000123f340:s1 -> Node0x60000123f3e0[tooltip="24 -> 139\nProbability 50.00%" ];
	Node0x60000123f390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{128:\l|  %129 = load ptr, ptr %3, align 8\l  %130 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %129, i32\l... 0, i32 0\l  %131 = load ptr, ptr %130, align 8\l  %132 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %131, i32 0, i32 5\l  store i32 36, ptr %132, align 8\l  %133 = load ptr, ptr %3, align 8\l  %134 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %133, i32\l... 0, i32 0\l  %135 = load ptr, ptr %134, align 8\l  %136 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %135, i32 0, i32 0\l  %137 = load ptr, ptr %136, align 8\l  %138 = load ptr, ptr %3, align 8\l  call void %137(ptr noundef %138)\l  br label %139\l}"];
	Node0x60000123f390 -> Node0x60000123f3e0[tooltip="128 -> 139\nProbability 100.00%" ];
	Node0x60000123f3e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{139:\l|  %140 = getelementptr inbounds [12 x i8], ptr %6, i64 0, i64 0\l  %141 = load ptr, ptr %4, align 8\l  %142 = getelementptr inbounds %struct.bmp_dest_struct, ptr %141, i32 0, i32 0\l  %143 = getelementptr inbounds %struct.djpeg_dest_struct, ptr %142, i32 0,\l... i32 3\l  %144 = load ptr, ptr %143, align 8\l  %145 = call i64 @\"\\01_fwrite\"(ptr noundef %140, i64 noundef 1, i64 noundef\l... 12, ptr noundef %144)\l  %146 = icmp ne i64 %145, 12\l  br i1 %146, label %147, label %158\l|{<s0>T|<s1>F}}"];
	Node0x60000123f3e0:s0 -> Node0x60000123f430[tooltip="139 -> 147\nProbability 50.00%" ];
	Node0x60000123f3e0:s1 -> Node0x60000123f480[tooltip="139 -> 158\nProbability 50.00%" ];
	Node0x60000123f430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{147:\l|  %148 = load ptr, ptr %3, align 8\l  %149 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %148, i32\l... 0, i32 0\l  %150 = load ptr, ptr %149, align 8\l  %151 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %150, i32 0, i32 5\l  store i32 36, ptr %151, align 8\l  %152 = load ptr, ptr %3, align 8\l  %153 = getelementptr inbounds %struct.jpeg_decompress_struct, ptr %152, i32\l... 0, i32 0\l  %154 = load ptr, ptr %153, align 8\l  %155 = getelementptr inbounds %struct.jpeg_error_mgr, ptr %154, i32 0, i32 0\l  %156 = load ptr, ptr %155, align 8\l  %157 = load ptr, ptr %3, align 8\l  call void %156(ptr noundef %157)\l  br label %158\l}"];
	Node0x60000123f430 -> Node0x60000123f480[tooltip="147 -> 158\nProbability 100.00%" ];
	Node0x60000123f480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{158:\l|  %159 = load i32, ptr %10, align 4\l  %160 = icmp sgt i32 %159, 0\l  br i1 %160, label %161, label %165\l|{<s0>T|<s1>F}}"];
	Node0x60000123f480:s0 -> Node0x60000123f4d0[tooltip="158 -> 161\nProbability 62.50%" ];
	Node0x60000123f480:s1 -> Node0x60000123f520[tooltip="158 -> 165\nProbability 37.50%" ];
	Node0x60000123f4d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{161:\l|  %162 = load ptr, ptr %3, align 8\l  %163 = load ptr, ptr %4, align 8\l  %164 = load i32, ptr %10, align 4\l  call void @write_colormap(ptr noundef %162, ptr noundef %163, i32 noundef\l... %164, i32 noundef 3)\l  br label %165\l}"];
	Node0x60000123f4d0 -> Node0x60000123f520[tooltip="161 -> 165\nProbability 100.00%" ];
	Node0x60000123f520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{165:\l|  ret void\l}"];
}
