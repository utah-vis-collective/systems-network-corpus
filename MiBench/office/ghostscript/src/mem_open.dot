digraph "CFG for 'mem_open' function" {
	label="CFG for 'mem_open' function";

	Node0x6000008b7660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{1:\l|  %2 = alloca i32, align 4\l  %3 = alloca ptr, align 8\l  %4 = alloca i64, align 8\l  store ptr %0, ptr %3, align 8\l  %5 = load ptr, ptr %3, align 8\l  %6 = getelementptr inbounds %struct.gx_device_memory_s, ptr %5, i32 0, i32 28\l  %7 = load ptr, ptr %6, align 8\l  %8 = icmp ne ptr %7, null\l  br i1 %8, label %9, label %47\l|{<s0>T|<s1>F}}"];
	Node0x6000008b7660:s0 -> Node0x6000008b76b0[tooltip="1 -> 9\nProbability 62.50%" ];
	Node0x6000008b7660:s1 -> Node0x6000008b7840[tooltip="1 -> 47\nProbability 37.50%" ];
	Node0x6000008b76b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{9:\l|  %10 = load ptr, ptr %3, align 8\l  %11 = load ptr, ptr %3, align 8\l  %12 = getelementptr inbounds %struct.gx_device_memory_s, ptr %11, i32 0, i32\l... 8\l  %13 = load i32, ptr %12, align 8\l  %14 = load ptr, ptr %3, align 8\l  %15 = getelementptr inbounds %struct.gx_device_memory_s, ptr %14, i32 0, i32\l... 9\l  %16 = load i32, ptr %15, align 4\l  %17 = call i64 @gdev_mem_data_size(ptr noundef %10, i32 noundef %13, i32\l... noundef %16)\l  store i64 %17, ptr %4, align 8\l  %18 = load i64, ptr %4, align 8\l  %19 = trunc i64 %18 to i32\l  %20 = zext i32 %19 to i64\l  %21 = load i64, ptr %4, align 8\l  %22 = icmp ne i64 %20, %21\l  br i1 %22, label %23, label %24\l|{<s0>T|<s1>F}}"];
	Node0x6000008b76b0:s0 -> Node0x6000008b7700[tooltip="9 -> 23\nProbability 50.00%" ];
	Node0x6000008b76b0:s1 -> Node0x6000008b7750[tooltip="9 -> 24\nProbability 50.00%" ];
	Node0x6000008b7700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{23:\l|  store i32 -13, ptr %2, align 4\l  br label %64\l}"];
	Node0x6000008b7700 -> Node0x6000008b7890[tooltip="23 -> 64\nProbability 100.00%" ];
	Node0x6000008b7750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{24:\l|  %25 = load ptr, ptr %3, align 8\l  %26 = getelementptr inbounds %struct.gx_device_memory_s, ptr %25, i32 0, i32\l... 28\l  %27 = load ptr, ptr %26, align 8\l  %28 = getelementptr inbounds %struct.gs_memory_s, ptr %27, i32 0, i32 0\l  %29 = getelementptr inbounds %struct.gs_memory_procs_s, ptr %28, i32 0, i32 0\l  %30 = load ptr, ptr %29, align 8\l  %31 = load ptr, ptr %3, align 8\l  %32 = getelementptr inbounds %struct.gx_device_memory_s, ptr %31, i32 0, i32\l... 28\l  %33 = load ptr, ptr %32, align 8\l  %34 = load i64, ptr %4, align 8\l  %35 = trunc i64 %34 to i32\l  %36 = call ptr %30(ptr noundef %33, i32 noundef %35, ptr noundef @.str.1)\l  %37 = load ptr, ptr %3, align 8\l  %38 = getelementptr inbounds %struct.gx_device_memory_s, ptr %37, i32 0, i32\l... 26\l  store ptr %36, ptr %38, align 8\l  %39 = load ptr, ptr %3, align 8\l  %40 = getelementptr inbounds %struct.gx_device_memory_s, ptr %39, i32 0, i32\l... 26\l  %41 = load ptr, ptr %40, align 8\l  %42 = icmp eq ptr %41, null\l  br i1 %42, label %43, label %44\l|{<s0>T|<s1>F}}"];
	Node0x6000008b7750:s0 -> Node0x6000008b77a0[tooltip="24 -> 43\nProbability 37.50%" ];
	Node0x6000008b7750:s1 -> Node0x6000008b77f0[tooltip="24 -> 44\nProbability 62.50%" ];
	Node0x6000008b77a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{43:\l|  store i32 -25, ptr %2, align 4\l  br label %64\l}"];
	Node0x6000008b77a0 -> Node0x6000008b7890[tooltip="43 -> 64\nProbability 100.00%" ];
	Node0x6000008b77f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{44:\l|  %45 = load ptr, ptr %3, align 8\l  %46 = getelementptr inbounds %struct.gx_device_memory_s, ptr %45, i32 0, i32\l... 25\l  store i32 0, ptr %46, align 4\l  br label %47\l}"];
	Node0x6000008b77f0 -> Node0x6000008b7840[tooltip="44 -> 47\nProbability 100.00%" ];
	Node0x6000008b7840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{47:\l|  %48 = load ptr, ptr %3, align 8\l  %49 = load ptr, ptr %3, align 8\l  %50 = getelementptr inbounds %struct.gx_device_memory_s, ptr %49, i32 0, i32\l... 26\l  %51 = load ptr, ptr %50, align 8\l  %52 = load ptr, ptr %3, align 8\l  %53 = load ptr, ptr %3, align 8\l  %54 = getelementptr inbounds %struct.gx_device_memory_s, ptr %53, i32 0, i32\l... 8\l  %55 = load i32, ptr %54, align 8\l  %56 = load ptr, ptr %3, align 8\l  %57 = getelementptr inbounds %struct.gx_device_memory_s, ptr %56, i32 0, i32\l... 9\l  %58 = load i32, ptr %57, align 4\l  %59 = call i64 @mem_bitmap_bits_size(ptr noundef %52, i32 noundef %55, i32\l... noundef %58)\l  %60 = getelementptr inbounds i8, ptr %51, i64 %59\l  %61 = load ptr, ptr %3, align 8\l  %62 = getelementptr inbounds %struct.gx_device_memory_s, ptr %61, i32 0, i32\l... 26\l  %63 = load ptr, ptr %62, align 8\l  call void @mem_set_line_ptrs(ptr noundef %48, ptr noundef %60, ptr noundef\l... %63)\l  store i32 0, ptr %2, align 4\l  br label %64\l}"];
	Node0x6000008b7840 -> Node0x6000008b7890[tooltip="47 -> 64\nProbability 100.00%" ];
	Node0x6000008b7890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{64:\l|  %65 = load i32, ptr %2, align 4\l  ret i32 %65\l}"];
}
