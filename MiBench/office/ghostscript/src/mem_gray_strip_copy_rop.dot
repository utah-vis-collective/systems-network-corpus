digraph "CFG for 'mem_gray_strip_copy_rop' function" {
	label="CFG for 'mem_gray_strip_copy_rop' function";

	Node0x600001f0e670 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{15:\l|  %16 = alloca i32, align 4\l  %17 = alloca ptr, align 8\l  %18 = alloca ptr, align 8\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i64, align 8\l  %22 = alloca ptr, align 8\l  %23 = alloca ptr, align 8\l  %24 = alloca ptr, align 8\l  %25 = alloca i32, align 4\l  %26 = alloca i32, align 4\l  %27 = alloca i32, align 4\l  %28 = alloca i32, align 4\l  %29 = alloca i32, align 4\l  %30 = alloca i32, align 4\l  %31 = alloca i32, align 4\l  %32 = alloca [2 x i64], align 8\l  %33 = alloca ptr, align 8\l  %34 = alloca [2 x i64], align 8\l  %35 = alloca ptr, align 8\l  %36 = alloca %struct.gx_strip_bitmap_s, align 8\l  %37 = alloca ptr, align 8\l  %38 = alloca i64, align 8\l  %39 = alloca i32, align 4\l  %40 = alloca i32, align 4\l  %41 = alloca i64, align 8\l  %42 = alloca i32, align 4\l  store ptr %0, ptr %17, align 8\l  store ptr %1, ptr %18, align 8\l  store i32 %2, ptr %19, align 4\l  store i32 %3, ptr %20, align 4\l  store i64 %4, ptr %21, align 8\l  store ptr %5, ptr %22, align 8\l  store ptr %6, ptr %23, align 8\l  store ptr %7, ptr %24, align 8\l  store i32 %8, ptr %25, align 4\l  store i32 %9, ptr %26, align 4\l  store i32 %10, ptr %27, align 4\l  store i32 %11, ptr %28, align 4\l  store i32 %12, ptr %29, align 4\l  store i32 %13, ptr %30, align 4\l  store i32 %14, ptr %31, align 4\l  %43 = load ptr, ptr %22, align 8\l  store ptr %43, ptr %33, align 8\l  %44 = load ptr, ptr %24, align 8\l  store ptr %44, ptr %35, align 8\l  %45 = load ptr, ptr %23, align 8\l  store ptr %45, ptr %37, align 8\l  %46 = load ptr, ptr %17, align 8\l  %47 = getelementptr inbounds %struct.gx_device_s, ptr %46, i32 0, i32 7\l  %48 = getelementptr inbounds %struct.gx_device_color_info_s, ptr %47, i32 0,\l... i32 1\l  %49 = load i32, ptr %48, align 4\l  store i32 %49, ptr %39, align 4\l  %50 = load i32, ptr %39, align 4\l  %51 = ashr i32 %50, 1\l  store i32 %51, ptr %40, align 4\l  %52 = load i32, ptr %39, align 4\l  %53 = shl i32 1, %52\l  %54 = sub nsw i32 %53, 1\l  %55 = sext i32 %54 to i64\l  store i64 %55, ptr %41, align 8\l  %56 = load ptr, ptr %22, align 8\l  %57 = icmp ne ptr %56, null\l  br i1 %57, label %58, label %83\l|{<s0>T|<s1>F}}"];
	Node0x600001f0e670:s0 -> Node0x600001f0e760[tooltip="15 -> 58\nProbability 62.50%" ];
	Node0x600001f0e670:s1 -> Node0x600001f0e850[tooltip="15 -> 83\nProbability 37.50%" ];
	Node0x600001f0e760 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{58:\l|  %59 = load ptr, ptr %22, align 8\l  %60 = getelementptr inbounds i64, ptr %59, i64 0\l  %61 = load i64, ptr %60, align 8\l  %62 = load ptr, ptr %22, align 8\l  %63 = getelementptr inbounds i64, ptr %62, i64 1\l  %64 = load i64, ptr %63, align 8\l  %65 = or i64 %61, %64\l  %66 = load i64, ptr %41, align 8\l  %67 = xor i64 %66, -1\l  %68 = and i64 %65, %67\l  %69 = icmp ne i64 %68, 0\l  br i1 %69, label %70, label %71\l|{<s0>T|<s1>F}}"];
	Node0x600001f0e760:s0 -> Node0x600001f0e7b0[tooltip="58 -> 70\nProbability 62.50%" ];
	Node0x600001f0e760:s1 -> Node0x600001f0e800[tooltip="58 -> 71\nProbability 37.50%" ];
	Node0x600001f0e7b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{70:\l|  store i32 -15, ptr %16, align 4\l  br label %210\l}"];
	Node0x600001f0e7b0 -> Node0x600001f0ecb0[tooltip="70 -> 210\nProbability 100.00%" ];
	Node0x600001f0e800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{71:\l|  %72 = load ptr, ptr %22, align 8\l  %73 = getelementptr inbounds i64, ptr %72, i64 0\l  %74 = load i64, ptr %73, align 8\l  %75 = and i64 %74, 1\l  %76 = getelementptr inbounds [2 x i64], ptr %32, i64 0, i64 0\l  store i64 %75, ptr %76, align 8\l  %77 = load ptr, ptr %22, align 8\l  %78 = getelementptr inbounds i64, ptr %77, i64 1\l  %79 = load i64, ptr %78, align 8\l  %80 = and i64 %79, 1\l  %81 = getelementptr inbounds [2 x i64], ptr %32, i64 0, i64 1\l  store i64 %80, ptr %81, align 8\l  %82 = getelementptr inbounds [2 x i64], ptr %32, i64 0, i64 0\l  store ptr %82, ptr %33, align 8\l  br label %83\l}"];
	Node0x600001f0e800 -> Node0x600001f0e850[tooltip="71 -> 83\nProbability 100.00%" ];
	Node0x600001f0e850 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{83:\l|  %84 = load ptr, ptr %23, align 8\l  %85 = icmp ne ptr %84, null\l  br i1 %85, label %86, label %111\l|{<s0>T|<s1>F}}"];
	Node0x600001f0e850:s0 -> Node0x600001f0e8a0[tooltip="83 -> 86\nProbability 62.50%" ];
	Node0x600001f0e850:s1 -> Node0x600001f0e8f0[tooltip="83 -> 111\nProbability 37.50%" ];
	Node0x600001f0e8a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{86:\l|  %87 = load ptr, ptr %23, align 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %87, i64 40,\l... i1 false)\l  %88 = load i32, ptr %40, align 4\l  %89 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32 2\l  %90 = getelementptr inbounds %struct.gs_int_point_s, ptr %89, i32 0, i32 0\l  %91 = load i32, ptr %90, align 4\l  %92 = shl i32 %91, %88\l  store i32 %92, ptr %90, align 4\l  %93 = load i32, ptr %40, align 4\l  %94 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32 4\l  %95 = load i16, ptr %94, align 8\l  %96 = zext i16 %95 to i32\l  %97 = shl i32 %96, %93\l  %98 = trunc i32 %97 to i16\l  store i16 %98, ptr %94, align 8\l  %99 = load i32, ptr %40, align 4\l  %100 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 7\l  %101 = load i16, ptr %100, align 2\l  %102 = zext i16 %101 to i32\l  %103 = shl i32 %102, %99\l  %104 = trunc i32 %103 to i16\l  store i16 %104, ptr %100, align 2\l  %105 = load i32, ptr %40, align 4\l  %106 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 6\l  %107 = load i16, ptr %106, align 4\l  %108 = zext i16 %107 to i32\l  %109 = shl i32 %108, %105\l  %110 = trunc i32 %109 to i16\l  store i16 %110, ptr %106, align 4\l  store ptr %36, ptr %37, align 8\l  br label %111\l}"];
	Node0x600001f0e8a0 -> Node0x600001f0e8f0[tooltip="86 -> 111\nProbability 100.00%" ];
	Node0x600001f0e8f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70" fontname="Courier",label="{111:\l|  %112 = load ptr, ptr %24, align 8\l  %113 = icmp ne ptr %112, null\l  br i1 %113, label %114, label %167\l|{<s0>T|<s1>F}}"];
	Node0x600001f0e8f0:s0 -> Node0x600001f0e940[tooltip="111 -> 114\nProbability 62.50%" ];
	Node0x600001f0e8f0:s1 -> Node0x600001f0eb70[tooltip="111 -> 167\nProbability 37.50%" ];
	Node0x600001f0e940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170" fontname="Courier",label="{114:\l|  %115 = load ptr, ptr %24, align 8\l  %116 = getelementptr inbounds i64, ptr %115, i64 0\l  %117 = load i64, ptr %116, align 8\l  %118 = load ptr, ptr %24, align 8\l  %119 = getelementptr inbounds i64, ptr %118, i64 1\l  %120 = load i64, ptr %119, align 8\l  %121 = icmp ne i64 %117, %120\l  br i1 %121, label %122, label %123\l|{<s0>T|<s1>F}}"];
	Node0x600001f0e940:s0 -> Node0x600001f0e990[tooltip="114 -> 122\nProbability 50.00%" ];
	Node0x600001f0e940:s1 -> Node0x600001f0e9e0[tooltip="114 -> 123\nProbability 50.00%" ];
	Node0x600001f0e990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{122:\l|  store i32 -15, ptr %16, align 4\l  br label %210\l}"];
	Node0x600001f0e990 -> Node0x600001f0ecb0[tooltip="122 -> 210\nProbability 100.00%" ];
	Node0x600001f0e9e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{123:\l|  %124 = load ptr, ptr %24, align 8\l  %125 = getelementptr inbounds i64, ptr %124, i64 0\l  %126 = load i64, ptr %125, align 8\l  %127 = icmp ne i64 %126, 0\l  br i1 %127, label %128, label %158\l|{<s0>T|<s1>F}}"];
	Node0x600001f0e9e0:s0 -> Node0x600001f0ea30[tooltip="123 -> 128\nProbability 62.50%" ];
	Node0x600001f0e9e0:s1 -> Node0x600001f0ead0[tooltip="123 -> 158\nProbability 37.50%" ];
	Node0x600001f0ea30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cc403a70" fontname="Courier",label="{128:\l|  %129 = load ptr, ptr %24, align 8\l  %130 = getelementptr inbounds i64, ptr %129, i64 0\l  %131 = load i64, ptr %130, align 8\l  %132 = load i64, ptr %41, align 8\l  %133 = icmp ne i64 %131, %132\l  br i1 %133, label %134, label %158\l|{<s0>T|<s1>F}}"];
	Node0x600001f0ea30:s0 -> Node0x600001f0ea80[tooltip="128 -> 134\nProbability 50.00%" ];
	Node0x600001f0ea30:s1 -> Node0x600001f0ead0[tooltip="128 -> 158\nProbability 50.00%" ];
	Node0x600001f0ea80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{134:\l|  store ptr null, ptr %35, align 8\l  %135 = load ptr, ptr %24, align 8\l  %136 = getelementptr inbounds i64, ptr %135, i64 0\l  %137 = load i64, ptr %136, align 8\l  %138 = trunc i64 %137 to i8\l  %139 = zext i8 %138 to i32\l  %140 = load i32, ptr %39, align 4\l  %141 = sub nsw i32 8, %140\l  %142 = shl i32 %139, %141\l  %143 = trunc i32 %142 to i8\l  store i8 %143, ptr %38, align 8\l  %144 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 0\l  store ptr %38, ptr %144, align 8\l  %145 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 1\l  store i32 4, ptr %145, align 8\l  %146 = load i32, ptr %39, align 4\l  %147 = trunc i32 %146 to i16\l  %148 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 4\l  store i16 %147, ptr %148, align 8\l  %149 = zext i16 %147 to i32\l  %150 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 2\l  %151 = getelementptr inbounds %struct.gs_int_point_s, ptr %150, i32 0, i32 0\l  store i32 %149, ptr %151, align 4\l  %152 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 5\l  store i16 1, ptr %152, align 2\l  %153 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 2\l  %154 = getelementptr inbounds %struct.gs_int_point_s, ptr %153, i32 0, i32 1\l  store i32 1, ptr %154, align 4\l  %155 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 3\l  store i64 0, ptr %155, align 8\l  %156 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 6\l  store i16 0, ptr %156, align 4\l  %157 = getelementptr inbounds %struct.gx_strip_bitmap_s, ptr %36, i32 0, i32\l... 7\l  store i16 0, ptr %157, align 2\l  store ptr %36, ptr %37, align 8\l  br label %166\l}"];
	Node0x600001f0ea80 -> Node0x600001f0eb20[tooltip="134 -> 166\nProbability 100.00%" ];
	Node0x600001f0ead0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{158:\l|  %159 = load ptr, ptr %24, align 8\l  %160 = getelementptr inbounds i64, ptr %159, i64 0\l  %161 = load i64, ptr %160, align 8\l  %162 = and i64 %161, 1\l  %163 = getelementptr inbounds [2 x i64], ptr %34, i64 0, i64 1\l  store i64 %162, ptr %163, align 8\l  %164 = getelementptr inbounds [2 x i64], ptr %34, i64 0, i64 0\l  store i64 %162, ptr %164, align 8\l  %165 = getelementptr inbounds [2 x i64], ptr %34, i64 0, i64 0\l  store ptr %165, ptr %35, align 8\l  br label %166\l}"];
	Node0x600001f0ead0 -> Node0x600001f0eb20[tooltip="158 -> 166\nProbability 100.00%" ];
	Node0x600001f0eb20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{166:\l|  br label %167\l}"];
	Node0x600001f0eb20 -> Node0x600001f0eb70[tooltip="166 -> 167\nProbability 100.00%" ];
	Node0x600001f0eb70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{167:\l|  %168 = load i32, ptr %40, align 4\l  %169 = load ptr, ptr %17, align 8\l  %170 = getelementptr inbounds %struct.gx_device_s, ptr %169, i32 0, i32 8\l  %171 = load i32, ptr %170, align 8\l  %172 = shl i32 %171, %168\l  store i32 %172, ptr %170, align 8\l  %173 = load ptr, ptr %17, align 8\l  %174 = load ptr, ptr %18, align 8\l  %175 = load ptr, ptr %33, align 8\l  %176 = icmp eq ptr %175, null\l  br i1 %176, label %177, label %181\l|{<s0>T|<s1>F}}"];
	Node0x600001f0eb70:s0 -> Node0x600001f0ebc0[tooltip="167 -> 177\nProbability 37.50%" ];
	Node0x600001f0eb70:s1 -> Node0x600001f0ec10[tooltip="167 -> 181\nProbability 62.50%" ];
	Node0x600001f0ebc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770" fontname="Courier",label="{177:\l|  %178 = load i32, ptr %19, align 4\l  %179 = load i32, ptr %40, align 4\l  %180 = shl i32 %178, %179\l  br label %183\l}"];
	Node0x600001f0ebc0 -> Node0x600001f0ec60[tooltip="177 -> 183\nProbability 100.00%" ];
	Node0x600001f0ec10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470" fontname="Courier",label="{181:\l|  %182 = load i32, ptr %19, align 4\l  br label %183\l}"];
	Node0x600001f0ec10 -> Node0x600001f0ec60[tooltip="181 -> 183\nProbability 100.00%" ];
	Node0x600001f0ec60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{183:\l|  %184 = phi i32 [ %180, %177 ], [ %182, %181 ]\l  %185 = load i32, ptr %20, align 4\l  %186 = load i64, ptr %21, align 8\l  %187 = load ptr, ptr %33, align 8\l  %188 = load ptr, ptr %37, align 8\l  %189 = load ptr, ptr %35, align 8\l  %190 = load i32, ptr %25, align 4\l  %191 = load i32, ptr %40, align 4\l  %192 = shl i32 %190, %191\l  %193 = load i32, ptr %26, align 4\l  %194 = load i32, ptr %27, align 4\l  %195 = load i32, ptr %40, align 4\l  %196 = shl i32 %194, %195\l  %197 = load i32, ptr %28, align 4\l  %198 = load i32, ptr %29, align 4\l  %199 = load i32, ptr %40, align 4\l  %200 = shl i32 %198, %199\l  %201 = load i32, ptr %30, align 4\l  %202 = load i32, ptr %31, align 4\l  %203 = call i32 @mem_mono_strip_copy_rop(ptr noundef %173, ptr noundef %174,\l... i32 noundef %184, i32 noundef %185, i64 noundef %186, ptr noundef %187, ptr\l... noundef %188, ptr noundef %189, i32 noundef %192, i32 noundef %193, i32\l... noundef %196, i32 noundef %197, i32 noundef %200, i32 noundef %201, i32\l... noundef %202)\l  store i32 %203, ptr %42, align 4\l  %204 = load i32, ptr %40, align 4\l  %205 = load ptr, ptr %17, align 8\l  %206 = getelementptr inbounds %struct.gx_device_s, ptr %205, i32 0, i32 8\l  %207 = load i32, ptr %206, align 8\l  %208 = ashr i32 %207, %204\l  store i32 %208, ptr %206, align 8\l  %209 = load i32, ptr %42, align 4\l  store i32 %209, ptr %16, align 4\l  br label %210\l}"];
	Node0x600001f0ec60 -> Node0x600001f0ecb0[tooltip="183 -> 210\nProbability 100.00%" ];
	Node0x600001f0ecb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{210:\l|  %211 = load i32, ptr %16, align 4\l  ret i32 %211\l}"];
}
